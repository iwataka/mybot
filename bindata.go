// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/js/config.js
// assets/js/typeahead.js
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6a\xeb\x40\x0c\x46\xdf\xbd\x0a\x6d\x60\x4c\x20\x17\x6e\x99\x40\xf6\x22\x8f\x14\x67\x5a\x47\x1a\x64\x25\x4d\x5a\xba\xf7\x62\xc7\x31\x53\x28\xa1\x7e\xf0\xd3\xd1\xd1\xcf\x37\x9d\xd2\x0d\x3e\x1b\x58\xbe\x82\x44\x59\xfa\xe0\x5a\x22\xfc\xdf\x94\xeb\xae\xf9\x6a\x9a\xf6\xf5\x7c\xea\xd4\x4d\xa5\x42\x3b\x4c\x6f\xbd\xe9\x59\x28\x24\x1d\xd4\x22\xb8\xa1\x8c\x05\x8d\xc5\x77\x2b\xe6\x7c\xf5\x80\x43\xee\x25\x42\x62\x71\xb6\xbb\x32\xa9\x38\x66\x61\xab\x94\x27\xbc\x86\xf7\x4c\x7e\x8c\xf0\xb2\x79\x34\xa7\x7c\xa9\xfa\x23\x8c\x05\xa5\x3d\x60\x55\x76\x50\xf1\x30\xe6\x0f\x8e\xf0\xef\x51\x55\x8c\xeb\x59\xd5\x88\x2d\x82\xa8\xf0\xee\xaf\x1b\x4c\x53\x1e\x30\x60\xf2\x7c\xa9\x65\x0b\x4b\x4a\x3d\x5b\x37\x9c\x79\x45\x0b\x8e\xe3\xaf\x6c\x6f\x7c\x9b\x29\xc7\x6e\x60\xd8\x83\x1f\x19\xe9\xe9\x31\x71\xc8\x89\x57\xfb\x5c\xd7\xce\xff\x30\xba\xe5\xc2\x34\x59\xe6\xf4\xf6\xe0\xd6\x12\x0f\xec\x5c\x2b\xb5\x60\xca\x7e\x8b\xb0\x69\xb7\xcf\x76\x5e\x67\x9b\x0e\xed\xd8\x85\x29\x19\x16\xff\x91\x8b\xf5\x59\xee\x8f\x62\xbb\x5c\xf8\x3b\x00\x00\xff\xff\x0a\xc5\xa6\x4c\x39\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1503580372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfigJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x73\x5a\x39\x64\xa3\xf4\x5c\xd7\x97\xd2\x42\x03\x6d\x28\x4b\x7a\x2a\xa5\x28\xd2\x64\x2d\xaa\x8c\x8c\x34\x8a\x59\x8a\xff\x7b\x91\xed\x6c\xed\x6d\xa1\x39\x57\xa7\x01\x7d\xef\xe9\xe9\x21\x9d\x12\x69\xb6\x9e\xc0\xa0\x43\xc6\x07\xdf\x95\xc7\xc4\xec\xe9\x1e\xce\xde\x28\xb7\x82\x9f\x05\x00\xc0\x45\x05\xe0\x00\x35\x8c\xbb\xb2\x55\x01\x89\xf7\xde\xe0\x6c\xac\x06\xd4\x9e\xa0\xe4\x20\xb5\x53\x31\xee\xd5\x19\xa1\xae\x6b\x10\xa3\xbf\x11\x57\xc3\xbc\x4e\x3e\x40\x99\x9d\x2d\xd4\xf0\xaa\x02\x0b\x6f\x20\x2b\x1b\xeb\x4c\xf6\x8b\xd2\x21\x3d\x72\x53\x81\x5d\xaf\xe7\xc2\x6b\xa2\x81\x84\x7a\x29\xfa\x6a\xbf\x2d\xc0\x9c\x67\xd8\x95\xfc\xd4\x4e\x69\x1a\x6b\x0c\x92\x80\xbb\xbb\xd1\x43\x92\x37\xf8\x3b\xec\x6e\xff\xf9\xcb\x41\xbc\x3c\x31\xaf\x91\xbe\x28\x97\x10\x6a\x10\x27\xe5\x22\x8a\xea\x0f\x6c\x79\x7f\x10\x7f\x41\xa6\x22\x2d\x11\x86\x0f\x87\x4f\x1f\x33\xf6\x6e\x28\xe9\x05\xdc\x17\xcb\xa9\x07\x74\x11\xff\xab\x1a\x39\xa4\x5b\x5a\xbc\xbe\xa1\xdb\xca\x7c\xc0\x0b\x06\xfe\x57\x99\x45\x5f\x14\xcf\x9f\xc0\xb7\x48\x3b\xda\x63\x77\x50\xc7\x72\xfe\xf4\xa3\x0e\x88\x34\xe5\x30\x5e\xa7\x33\x12\xcb\x47\xe4\xf7\x0e\xf3\xf8\xf6\x69\x67\x4a\x11\x51\x05\xdd\x6c\xb8\xb3\xcc\x18\x36\x4a\x6b\x9f\x88\x37\x96\xda\xc4\x62\x35\x5e\xb7\x7a\xf6\x4c\xc1\xe5\x98\x0d\x73\x1b\x5f\x6f\xb7\x93\x4a\x6a\x7f\xde\x0a\x58\xcf\x8e\x1c\x25\x9d\x25\xe3\x3b\x99\x23\x96\x29\xb8\x7b\x10\xdf\x8f\x4e\xd1\x0f\xb1\xaa\x8a\xbe\xf8\x15\x00\x00\xff\xff\x9c\x94\x85\x5a\xc8\x03\x00\x00")

func assetsJsConfigJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfigJs,
		"assets/js/config.js",
	)
}

func assetsJsConfigJs() (*asset, error) {
	bytes, err := assetsJsConfigJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config.js", size: 968, mode: os.FileMode(420), modTime: time.Unix(1511452897, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsTypeaheadJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4f\x8b\xd4\x40\x10\xc5\xef\xf9\x14\x45\x54\x7a\x06\x66\x13\x10\x4f\x71\x32\x8a\x20\x78\x54\x59\x0f\xa2\x32\xf4\xa6\xcb\xa4\xb5\xff\x6d\x57\xf5\x84\x18\xf2\xdd\x25\x6d\xf6\x8f\xc7\xbd\x55\xbd\xdf\x0b\x2f\xf5\xfa\x22\x23\xdc\x20\xf1\x47\xdd\x71\x8a\x48\xd0\x82\xc3\x11\xde\x19\xef\xd5\xe0\x93\x53\xbb\xb9\x00\x50\x92\x93\xbd\xf6\xbf\xd1\xe9\x3f\x18\x9b\x47\xb8\xe2\x3b\x95\xaa\x71\xd0\x8c\x14\x64\x87\x87\x02\xe0\x36\x61\x9c\x9e\xf8\x4d\x44\xeb\x19\x1b\x58\x33\x01\x52\x34\x0d\x88\xaa\xaa\x79\xd4\xcc\x18\xeb\x44\x18\xa9\x26\x94\xb1\x1b\xea\x37\xb7\xed\x8b\x4f\x5f\xde\x7f\xfe\x2a\x0e\xd9\x3d\x6a\xa3\x3a\x19\x55\x03\x62\xd3\x0b\x80\xa5\x58\xf6\xaf\x8b\xe2\xf9\x4e\x3c\xe3\x29\xa0\x1c\x50\x2a\xa8\xee\x47\xb1\x7f\x98\x77\x2e\x19\x73\xc8\xd1\x4e\x5a\x6c\x40\xac\xbd\x5c\x85\xad\x98\x9c\xa2\x34\x05\x23\xa7\x06\x04\x75\x11\xd1\x9d\x57\x67\x26\xe4\x53\xec\xb0\xf9\xaf\xcb\x55\x67\xb4\xc1\x48\x46\xba\x3b\x0a\x6d\xe0\xa9\x81\x6f\x79\x01\x10\x47\xa5\x2f\xd0\x19\x49\xd4\x96\x99\x5d\x59\x24\x92\x3d\x96\xdb\x5d\x00\xe2\x7a\x0a\x08\xd2\x4d\x3c\x68\xd7\xc3\x80\x11\x1f\xd8\xb1\x56\xfa\x72\x12\x79\xfd\x51\xfd\xf2\xda\xed\xc4\x77\x27\xf6\xff\x0c\x94\xfa\x1e\x89\xb5\x77\x0d\x7c\x90\x4e\x19\xbc\x91\x91\xaa\xce\xdb\xa0\x0d\xee\x72\xfa\xe9\xa8\x6d\x0f\x14\xbb\xb6\x9c\xe7\x10\xfd\x4f\x6d\xf0\xac\xad\xec\xf1\x9c\xa2\x59\x96\x12\xa4\xe1\xb6\xdc\x08\x64\x52\xc2\x80\xba\x1f\xb8\x2d\x5f\xbd\x2c\x61\xd4\x8a\x87\x3c\xd6\xa7\x79\x5e\x3b\x59\x96\xb7\xf3\xfc\xa8\xa3\x65\xd9\xfe\x73\x7f\xff\x28\x7f\x03\x00\x00\xff\xff\xae\x9d\x47\x25\x7a\x02\x00\x00")

func assetsJsTypeaheadJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsTypeaheadJs,
		"assets/js/typeahead.js",
	)
}

func assetsJsTypeaheadJs() (*asset, error) {
	bytes, err := assetsJsTypeaheadJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/typeahead.js", size: 634, mode: os.FileMode(420), modTime: time.Unix(1511452256, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x6e\xdb\x30\x0c\xc6\xef\x79\x0a\x42\x40\x81\xf6\x30\x19\xc3\x76\x54\x0d\x0c\x05\x76\x2e\xda\xdc\x07\xd9\xa2\x17\x21\x9e\xe4\x49\x9c\x93\x22\xc8\xbb\x0f\xb1\xe4\xe5\x4f\xed\x4c\xce\xbc\xa3\x29\x91\x1f\x7f\x5f\x48\xc7\xbb\x9d\xc2\x4a\x1b\x04\x26\x4b\xd2\xd6\x7c\x2b\xad\xa9\xf4\x77\xb6\xdf\x2f\x84\xd2\x2d\x94\xb5\xf4\xfe\x91\x91\x2c\x6a\xfc\xe0\xd0\x37\xd6\x78\xdd\x22\xcb\x17\x00\x00\xa2\x8b\x9f\x5d\x82\x70\xd5\x93\xd3\x0d\xaa\xf8\x54\x58\xa7\xd0\xa1\x8a\x69\x21\x75\x85\x52\x1d\x9f\x43\xcc\x9d\x07\x42\x50\xe5\x22\x23\x35\x7c\x62\xe4\x0f\x1c\x3f\x6d\x65\xfd\x6b\xe0\x58\x64\xa7\x42\x22\xbb\x68\x45\x50\x61\xd5\xdb\x79\xca\x6e\xa7\x2b\xb0\x0e\xee\xf1\x27\xf0\xe5\x5b\x83\xc0\x7c\x2d\xcb\x35\x7b\x38\x0d\x6d\xb0\x58\x59\xbb\x66\x0f\xfb\x7d\x12\x18\x38\xbb\xf1\x8d\x34\x8f\xec\x23\xcb\x97\x1b\x4d\x84\x6e\x9c\x86\x36\x88\x34\x7e\xfc\x2e\x18\xfa\x2e\x57\x58\xae\x0b\xbb\x05\xfe\xa5\xfb\x85\x79\xd4\xe1\xcb\x43\x39\xb8\x6f\x9c\x36\x54\x01\xbb\xf3\x77\x9e\x01\x7f\x76\x58\xe9\x2d\x30\x1e\xe6\x81\x53\xbc\xdd\x89\xbf\x03\x8b\xfe\x5d\xf5\x37\xb4\x81\x46\x5d\xe4\x76\x96\x1e\xbd\x8b\x42\x6c\xb2\x75\x9f\x12\xac\x73\x38\xb3\x79\x2f\xa1\x60\xb2\x7d\xb1\x81\x9b\x0d\x1c\x5d\x8d\x4a\xb6\xd6\x69\xba\xb2\x04\x53\xd1\xbe\xc6\x8a\xc9\x6c\x7d\x0b\xf3\xc3\x95\xb6\xae\xb1\x13\xf3\x93\xf9\x6a\xed\x69\x89\x5b\x1a\x42\x7c\x3a\xd6\x4d\xa6\x3c\xe9\xe5\x7f\xae\x41\x78\xab\x4c\x5e\x82\xcf\x2c\x7f\x3d\x64\x8e\xdb\xd4\x68\xf3\xef\x33\xd2\x69\xf0\x67\x6d\xfe\x6a\x5b\xc7\xc1\x1b\x6d\xe6\x9f\x0a\x4f\xf2\xca\xaa\x4f\x43\x79\x25\xe9\x12\x59\x0e\xb2\xf3\xc3\x38\x94\x33\x0e\x78\x80\x7a\xe9\x6b\x26\x92\xfd\xe9\x61\xd6\xc1\x1e\x44\x1e\x79\xe9\xc3\x90\xee\xc5\xff\xe3\x95\xf9\x1e\x92\xef\xdd\x2b\x57\xd2\x18\xac\xe7\xf4\xf7\x29\x96\x4c\xb4\xb7\xef\xe0\x26\x77\x45\x76\xf2\x35\x22\xb2\xee\x7b\x2a\x5f\x88\x4c\xe9\x36\x5f\xf4\xdc\xbf\x03\x00\x00\xff\xff\x1e\x69\xb6\xee\xc6\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2502, mode: os.FileMode(420), modTime: time.Unix(1511190881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xdb\x3c\x0c\xbe\xe7\x57\xf0\x15\x50\xe0\xdd\x21\x0e\x50\x14\xdb\x0e\x8e\x81\xee\x90\xb5\x43\x8a\x05\x6d\xb7\x6b\xa2\xc4\xb4\xa3\x56\x96\x3c\x49\xf9\x82\x91\xff\x3e\xc8\x5f\x69\xda\xa4\xb1\x33\x1b\xe8\xad\x91\x45\xf2\x79\x1e\xd2\x24\xeb\x24\xf1\x31\x60\x02\x81\x04\x8c\x1b\x54\xe3\x99\x14\x01\x0b\xc9\x76\xdb\x71\x7d\xb6\x84\x19\xa7\x5a\xf7\x89\xa1\x53\x8e\x5d\x85\x3a\x96\x42\xb3\x25\x12\xaf\x03\x00\xe0\xa6\xe7\x7b\x97\x20\xbb\xaa\x8d\x62\x31\xfa\xf9\xaf\xa9\x54\x3e\x2a\xf4\x73\xb3\xcc\x74\x8e\xd4\xdf\xfd\xce\xce\xd4\xfe\x41\x76\xe8\x7b\x6e\xcf\xf8\x75\x9f\x08\x1a\xe1\xf1\xa7\x4b\xca\x17\x07\x1e\xbb\xbd\x97\x10\xdc\xde\x2b\x90\xae\x99\x4a\x7f\x53\x01\x74\x92\xb0\x00\xf0\x0f\x38\x8f\x9b\x18\x81\x98\x15\x33\x06\x95\x55\xf5\x00\x18\x50\x72\xa5\x63\x2a\xfa\xe4\x0b\x81\x99\xe4\xd9\xdf\x97\xc4\xfb\x8e\x02\x15\xe5\x87\x59\x24\x09\x72\x8d\xb0\x17\x47\x73\x3a\x7b\x3e\x19\xe5\xb2\x5e\x14\xe1\x1f\x76\xe8\xc5\xd4\x92\x12\xfa\xb8\xca\x6f\x0e\x33\x97\x9c\x69\xf3\x88\x6b\x33\x95\x6b\x70\x06\x69\xdd\x39\xa3\xdc\x19\xfc\x1f\x2b\x26\x4c\x00\xe4\x42\x5f\x68\x02\xce\x48\x61\xc0\xd6\x40\x9c\xac\x40\x9d\x22\x2a\xf9\x74\x08\xd6\x89\x8c\xc2\x7b\x55\x36\xa7\x1a\x22\xf4\x19\xad\x4d\x68\x2a\x25\x7f\x40\x8e\xb3\x3d\x4a\x37\x54\xdf\x59\x77\x27\x29\xcd\xa9\x1e\xa7\x81\xcf\xe6\x54\xad\xde\x8e\x32\x5f\x28\x0e\x8d\x66\xf3\xd7\xfd\xb0\x72\x42\x17\x8a\x8f\xdb\x4b\xaa\x42\xb3\x42\x34\xe8\x37\x94\xd4\xfb\xc2\xdf\x49\x5e\x65\xe4\xe6\x49\x05\x74\x29\x15\x33\x08\x66\xae\x50\xcf\x25\xaf\xcf\xce\x64\x19\xfb\x19\xdc\x0a\x33\x32\xaa\xe4\x37\xc8\x5d\x3f\x16\x9e\x4f\xf2\x2c\xc0\x8c\x4b\x30\x2d\x66\xb1\x05\xc6\x65\x46\xab\x53\x2e\xe1\xb4\xc9\x99\x53\x11\xd6\x24\xe9\x32\x11\x2f\x0c\x04\x52\x45\x7d\x22\x97\xa8\x56\x36\x31\x04\xcc\x26\xc6\x3e\xb1\x02\x10\xb0\x73\xb1\x4f\x92\x24\xa7\x38\xb1\x14\x27\x25\xc5\x49\x41\xd1\x46\x9f\x6c\xb7\x04\xd2\x49\x69\x0d\x0a\xbd\x86\x54\x84\xdb\x2d\x39\x00\xab\x52\xa3\x7a\x3b\x4f\xdc\xff\xba\x5d\xf8\xcd\x34\x93\x02\xae\x47\xb7\xd0\xed\x56\x53\x68\x37\xd1\xbe\x12\x2f\xb3\x3f\xaa\xd7\xde\xc4\x1b\xd2\x29\x1e\x99\x77\x35\xfb\x5c\x16\xd5\x49\x1d\x9e\xac\x9a\x65\x76\x99\xdb\xcb\x8d\x97\xcb\x4e\x8c\x2b\xe2\x0d\xe8\xec\x9d\xdd\x87\x8a\x10\x15\x70\xf6\x8c\x9c\xcd\xa5\xac\xfb\x26\x35\x58\x64\xb9\x22\x01\x9d\xa1\x93\xa2\x1a\xef\x50\x1d\x2e\xbe\x5c\x70\x4b\xd0\xb9\xb6\x16\xc3\xd2\xe0\xec\x9a\x3c\xfa\x06\x4e\xf9\x42\x29\xf4\x3f\x9c\x54\x39\xae\x57\x62\x4d\xde\x57\xeb\x5b\x66\xd4\xa6\x5e\x76\x59\x5e\x21\xfd\x78\xb5\x55\x00\xab\x55\x5e\x37\xb9\x51\x9b\x8a\x3d\xc9\xcd\x87\x13\xeb\x49\x6e\x6a\xe9\xf4\x43\x6e\x5a\x94\x68\xaf\x71\xdb\xf6\xdb\x64\xdf\xb6\xc7\x55\xdb\x76\xaa\x67\xe3\x5d\x7b\x7f\x2c\x09\x3f\xa2\xea\xb9\xd9\xc9\x94\xf9\xac\x3e\x9c\xb2\xfb\x2d\x33\x95\xa1\x6c\x94\xa5\x0c\x65\x65\x86\x32\x94\xe7\xb3\xb3\xab\x8a\x5d\x80\x16\x34\xc4\x33\x97\x95\x57\xff\x7e\x17\xde\x8e\xeb\x11\x31\x01\x1a\x85\x61\x11\x8a\xfa\xe5\x5f\xae\xbd\x03\x2e\xa9\xf9\x7c\xf5\x72\xf5\x2d\x62\x3b\x77\x4c\x3c\x14\x11\x4e\x0a\xc9\x0b\xab\x88\x89\x71\x09\xac\xf9\x05\x38\xa2\xeb\xd6\x79\xd3\xf5\x39\xbc\xe9\xfa\x1f\x79\xbb\xbd\x17\x5f\x92\xdc\x5e\xfa\x95\xcc\xeb\xb8\x3d\x9f\x2d\xbd\x4e\xb1\x23\xff\x0d\x00\x00\xff\xff\x1e\xb5\x5e\x46\x9c\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5020, mode: os.FileMode(420), modTime: time.Unix(1511189378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xdd\x6f\xdb\x38\x12\x7f\xcf\x5f\xc1\xe3\x2d\xae\x2d\x50\x59\x68\xfb\xb6\x67\x1b\x58\x24\xbb\x40\x1f\x36\xed\x35\xd9\x87\x7b\x0a\x28\x71\x6c\xb3\xa5\x48\x1d\x49\xc5\x31\x8c\xfc\xef\x07\x7e\x48\x91\x65\x49\x96\x93\x38\x9b\xa4\xf6\x43\x3f\xac\xe1\xf0\x37\x1f\x9c\xe1\x6f\x1c\x67\xbd\xa6\x30\x63\x02\x10\x4e\xa5\x98\xb1\x39\xbe\xbd\x3d\x19\xff\xe3\xec\xcb\xe9\xe5\x7f\xbf\xfe\x8e\x16\x26\xe3\xd3\x93\xb1\xfd\x0b\x71\x22\xe6\x13\x0c\x02\x4f\x4f\xd6\x6b\x03\x59\xce\x89\x01\x84\x17\x40\x28\x28\x8c\x46\x76\x61\x22\xe9\x6a\x7a\x82\x10\x42\x63\x9d\x2a\x96\x1b\xa4\x55\x3a\xc1\x31\xd1\x1a\x8c\x8e\xbf\xeb\xd8\xef\x32\xfa\xae\xf1\x74\x1c\x7b\x99\xe9\x89\x5f\x41\xd9\x35\x4a\x39\xd1\x7a\x62\xb1\x18\xc2\x04\x28\xec\xb5\xd9\x57\x7d\x53\x41\xae\x13\x12\x36\xad\x04\xea\x0a\xbe\x17\x59\x22\x8d\x92\xa2\xa6\xc0\xc9\x2c\x3e\x4c\x4f\x1d\x84\x42\x11\xc3\xa4\x18\xc7\x8b\x0f\x4d\x91\x8f\xa5\x16\x0e\x84\xe2\x4a\x1e\xd0\x4a\x16\x0a\xc9\xa5\x40\x89\x34\x6f\x34\xd2\xb2\x50\x29\xe8\xf7\x68\xc6\xb8\x01\xa5\x11\x11\x14\x91\xd4\xaa\xd5\xe3\x78\xf1\xb1\xa1\x77\x26\x55\x86\x18\x9d\x60\x79\x0d\x6a\xa9\x98\x01\x1c\xa4\x27\x38\xf8\x25\xc6\x28\x03\xb3\x90\x74\x82\x73\xa9\x0d\x46\x20\x52\xb3\xca\x61\x82\xb3\x82\x1b\x96\x13\x65\x62\xab\x26\xa2\xc4\x10\xeb\x41\xfb\x9f\xc6\x36\x4c\xe4\x85\x41\xf6\xc1\xc6\x4e\x5e\x8d\x2e\x92\x8c\x19\x8c\xae\x09\x2f\x60\x82\x2f\xc8\x35\xe0\xd2\xda\xc4\x08\x94\x18\x11\xf1\xb9\xfb\x2b\x57\x2c\x23\x6a\x85\x91\x36\x2b\x0e\x13\x4c\x99\xce\x39\x59\xfd\xca\x04\x67\x02\xf0\xf4\xa4\xc5\xba\xa6\x39\x33\xc6\xa1\x66\xd3\x1c\x4c\xb7\x3a\xd4\x78\x05\x43\x5a\x71\x9f\xc9\xa5\xe0\x92\xd0\x5d\xd8\x1b\xae\x09\xee\xda\x1f\xf8\x80\x60\x3c\x8a\x5d\x7f\xe5\xfb\x5b\xb5\xa5\xd3\x62\xc7\x48\x90\xcc\x22\x5d\x25\xd2\x8c\xc2\xd1\x1e\x04\xb1\x99\x53\xe3\x98\xb2\xeb\x9a\xcf\xd6\x6b\x36\x43\xa3\x3f\x41\x6b\x32\x87\xdb\xdb\xd6\xd3\x47\x38\x28\x83\xdc\x9f\x11\x25\x62\x6e\xcf\xf1\x7a\x7d\xb7\x28\xe8\xbc\x53\x09\x82\x6e\x9d\x64\x7b\x52\xac\x41\xc4\x56\x98\xca\x25\xce\xe1\x73\x25\x8b\x1c\x39\x9b\xfd\xbf\x9b\x36\xd4\xdd\x61\xe0\xc6\x54\xcb\x2b\x85\xee\x80\x44\xb6\xce\x28\xc9\x31\xca\x39\x49\x61\x21\x39\x05\x35\xc1\x97\xab\x1c\x10\x49\x53\x59\x08\xe3\xfc\x88\x16\xa0\x00\x3b\x44\x1a\x88\x4a\x17\x91\x59\x32\x63\x40\x45\x41\x2a\x72\x1b\x36\x51\xe8\x9c\x88\x72\xe3\x1a\xd8\x28\x31\xcd\xb2\xe4\xc4\x93\xc2\x18\x29\x9a\xb1\xa7\x30\x23\x05\x37\xe5\x01\xf6\x42\x18\x49\x91\x72\x96\xfe\x98\x60\x99\x83\xf8\x2c\xce\x61\x79\x49\x92\xb7\xef\xf0\xf4\x1c\x96\xc8\x90\x64\x1c\x7b\xc9\x66\x70\x2d\xa6\xee\xe0\x8e\x17\x9f\xa6\x97\xde\x34\x74\xc9\x32\xb0\xf9\x61\x4b\xd9\xa7\x69\x6b\x9c\x0d\x49\x38\x44\x0a\x74\x2e\x85\x66\xd7\x5b\xa9\xe4\x9e\x6f\x08\x23\xbf\x44\x1b\xc5\x72\xa0\xe1\x7f\x89\x54\x14\x14\xd0\x36\xa7\x18\x1b\xac\xed\xf7\xfd\x33\xd5\xfe\xc0\x3f\xa4\x53\x9d\x2a\x00\xe1\x22\xa8\xc7\xb1\xe9\x50\x53\x4a\xc3\x4d\xca\x0b\x0a\x48\x41\xce\xd9\x90\x05\x4c\x84\x05\x66\x80\xb0\x4b\x93\xdd\x62\xd2\x2c\x40\x0d\x50\xd7\x2d\x31\x8e\xdb\xdc\x32\x8e\x3b\x1c\x39\x36\x77\x3d\xbb\xf9\x5a\xaf\x95\x3d\xbc\xe8\x17\x26\x28\xdc\xbc\x47\xbf\x98\x90\x12\xe8\xd7\x09\x1a\xf9\xb6\x38\x0a\xe9\x32\xaa\xd2\xa5\x56\x13\x36\x37\xea\x8b\x56\x6f\xd3\x5a\x30\x4a\x41\x94\x25\x2d\x1c\xbd\x51\x09\x46\x8f\x28\x70\x30\x40\xab\x2a\x3a\x23\x5c\x03\x8e\xfb\x3d\xd8\xf9\xd0\x5b\xce\x99\x36\x97\x70\x63\x12\x79\x73\x67\xf7\xe8\xc2\x65\xd4\xb9\x4d\x28\xd4\x02\xc4\x27\xdc\x95\x4b\x38\xdc\xe1\x07\xe4\xa3\xb1\x23\xbe\x3b\xd0\x25\x52\xf2\x0b\xe0\x90\x36\xf0\xfd\xee\x73\xf8\x9b\x4f\xe1\x36\x88\x21\xcb\xaf\x42\x96\xff\x2d\x28\x3f\xfb\x83\xf3\xcd\xb4\x22\x0c\xc7\xea\x4a\x99\xc3\xa2\x33\x3e\xba\x5f\x66\x9f\x85\xf9\x6a\x54\x0d\xdf\xa9\x2b\xfc\x2d\xd0\xdc\x21\x3e\x20\xa8\xb2\x05\x6c\x96\xfa\x46\x43\x60\x62\x26\x31\xb2\x77\x8e\xc8\xc8\xf9\xdc\x36\xf4\x4c\x52\xc2\xcb\xf7\x88\x9a\x83\x99\xe0\x7f\x96\x2d\xaa\x82\x1f\xf9\x6b\xea\xd5\x7a\xed\x0f\xf4\xed\x6d\x4b\xc1\x6d\xbe\x28\x18\xc2\xb8\x76\x1d\xb0\x1f\x7b\x6b\xc3\x79\x6a\xe7\x84\xdb\xc6\x5d\x7b\xf4\xb5\xe1\x9b\x5c\xbe\x35\x0b\xa6\xdf\xa3\x37\x03\xdc\xf2\xe6\x1d\x9e\x9e\xb9\x75\x0f\x31\xaa\xbd\x10\xa3\xda\x7d\xa7\xdd\x0d\x3b\x9a\x5a\xbf\x8f\x5a\x2f\xb3\x95\xa9\x31\xa1\xb4\x71\xa9\xdd\x9d\x01\x7d\xf7\xd5\x73\x58\x6e\x85\xa0\xbc\xa5\xf6\xd4\x5f\xd4\x72\xcf\xdc\x7e\x7e\xff\x1e\xf8\x5c\x24\x3a\x7b\xf1\x76\xcf\x1d\xc7\xee\x2e\xd4\x77\xef\x7e\x84\x66\x5c\xbf\xbc\xb9\xa2\x81\x66\x84\x86\x9b\xed\x90\x7a\x61\x2f\x6c\xee\xdf\x13\x1c\x7d\xc0\x48\x49\x4f\x27\x08\x97\x73\x8c\x88\x62\x24\xe2\x24\x01\xce\x81\x26\xab\x41\x1a\x23\xc3\x0c\x6f\x65\x49\x4d\xa4\x51\xb9\x4d\xd8\x54\xa6\x45\x06\xa2\x2b\x81\xb7\x97\xdb\xab\x7e\xb7\x7c\xfb\x9a\x30\xdb\x78\x40\x5d\x4a\xb9\xd4\x10\x2a\x33\x65\x3a\x63\x95\x72\x3c\xfd\x97\xf5\x8b\xfe\xf7\xee\x1a\x83\xfc\xcd\x7c\x13\x9b\x77\xdc\xd0\xc8\x95\x7e\x3e\xf3\xe5\x7c\xf3\x4a\xbf\xb5\xd7\x26\x3d\xdb\xed\x27\x9b\xce\xbb\xbc\xb4\xf8\x34\xfd\xc3\xa1\xea\xdf\x1b\x35\x26\x3d\xc1\x92\x92\xc1\xbe\x15\xb0\xfc\x93\xe4\xc8\x71\x34\x5c\xf5\x68\x8c\xb0\x57\x8e\x6b\x6d\xdc\xbf\x83\xf0\x57\x05\x33\x76\x83\x5b\x1a\x3a\x7e\xd7\xd3\xcb\x4b\xd4\xbf\xa5\x61\x4e\xb4\x07\x6a\x5f\x81\x07\xa0\xf6\xca\xeb\xa8\xfd\x3b\xf7\x46\xbd\x77\xec\x66\x52\x9a\x87\xe5\xf8\x16\x53\x6d\xcd\xf6\x53\x7b\x12\x86\xf4\xd3\x4e\xfc\x1d\x8f\x5a\xde\xde\x39\x5f\xa8\xd1\xdc\x3f\xc8\xb5\xb4\x64\xe3\x67\xa1\xb9\xaf\x82\x88\xce\x42\xd0\xda\x7a\x5f\x15\xd0\xa7\x22\xa2\x25\x98\x27\x20\xa2\xe5\x56\xed\x44\xf4\x0e\xc8\x93\x11\xd1\x2d\x12\x55\x21\x6c\x90\xa8\x3b\x6c\x2f\x92\x44\x55\xf0\x8f\x24\xaa\x4e\xa2\x7a\xdc\xf2\xda\x48\x54\x65\xea\x91\x44\x0d\x97\x38\x28\x01\xba\x4f\x13\x18\x42\x80\xfa\xce\xfa\xfd\x08\x50\x8f\xc6\x23\x01\x7a\x44\x02\x34\xc0\xcf\x3f\x01\x01\xaa\x5a\x70\x27\x01\xaa\xfc\xf4\x8c\x08\x50\x85\xba\x93\x00\x0d\x43\x7d\x24\x40\x7b\x12\xa0\x0b\xf7\x89\xe6\x0b\xe6\x3f\xff\x2b\x40\x0d\xfa\xc0\x4e\x81\x2e\xb8\x6f\xc2\x3f\x09\x4f\xf2\x9f\x56\xb7\x35\xc8\x32\xea\x4f\x45\x92\x74\xd8\xef\xf0\x1c\xc9\xef\x34\xfa\x8f\xcf\x0a\xb4\x8d\x20\xe4\xcb\x41\x79\x91\xbe\xfb\xd8\x2b\xe0\xf9\xe6\x92\xcf\xfd\x68\xc1\x36\x24\x9f\x99\x57\xc6\x57\x47\x8c\xb0\x82\xd4\xf6\x6a\x84\x33\x76\x63\x9d\x85\x73\x99\x17\x9c\xa8\xa7\x25\x73\x01\x7a\x83\xca\x55\xa8\x5f\x24\x93\x2b\xd1\x1f\x89\x5c\x9d\xc8\x75\x7b\xe5\xb5\xf1\xb8\xd2\xd2\x23\x8d\x7b\x4c\x89\x83\x12\xbd\xbd\xbb\xd8\x10\x96\xd7\x53\x07\xee\x47\xf2\xba\x15\x1e\x39\xde\x23\x72\xbc\xdd\x6e\xfe\x09\x28\x5e\x68\xcc\x9d\x04\xaf\x74\xd2\x33\xe2\x77\x01\x72\x27\xbb\x1b\x04\xf9\x48\xee\xf6\x24\x77\x5f\x2c\x3d\x41\x17\x60\x0c\x13\xf3\x17\x4b\xf1\x50\x2a\xb9\xce\x89\x98\xe0\x8f\x78\xfa\x59\x18\x50\x24\xe4\xec\x8e\x8e\xb5\xb1\xf0\x2b\x27\x29\xa0\x73\x69\xd8\x8c\xa5\x64\xd0\xfa\xbd\x3b\xde\x10\x6b\xa6\xd9\x4a\x03\x9f\x0d\xe4\x96\xa8\xd0\x83\x08\xe6\x41\x94\xd2\xf0\x2d\x09\xcb\xf5\x50\x0e\x8a\x49\xca\x52\xf4\x5d\x26\x4f\x42\x67\x1f\x76\xfd\x5b\xaf\xd3\x05\xa4\x3f\x2c\x07\x6b\x5e\x1b\x6a\x29\x34\xfa\x8d\x73\xb9\xbc\x00\x3e\xbb\x2b\x45\xac\xf6\x98\xd8\xc7\x57\xd6\xb5\x07\xa5\x5e\x75\x06\xdb\x87\xf6\x2f\x1b\xb7\x76\xa4\x2e\xa4\x07\x05\xd9\xe9\xcf\xfa\x99\x1a\xb9\x63\xd6\xe6\x56\x51\x97\x72\x3f\x70\xff\x1c\xbc\xdb\x82\xbd\xe1\xe4\x16\xdc\x87\xf6\x75\xff\x84\xc5\x7f\xa3\x61\x73\xbe\x52\x9e\xd4\x8a\x8e\xac\xd7\x4d\x4b\xcf\x82\x48\x2f\xd3\x7d\x9a\x2b\xbe\x6d\x51\x17\x9c\xa4\x3f\x50\xf8\x4e\xc8\x8b\x6d\x4d\xd3\x74\x41\x84\x00\xfe\xa0\x11\xe0\x6e\x89\x43\x0e\x09\x33\x3d\xaf\x73\x2b\x17\x97\xf2\xbb\x3a\x07\x9f\x0f\x6a\xb7\x5b\x16\x76\x3b\xfc\x74\x30\xd3\xf3\xd1\x69\x08\x19\x6a\xee\x5e\xc6\xf2\xa5\xcc\xb4\x1c\xfc\xa8\x84\x7f\x9c\x68\xe9\xf7\xe8\xcd\x2e\x9f\xbc\xb6\x79\x56\x69\xe9\x93\xce\xb3\x1c\x23\x0f\x3b\x47\x02\x96\x51\x08\xd7\xb3\x9e\x73\x1d\x74\x46\xb5\x4f\x11\xed\x1b\x4f\xed\x3c\xd2\xfb\x0d\xa7\x76\xa9\x3b\x8e\xa6\x1e\x61\x34\x35\xd4\xc9\xaf\x6d\x30\xe5\xec\xae\x8f\xa5\x6c\x73\xdd\x9a\x49\x6d\xf6\xd8\xbf\x6b\x22\x55\x62\xad\xe6\x51\x16\xeb\xd6\x30\x6a\x0f\xac\xc7\x51\x54\xf7\x28\x0a\x35\x2a\x66\xd7\x2f\x83\xa8\xbe\x8d\xdd\xf8\x7d\x10\xe3\xd8\x97\xe4\x71\xec\x7f\x01\x45\xa9\xf7\xff\x01\x00\x00\xff\xff\xc5\xd2\x7a\x70\xad\x42\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 17069, mode: os.FileMode(420), modTime: time.Unix(1511452903, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x73\xe2\x46\x10\xbd\xf3\x2b\x54\x73\x4d\x98\x41\x40\x16\x92\x42\x54\x39\xde\x2c\x66\x37\xde\x75\x6c\xec\xad\xcd\x6d\x34\x6a\x49\x23\x4b\x33\xf2\x74\x0b\xa1\x50\xfc\xf7\x94\xc0\x06\xe2\x8f\x0a\x07\xdf\xe8\x6e\xf4\xde\xbc\x7e\xaf\x7a\xbd\x8e\x20\xd6\x06\x3c\x96\x82\x8c\xc0\xb1\xcd\xa6\x33\x69\x7f\x4e\x3b\x9e\xe7\x79\x93\x02\x48\x7a\x2a\x95\x0e\x81\x02\x76\xbb\xf8\xd4\x1d\xb3\xe3\x91\x91\x05\x04\x6c\xa9\xa1\x2e\xad\x23\xe6\x29\x6b\x08\x0c\x05\xac\xd6\x11\xa5\x41\x04\x4b\xad\xa0\xbb\x2d\x7e\xf6\xb4\xd1\xa4\x65\xde\x45\x25\x73\x08\x7c\x36\xed\xec\x90\x48\x53\x0e\xd3\xcb\x26\xb4\x34\x11\xbb\xe2\x71\x92\x6b\x73\xef\x39\xc8\x03\x86\xd4\xe4\x80\x29\x00\x31\x2f\x75\x10\x07\x2c\x25\x2a\xf1\x37\x21\x0a\xb9\x52\x91\xe1\xa1\xb5\x84\xe4\x64\xd9\x16\xca\x16\x62\xdf\x10\x03\x3e\xe0\x23\xa1\x10\x0f\x3d\x5e\x68\xc3\x15\x22\xf3\xb4\x21\x48\x9c\xa6\x26\x60\x98\xca\xc1\x78\xd8\xfd\xfd\xee\x87\xd6\x37\xf3\x4f\xf0\xc5\x8f\x66\xc5\xe7\xeb\xb3\xfb\x46\x55\x17\x67\x17\xd7\xc9\xa0\xff\xad\xb8\x55\x75\x3d\xb2\x66\x70\xfd\x23\x4a\x86\x77\xf2\xa7\xab\xe2\x66\x81\xff\x88\x2f\x1f\xc6\xcb\x30\xfa\x23\x4b\x87\x15\xf3\x94\xb3\x88\xd6\xe9\x44\x9b\x80\x49\x63\x4d\x53\xd8\x0a\x9f\x16\x77\x8a\x28\x15\x99\x0c\xb9\xca\x6d\x15\xc5\xb9\x74\xb0\x55\x24\x33\xb9\x12\xb9\x0e\x51\xc4\xd6\x50\x57\xd6\x80\xb6\x00\x31\xe4\x1f\xf8\x60\x2b\xef\xb8\xbd\x57\x78\x02\xab\x90\x88\x40\xb8\xc5\x50\x15\x92\x2d\x4e\xfd\xf2\xc4\xf7\x52\x53\x82\x6c\x63\xc5\x33\xec\xee\x4d\xe8\xb6\x7c\x3e\xef\x73\xff\xf0\x87\x0c\x8f\x1e\xbe\xe3\x47\xe5\x74\x49\x1e\x3a\x75\xe0\x6b\xa1\x79\x62\x6d\x92\x83\x2c\x35\x3e\xa3\xcb\x1e\x2a\x70\x8d\xf0\xb9\xdf\xe7\xc3\xc7\x6a\x0b\x9b\x21\x9b\x4e\xc4\x0e\x70\xfa\x36\xfa\xa9\x91\xca\x9e\x27\x2a\x7b\x35\x50\x0b\xf5\xcb\xfc\x2f\x1d\xf6\xfa\xa3\x87\x65\x93\xdd\x5c\xc6\x17\xd9\xb7\x4b\xf9\xe7\x7d\x5c\x7d\xbf\x5b\xfd\xbd\xba\xbd\x32\xe7\x9f\xcf\x46\x79\xbf\x38\xff\xfe\x75\x5e\xce\x7e\x2d\x66\xe7\x1f\xc7\xf5\xec\xeb\x5c\x5d\x7d\x1c\x2d\x56\xf2\xed\x40\x1d\xb4\xbc\x9b\x55\x07\x77\x48\x26\xa8\x4d\x59\x91\xe8\xf1\x31\xef\xbd\x36\x39\x8e\xc9\x6b\x8b\x7c\x57\xae\x97\x06\xbe\x4d\x5c\xe6\x92\x62\xeb\x0a\x4e\xb5\x26\x02\xb7\x25\xae\x75\x94\x00\xe1\xd6\xa5\xfd\x4d\xab\x28\x6e\x6f\xda\x29\xa0\x4f\x58\x89\xa6\xb4\x0a\xb9\xb6\xff\xc9\xb5\x70\x90\x83\x44\x40\x91\x4b\x02\xa4\xa3\x61\x58\x99\x28\x87\x53\xd3\xf7\x3f\x4b\x4b\x65\x0b\x16\x4a\xd7\x0a\x11\x43\xde\xe3\xbe\x7f\xdc\x7c\xb9\xa6\x89\xd8\x5d\xf4\xf5\x1a\x4c\xb4\xd9\x74\xfe\x0d\x00\x00\xff\xff\x94\x57\x91\x73\xf5\x05\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1525, mode: os.FileMode(420), modTime: time.Unix(1511440982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\xe5\xd3\x06\x4c\x21\xda\x02\x7b\x18\x68\x01\xc1\x32\x6c\x1d\x9a\x2d\x68\xda\x01\x7b\xa4\xc8\xb3\xc5\x86\x22\x3d\xf2\xe4\xcc\x33\xf4\xbf\x0f\x94\xac\x45\x91\xa5\xfc\x1e\xd2\xfa\xc1\xb6\xcc\xef\xbe\xfb\x78\xdf\x1d\x25\xef\x76\x1a\x97\xc6\x21\x30\xe3\x34\xfe\xcd\x9a\xe6\x48\xbc\x3a\xfd\xfd\xc7\x8f\x7f\x9e\xff\x04\x25\x55\x36\x3f\x12\xe9\x03\xac\x74\xab\x05\x43\xc7\xf2\xa3\xdd\x8e\xb0\x5a\x5b\x49\x08\xac\x44\xa9\x31\x30\x38\x4e\x81\x85\xd7\xdb\xfc\x08\x00\x40\x68\xb3\x01\x65\x65\x8c\x0b\xa6\xbc\x23\x69\x1c\x06\xd6\xad\xa5\xd7\x90\xc2\xc9\x4d\x21\xf7\x14\xff\x01\x86\x04\x9f\xeb\xaa\xf0\x14\xbc\x1b\x10\xb4\x98\xf2\x75\x7e\xb6\x2d\x3c\x09\x5e\xbe\x1e\x2f\xbd\xe9\xa3\x2d\x4a\xcd\x72\x59\x93\xaf\x24\x19\x25\xad\xdd\x82\xf2\xd6\xa2\x22\x90\x4e\x43\x11\xbc\xd4\x4a\xc6\x74\xb5\x85\x4b\xe3\x74\x04\xbf\x04\xe3\x96\x3e\xa4\x08\xef\x60\xe9\x03\x6c\x7d\x2d\x78\xf9\xe6\x3a\x8d\xe0\xda\x6c\xf2\x81\xe2\x57\x59\x06\x7f\x98\x98\x02\x4e\xce\xdf\x41\xc0\x58\x5b\x82\x2c\xcb\x27\x37\xb5\x96\x0e\x2d\xb4\xef\x59\xca\x35\xde\xdb\x18\x9a\xa5\x4a\x1b\xb7\x1a\xe1\xba\x62\x9a\x25\x1c\xbf\xab\xe4\x0a\x4f\x9c\xb4\xdb\x68\xe2\xa9\x24\x6c\x9a\x03\xa4\x28\xdf\xde\x24\x25\x43\x16\x59\xfe\xb3\xf7\x2b\x8b\x43\xf5\x1f\x3a\xf5\xdf\xec\x76\x53\xc4\xdf\x0a\x5e\xbe\x9d\x12\x82\x36\x3e\x47\xde\x59\x7a\xa7\x47\xec\x7b\x17\x6e\x2f\x5d\xea\xcb\xdb\xeb\xf6\xe9\xc3\xfb\x29\xd9\x03\xa6\xe0\xaf\x26\x28\xc6\x28\xe5\x6d\x56\xe9\xec\xfb\x19\x68\x0b\x97\x50\x06\x5c\x2e\x58\x5f\xda\x0b\x5f\x07\x85\x4d\xc3\x72\x61\xaa\x15\xc4\xa0\xae\xd7\x5a\x5d\xac\x67\x37\xd5\x2a\x0b\x18\xd7\xde\x45\xb3\x41\xf6\x1d\x48\x4b\x0b\xd6\x02\x41\x26\x83\xfe\x41\x0d\xc5\x16\x0e\xca\xca\x72\xc1\xe5\x8c\xfa\xc3\x02\x3e\x76\x63\xeb\x80\xb9\x50\x5e\x63\x3e\xee\x9a\xce\xd5\xa6\x11\xbc\x5d\x16\x3c\x41\x1f\x22\x67\xe6\xe7\xf9\x86\xc3\x2a\xff\xcd\x53\x69\xdc\x0a\xc8\x43\x2c\xfd\x95\xe0\x58\x3d\xaa\xa7\x26\x07\xfd\x17\x94\x96\x4a\x55\xa2\xba\x04\x92\x85\xc5\xd9\x41\x6f\x57\x87\xb6\x8d\xba\xb5\x8b\x1e\x82\x3b\xc2\x2c\x52\x30\x6b\xd4\xfb\xab\xc2\x07\x8d\x01\xf5\x84\x01\x82\xd2\xd9\x30\x53\x4f\x0a\xb7\x38\x46\x3a\x3f\x0f\x5e\x61\x8c\x82\xd3\x0c\x43\x0f\x1c\xee\xb8\x9f\xd2\xb9\x18\xc1\xa7\xd2\x0a\x3e\x23\x54\xd0\xf5\x9d\xe3\xc1\x1b\xf8\x78\x65\x88\x30\xc0\xa9\x09\xe9\x48\x3f\xc3\x18\xd3\x3c\xbc\x37\x91\xd0\x61\xb8\x7b\x63\xb3\x8b\xd0\x9f\x11\xf8\x17\x1c\xef\xd3\x74\xb4\xa7\x67\x17\x24\xa9\x8e\x40\xa1\x9e\x6a\xbf\x1b\x29\xe2\x5a\x3a\x30\x7a\xc1\xa8\xa3\xc8\x74\x95\xd9\xbd\xba\x2c\xb6\x3c\x0c\x22\x6d\x2d\xb6\x63\xe6\xc3\x0f\x85\xad\x91\xe5\x27\x8a\xcc\x06\x05\x4f\xf1\x77\x89\x9c\x19\x83\x27\xea\x68\xdb\xed\x82\xfc\xfa\x9e\x22\x0e\x26\xe9\x46\xfe\x07\x76\x0b\x3c\xc4\xfc\x4f\x11\xc3\xff\x6b\x79\xca\x10\x9f\xe2\x7a\x1d\x31\x7c\x19\xbe\xdf\x43\xc9\xd7\xe3\xfc\x39\x06\xe3\xb5\x51\xf0\xab\x2f\x9e\xd9\xf8\x9e\xfa\x29\xae\xaf\xf7\x1c\xd9\x67\x5f\xbc\xa8\xe9\x77\x0b\xf9\xf2\x3d\xbf\xb0\x52\x5d\x3e\xfb\x98\xb7\xac\x3d\xe9\x63\xbc\x8e\x89\xe0\x65\x47\xfb\x3e\x12\x5e\xd4\x5f\xc1\x27\xee\xf1\x82\xb7\xcf\x36\x07\x8f\x5a\x83\xaf\x82\x77\x61\x82\x77\x7f\x46\x7b\x5d\xff\x06\x00\x00\xff\xff\xf9\xdb\x2c\x6c\xb8\x0e\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 3768, mode: os.FileMode(420), modTime: time.Unix(1511110564, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x5f\x6f\xdb\x20\x10\xc0\xdf\xf3\x29\x10\x7b\x76\x78\x9f\x92\x68\x52\x35\xed\xa5\xed\xc3\xd6\xbd\xf7\x6c\xce\x0e\x2a\x01\xd7\x9c\xdd\x4e\x96\xbf\xfb\x04\xd8\x8e\xe7\x26\x53\x94\xb4\xd9\x5e\x12\x7c\xdc\x1f\xee\xc7\x1d\xd0\xb6\x12\x73\x65\x90\x71\x03\x4d\x0a\x15\xef\xba\xc5\xca\x40\xc3\x32\x0d\xce\xad\x7b\x29\x8b\x7f\x89\xc4\x1c\x6a\x4d\xc3\xa7\x32\x0d\x56\x0e\x87\xcf\x5c\xbd\xa2\x4c\xc8\x96\x7c\xb3\x60\x8c\xb1\x95\x54\xa3\x9f\xcc\x1a\x02\x65\xb0\x4a\x72\x5d\x2b\xd9\x6b\xcc\xb5\x7a\x47\x5b\x04\x89\xd5\x44\x27\xe8\xa5\x35\x91\x35\x33\x55\xb2\x45\xa1\x91\x65\x56\x6b\x28\x1d\x4a\xce\x24\x10\xf4\x62\x1f\x36\xca\x07\x31\x54\x05\xd2\x9a\x7f\x8a\xd6\x77\x68\x6a\xc7\x19\x54\x0a\x12\x7c\x2d\xc1\x48\x94\x6b\x9e\x83\x76\x38\x0b\x1e\x16\xe0\x4a\x18\xc3\xab\xcc\x9a\xc4\xf3\xda\xac\x84\x97\x5f\x53\x7d\x25\x22\x8a\x99\x14\x66\x68\xd2\x0a\x8c\xe4\x6c\x5b\x61\xbe\xe6\x82\x6f\xee\x7e\xa5\x96\x56\x02\x26\xe8\x85\x54\xcd\x5f\x77\x62\xe0\xc7\xf6\x20\x95\x1c\x66\x23\xbe\xd9\x2a\x6a\x3d\x71\x31\x54\x86\x81\xe6\x10\x50\xad\x26\xba\x89\x22\xdc\xb5\xad\xca\x19\x3e\xb3\xe5\x7d\x30\xbc\x87\x1d\xb2\xc7\x1b\x6b\x72\x55\x3c\x76\x1d\x64\xa4\x1a\x6c\x5b\x34\xb2\xeb\x0e\x38\x7c\x83\x21\xd1\xca\x3c\x8d\x08\xb2\xe0\x47\xf0\x4d\x74\x58\x57\x40\xca\x9a\x3f\x88\xec\xc9\x68\x35\x87\x5e\xeb\xcd\xe2\xc3\x73\x7d\x78\x51\x44\x58\xdd\x58\xed\x2e\x4f\x98\xa2\xb3\xb0\x8b\x98\xf9\x64\x9d\xe0\x9b\x3e\x04\xbb\xd9\x4b\x3f\x80\xc1\x30\xac\x54\xb1\xa5\x03\x4b\x0f\xd9\x1b\x64\xcb\x7e\x39\x21\x7d\xee\x8f\x9f\x13\xd0\x1d\x47\x11\x33\xdf\x12\x95\xee\xb3\x18\x00\x2c\x33\xbb\x13\x6d\x3b\x0d\xd5\x75\x7c\x70\x9a\x92\x61\x29\x99\x44\x17\xe1\xcf\xd9\x4c\x81\x4e\x7c\x0b\x86\xef\xde\xc7\x91\x90\x6c\xde\xba\x39\xb0\x1c\xbc\xaf\x1c\x06\x53\x3f\x8c\x3b\x39\xf6\x33\xfb\x32\x5f\xce\xe1\x84\x4e\xdb\x97\xc8\x13\xb5\x3b\xe4\xe7\x02\x7c\x50\x96\x6e\x39\x61\x78\x5d\x64\x25\x38\x37\x65\xf6\x0e\x84\x7c\x1b\x2d\x8e\x97\xe2\x0f\x0d\xd9\xd3\x03\xc2\xee\xdd\x0a\xb1\x6d\xa3\xd3\x9f\xdf\x6f\x4f\xaf\x38\xe7\x2d\xce\x81\x17\x0c\x8f\x55\xdb\x98\xdc\xff\x55\x6b\x02\x6a\xda\x8a\x98\xf2\xd5\xf8\x5c\xad\xb4\x2e\x68\xbe\xcc\x1a\x67\x35\x2e\x25\x36\xa8\x6d\x89\x95\x5b\x16\xd6\x16\x1a\xc3\x69\x06\xa5\x72\xfe\x47\x34\xca\x29\x6b\xfa\x29\x2f\x0d\xd3\xcf\xb5\x25\x70\xa7\x02\x8d\xc6\xe7\x10\x8d\x96\x7e\x34\xde\x66\xdf\x82\xe8\xab\x81\x54\xa3\x64\x54\xd5\x38\xb9\xc7\x42\xd9\xf4\xf4\xc7\x6b\xed\x9d\x36\xe1\x02\xd6\x85\xa2\x6d\x9d\x06\x72\xea\x05\x08\x9e\x40\xec\xfc\x6b\xe9\x64\x80\xc1\xfe\x2c\x80\xc1\xf2\x40\xcf\xfe\x03\x1a\x42\xdb\xc2\xd6\x34\xdc\x9a\xfc\xcd\xbb\xe2\x9c\x96\x53\x85\x49\x6c\x4d\xfb\xb3\xe8\x36\x04\xb9\x24\xbd\xd9\x33\x64\xf2\x8a\xed\x87\x2b\x61\xa0\xd9\x2c\x86\xae\xfc\x1d\x00\x00\xff\xff\xe4\x8a\x37\xb0\xe4\x0c\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3300, mode: os.FileMode(420), modTime: time.Unix(1511427363, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x4f\x6b\xdb\x4e\x10\xbd\xfb\x53\xcc\x6f\xef\xf6\x92\x1c\x7f\x48\x82\xe2\xf4\x10\x42\x68\xc1\xb9\xf4\x64\x46\xda\xb1\xb5\xb5\xb4\xbb\xec\x8e\x1c\x84\xd0\x77\x2f\x92\xec\xc4\x76\x64\xa7\xa4\x14\x07\x7a\xb1\x35\xcc\xcc\xd3\x9b\x37\x7f\x50\xd3\x28\x5a\x69\x43\x20\x02\x71\xe5\x44\xdb\x4e\xa2\xff\xee\xbe\xcd\x9f\x7e\x7c\xff\x0a\x39\x97\x45\x32\x89\xba\x3f\x28\xd0\xac\x63\x41\x46\x24\x13\x00\x80\xa6\x61\x2a\x5d\x81\x4c\x20\x72\x42\x45\x5e\xc0\xac\x6d\x7b\x5f\x94\x5a\x55\x0f\x61\xbd\xa9\xf4\x16\xb2\x02\x43\x88\x45\x66\x0d\xa3\x36\xe4\xc5\xab\xff\x14\xce\xe0\x36\xc5\x03\xb8\x31\x9c\x9f\x55\x99\x5a\xf6\xd6\x9c\xe0\xf4\x71\xf9\x4d\xb2\xe8\x8a\x89\x64\x7e\x33\xe6\xbe\xdd\xa3\x14\x84\x4a\x24\x4f\xb9\x0e\xa0\x03\x70\x4e\xb0\xd2\x3e\x30\x04\x26\x07\x6c\xa1\x0a\x04\x8f\x75\x6a\x39\x92\xf9\xed\x08\xd2\xca\xfa\x12\xb4\x8a\x77\xda\x01\x66\xac\xad\x89\x85\xec\x6d\x29\xa0\x24\xce\xad\x8a\x85\xb3\x81\x05\x90\xc9\xb8\x76\x14\x8b\xb2\x2a\x58\x3b\xf4\x2c\x3b\x84\xa9\x42\x46\x91\x44\xbd\x31\xf2\x16\x6d\x5c\xc5\xd0\x39\x5f\x5e\x34\xc0\x84\x2a\x2d\x35\x0b\xd8\x62\x51\x51\x2c\x16\xb8\x25\xb1\x2f\x2d\x65\x03\x29\x9b\xa9\xf3\xba\x44\x5f\xf7\xcf\xc5\xfa\x44\xad\x48\x2a\xbd\x4d\x26\x27\x9d\xd0\x2b\x98\x3d\x52\x08\xb8\xa6\x0b\x1d\xc0\x82\x3c\x43\xff\x3b\x55\x68\xd6\x5d\x4b\x9b\xe6\x35\x71\x87\x7d\x0c\x4d\x46\xb5\xed\xe4\xb7\x30\xb5\x59\xd9\xb1\xe6\x22\xe4\x9e\x56\xb1\xc8\x99\x5d\xf8\x5f\x4a\x74\x2e\xcc\xf8\x59\x33\x93\x9f\x65\xb6\x14\xc0\xe8\xd7\xc4\xb1\x58\xa6\x05\x9a\x8d\x48\xe6\x85\xce\x36\x90\x93\xa7\xae\xa7\x99\x27\x64\x92\x59\x4e\xd9\x06\x6a\x5b\x79\xb0\xcf\x06\x9e\x06\x00\xf8\xe2\x5c\x24\x71\x54\xa5\x73\xa4\x19\xd3\x82\xa6\x9e\x82\xb3\x26\xe8\x2d\x8d\x91\xee\x63\x8e\x12\x60\x48\x0b\xec\xb5\x23\xb5\xb3\x52\xeb\x15\x79\x52\x23\x10\x03\xcc\xf1\x62\xbd\xf5\xfb\xf3\xce\x21\x40\x25\xfb\x4a\xe7\xd6\x84\xaa\x24\x0f\x0f\x54\x47\x92\xd5\xfb\x99\x17\x03\xe0\xe2\xa4\x3a\x0c\xe1\xd9\x7a\x25\xc0\x60\x49\x3b\xe7\xbe\x6b\xcb\x6c\x47\x65\xb9\xa1\xfa\x65\x9a\x9b\x66\xb6\xa3\xba\x67\xfa\x40\x75\xdb\x9e\x91\xe6\x85\xc2\xc5\x4a\x22\x79\x49\xa1\x8f\xc9\xb7\xa0\xcc\x13\x7f\x16\x05\x43\xcf\xe6\x82\x88\x03\xdd\xbf\xa6\x63\x24\xcf\xcc\x68\x24\xfb\x11\x7f\xff\xfe\xfc\xf9\x3d\xd0\xb3\x50\x60\xb6\xe9\x8e\x41\x7f\x1d\x3e\x76\x11\x16\x1d\xc6\x3f\x70\x0f\x86\x3a\xe7\x85\x26\xc3\x70\x7f\x77\xa5\x41\xee\x3b\xb6\xcc\x7a\x16\x4b\xad\x0e\x07\xb8\x27\x38\xf0\xbb\xbf\xbb\xfe\x01\x38\xd2\xeb\xaa\xcb\x7f\xa4\xd9\xdb\xc5\x3f\xd0\xed\x53\x2f\xfd\xc1\x3a\x45\x72\xc0\x89\xe4\xf0\xe5\xb9\xff\x60\xf8\x15\x00\x00\xff\xff\x15\x41\x24\x68\xa5\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2725, mode: os.FileMode(420), modTime: time.Unix(1503659531, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xb1\x8e\x9c\x30\x10\xed\xf7\x2b\x26\xce\x95\xd9\x45\x77\x65\x64\x2c\x45\x9b\x94\x51\x52\x5c\x8a\x94\x03\x1e\xc0\x17\xaf\x4d\xec\x81\xd3\xca\xe2\xdf\x23\x60\x39\x58\x14\x29\x0a\x0d\x23\x98\xf7\xde\xbc\xe7\x71\x4a\x9a\x2a\xe3\x08\x04\xbf\x1a\x66\x0a\x67\x6f\xa3\x18\x86\x83\x7c\xf7\xf9\xdb\xf9\xf9\xe7\xf7\x2f\xd0\xf0\xc5\xaa\x83\x1c\x5f\x60\xd1\xd5\xb9\x20\x27\xd4\x21\x25\xa6\x4b\x6b\x91\x09\x44\x43\xa8\x29\x08\x38\x8d\xc0\xc2\xeb\xab\x3a\x00\x00\x48\x6d\x7a\x28\x2d\xc6\x98\x8b\xd2\x3b\x46\xe3\x28\x88\xf9\xdf\xf8\x6c\x29\x1c\xf6\x05\xde\x28\xde\x1a\xb6\x04\x2f\xdd\xa5\xf0\x1c\xbc\xdb\x10\x4c\x3d\xcd\xa3\x7a\x9e\x67\x87\xb3\xb7\x96\x4a\x36\xde\x45\x99\x35\x8f\xfb\xc6\xa7\x85\xcb\x12\x6a\xa1\x7e\x44\xe3\x6a\x58\xb0\xe5\x8a\x05\xf6\x10\xd9\x07\x82\xab\xef\x02\x54\xd8\xfb\x60\x98\x80\x5f\x89\x38\x82\x89\xa0\x09\xb5\xbd\x42\x17\xa9\xea\xac\xcc\x9a\xa7\x55\x4a\x66\xda\xf4\x6a\xe3\xa1\xb3\x8b\xac\xc3\x1e\x1c\xf6\xc7\xd6\x58\x1b\xa7\xea\xa5\x8b\x6c\x2a\x43\xfa\xce\x54\x4a\x01\x5d\x4d\xf0\xf0\x8b\xae\x1f\xe0\xa1\x47\x0b\x1f\x73\x38\xad\xee\xbe\x62\x3b\x0c\x1b\x80\xb4\x06\x82\xb7\x94\x8b\x36\x50\x24\xc7\x38\x76\x89\x45\x37\x25\x53\x01\xfd\x86\x87\xd3\xa7\x92\x4d\x4f\x2b\xd1\x24\x31\x0c\x38\x7d\x4e\x89\x9c\x1e\x06\xa1\x24\x82\x46\xc6\x23\xfb\xba\x1e\x49\x19\x0b\x01\x4d\xa0\x2a\x17\xef\x53\x9a\x21\x42\x2d\x95\xcc\x50\xc9\xcc\x9a\x7b\x07\x13\xd5\x26\x94\xce\xaa\xbf\x9f\x2b\x63\x71\x1c\x97\x83\x1c\xef\x4e\xf6\xbf\x63\xb8\x11\x1b\x3d\x5a\xbe\x8d\xb9\x95\x69\xd1\x11\x54\xa8\xe9\x9f\x81\x18\x07\xbb\x4c\xee\x64\x26\x29\x7c\xa3\x9e\x37\xe8\x58\x07\xa3\x97\x9c\x52\x1a\xe7\x9d\xc2\xcc\x70\xb7\x87\xf3\x82\xdc\x3b\xdd\xc7\xb5\xee\xd0\xad\x96\xd9\x7c\xaf\x64\x36\xdf\xc7\x05\xf2\x27\x00\x00\xff\xff\xc9\x1a\x8d\x48\xc1\x03\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 961, mode: os.FileMode(420), modTime: time.Unix(1511175046, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/js/config.js": assetsJsConfigJs,
	"assets/js/typeahead.js": assetsJsTypeaheadJs,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config.js": &bintree{assetsJsConfigJs, map[string]*bintree{}},
			"typeahead.js": &bintree{assetsJsTypeaheadJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

