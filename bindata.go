// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x5d\x6f\xe3\x36\xd6\xc7\xef\xe7\x53\xf0\xd1\x53\x34\x2d\xda\xc8\xdd\xce\x62\x2f\x3a\xb6\x81\x76\xd2\xc1\xcc\x22\x33\xcd\x26\x99\x05\x16\x8b\x85\x41\x5b\xb4\xcc\x0e\x4d\x7a\x29\xda\x49\x10\xe4\xbb\x2f\x48\x4a\xb2\x5e\x48\x89\x7e\x8b\xe5\x0c\x73\xd1\x26\x11\x0f\x75\x78\xfe\xe4\xe1\xa1\xac\x5f\xa6\xff\x7f\x17\x7f\xbc\xbd\xfd\xd7\xd5\xef\x60\x26\xe6\x64\xf8\xaa\x2f\xff\x07\x08\xa4\xf1\x20\x40\x34\x18\xbe\x7a\x7c\x14\x68\xbe\x20\x50\x20\x10\xcc\x10\x8c\x10\x0f\x40\xf8\xf4\xf4\xaa\x3f\x66\xd1\xc3\xf0\x15\x00\x00\xf4\x93\x09\xc7\x0b\xa1\x7f\x90\x5f\xd3\x25\x9d\x08\xcc\x28\x88\x10\x41\x02\x5d\xb3\xbb\xef\xc6\x4b\x21\x18\xfd\x11\xcc\x59\x04\xc9\xf7\xe0\x31\x6f\x2b\xbf\x56\x90\x03\xc1\xc1\x00\xe8\x56\xe1\x02\x72\x44\xc5\x27\x16\xa1\xc2\xb7\x6f\x4a\x26\x78\x0a\xbe\x13\x3c\x9c\x10\x98\x24\x9f\xe0\x1c\x81\xc1\x60\x00\xce\xf4\xfd\xa2\xb3\xea\x0d\x94\x53\x8c\x83\xef\xe4\x9d\x30\x18\x80\x9f\xde\x00\x0c\xfa\x40\xf6\x30\xc3\x24\x92\xfd\x27\x21\x41\x34\x16\xb3\x37\x00\xff\xf0\x83\xa9\x83\xcc\x53\x65\x01\x06\x65\xe3\x7f\xe3\xff\x18\x0d\xa4\x9f\xaa\x55\x28\x1e\x16\xa9\x97\x33\x1c\x45\x88\x9e\x81\x6f\xbf\xd5\x7d\x85\x94\x45\x68\x3d\x88\x0f\x9f\xae\x3e\xdf\x1a\x87\x90\x7d\x69\xab\x15\x24\x4b\x04\x06\xe0\x6c\x0a\x49\x82\xce\xde\x58\x9b\x97\xe3\x04\xce\x1a\x9a\xa6\x02\x60\x4a\x11\x7f\x7f\xfb\xf1\x52\x36\xbf\x50\x41\xb5\x18\x3d\xd5\x7e\x5b\xfe\xcd\x13\x40\x24\x41\x5f\x95\x1c\x82\x2f\x37\x51\x23\x9b\xb3\x9b\x89\x72\x8d\x56\x88\x8b\x6d\x45\x79\x55\xfe\xae\xdf\x2b\xae\xe0\x7e\x84\x57\x40\xb9\x38\x08\x26\x8c\x0a\x88\x29\xe2\xc1\x7a\x75\x17\x33\x02\x85\xab\x31\x4c\x33\x42\xde\xa0\x3f\xfb\x79\xf8\x96\xd1\x29\x8e\xfb\xbd\xd9\xcf\x45\x43\x3c\x05\xe1\x47\x94\x24\x30\x46\x4f\x6b\x27\x8a\x37\x84\x04\x71\x01\xd4\x7f\xcf\x23\x48\x63\x79\xe7\xc7\xc7\xb5\x51\xbf\x17\xe1\x55\xb1\x4b\x44\xa3\xd2\xbd\xa7\x8c\xcf\x01\x8e\x06\x01\x5b\x21\x7e\xc7\xb1\x40\x01\x80\x2a\x1b\x0d\x82\xde\x44\x79\xd5\x0b\xc0\x1c\x89\x19\x8b\x06\xc1\x82\x25\x22\x00\x88\x4e\xe4\x74\x18\x04\xf3\x25\x11\x78\x01\xb9\xe8\xc9\x6e\xce\x23\x28\x60\x30\xec\xab\x1f\xd6\xf7\xec\x63\xba\x58\x0a\x39\x81\xe7\xa5\xbb\xe8\x2e\x92\xe5\x78\x8e\x45\x00\xd4\x74\x18\x04\x37\x70\x85\x82\x6c\x70\x63\x41\xc1\x58\xd0\x73\x12\xab\xff\x2d\x38\x9e\x43\xfe\x10\x80\x44\x3c\x10\x34\x08\x22\x9c\x2c\x08\x7c\xf8\x05\x53\x82\x29\x7a\x33\x87\x3c\xc6\xf4\x9c\xe3\x78\x26\x7e\x79\xfd\xd3\xe2\x3e\x18\x56\xc7\x59\x1d\xd8\x14\x13\x54\x18\x5d\x8c\x84\xa5\xf3\x82\x9c\x85\x21\x19\x47\x70\xc1\xee\x28\x61\x30\x02\x30\x01\xb2\x7f\xdb\x68\x22\x34\x85\x4b\x22\x0a\x3d\x67\x81\xdb\xcc\x69\x07\x49\x76\x1e\xd3\xe7\xc5\x76\x23\xaa\xf5\xab\xcd\x29\x9c\x4b\x4f\x1f\xc6\x4c\x84\x7a\x50\xed\x2e\xd6\x83\x33\x7b\x3d\xbc\xbd\xc3\x42\x20\x0e\x6e\xf1\x1c\xc9\xf6\x49\xbf\x37\x7b\x3d\x34\x2e\x14\x01\xc7\x04\x9d\x73\x94\x2c\x18\x4d\xf0\xaa\x36\x7a\x75\xbd\xd4\x18\x68\x93\x44\x70\xbc\x40\x51\xfa\xd3\x98\xf1\x08\x71\x14\x55\xcc\x75\x17\x72\xbf\xaf\xff\x5e\x5f\xe3\xe6\x0b\xfa\x62\x34\x4c\x26\x1c\x21\xaa\x22\x93\xf4\x7b\xc2\xd2\x4d\xd6\x1a\xdd\x4f\xc8\x32\x42\x80\xa3\x05\xc1\x2e\x06\x98\xa6\x06\xc2\xa1\xf1\x84\x2d\xa9\x68\x6f\xc6\xc4\x0c\x71\x87\xee\xec\x2d\xfa\x3d\x53\x58\xfa\x3d\x4b\x20\xfb\x62\x5d\x43\x55\xbf\x1e\x1f\xb9\xcc\x7e\xe0\x1b\x4c\x23\x74\xff\x23\xf8\x46\xa4\x53\x02\xfc\x32\x00\xa1\xce\xae\x61\x3a\x5d\xc2\x7c\xba\x3c\xd5\x33\x3f\x68\x55\xab\x31\x9d\xe9\xcd\x31\x9b\xe2\x22\xbd\x61\xe6\x4c\x12\xa6\xbb\x57\xbe\xb2\x54\x2d\x12\xf4\x9a\x23\x68\xbd\xa8\x47\x4e\x70\x22\x6e\xd1\xbd\x18\xb3\xfb\xf5\xb8\xc3\x1b\x35\xa3\xe4\xae\x99\x00\x83\x23\x7a\xc2\x8d\xd4\x84\x0b\x2c\x71\x00\x5a\x8d\x16\x7d\x5b\xbc\x1b\x33\x46\x6e\x10\x41\x93\x8a\x7f\xbf\xeb\x39\x7c\xad\xa7\xb0\xc9\xc5\x74\x96\x8f\xd2\x59\x7e\x14\x2f\x3f\xe8\x85\x73\x2d\x8c\x1e\xa6\xcb\x6a\xc4\xc5\x21\xbd\x6b\x9e\x71\x74\x39\x1f\xcb\x43\x86\x6d\xc6\xa9\xd5\x9c\xcf\xb7\xc7\xc7\xf5\xd8\xde\xca\x2b\x4f\x4f\x86\x54\xb6\x2f\xc7\x75\x25\x96\x3a\xaa\x7f\xa8\x6d\x1e\x98\x4e\x59\x00\xe4\x3e\x75\x2e\x58\x1c\xcb\x4d\x40\x1d\x7a\xb2\xdf\x41\x1e\x23\x31\x08\xfe\x3f\x1d\xd9\x79\x3e\xb2\xf3\x29\x26\x02\xf1\xd1\xe3\xa3\x5e\xf4\x8d\x23\xc9\xbe\x22\x24\x20\x26\x09\x98\x21\x8e\x9a\x7d\xef\x69\x7f\x8f\x1b\x9c\xb4\xa4\x03\x8c\x4e\x08\x9e\x7c\x19\x04\xeb\x13\xa2\x98\xe1\xe4\x47\x70\xe6\x10\x96\xb3\xef\x83\xa1\x3e\x94\xec\x32\x28\x73\xb2\x06\x85\xa2\xd2\x1c\x86\x96\x8d\xaf\x39\x46\xc6\x02\x28\x1f\x6a\x0f\x46\x51\xa5\x10\x6a\x9f\x01\x4d\x75\xce\x27\x74\x57\x93\x20\xab\x3a\x1b\x72\x34\x28\xd4\x27\xf6\xeb\xdb\xef\x93\x5d\x69\x61\xdd\xaf\xeb\xfb\x72\xbf\xa7\xea\xa5\x62\xfd\xa6\x0e\x22\x85\x93\xc8\x1e\x36\xec\x62\x81\xa7\x92\x06\x98\xc2\x08\x05\xea\x3c\xe3\x92\x2f\x64\x51\xa7\xbe\x1f\x04\xe7\x7f\x09\x00\x67\xba\x04\x85\x84\xc5\x01\x80\x1c\xc3\x73\x02\xc7\x88\x10\x14\x8d\x1f\x9c\x7a\x3c\x17\x58\x90\x6a\x6d\x69\xf4\xf4\x3c\xbb\x4d\x7a\x53\x36\x59\xce\x11\xb5\x4d\xe0\xba\xb9\x3c\x69\xda\xdb\x9b\x6d\xd2\xe7\x51\x3b\xe4\xa5\x09\x61\x09\x4a\x33\x73\x84\x93\x39\xce\x3b\x0f\x86\xdf\xca\xb8\x24\x6f\xda\x73\x0c\xd0\xd5\x7b\xd9\x37\x1d\x38\x57\xe5\xb2\x38\x5f\xe8\x74\x5e\x2e\xfb\x6b\xf7\x2a\x9f\x81\xdb\xe3\x24\xa7\x73\x5b\x94\x66\xaf\x87\xef\x94\x57\xcd\xf7\xae\xde\xa0\xe5\x18\x62\x34\xdf\xfd\x68\x62\xee\xd6\x7e\x5c\x31\xb7\x6f\xc8\xe4\x66\x83\x68\x28\x8b\x92\xe6\x8c\x63\xb3\x54\x19\x79\x33\x53\xfb\x0e\x65\x68\xe9\x3e\xf8\xa6\x63\x87\xb9\xfd\x16\x81\x5a\x40\x39\xe5\x69\xcb\x71\xca\x66\xbd\x91\x01\x68\x38\x34\xe8\x29\x1d\x5e\xa5\xde\x98\x6a\x5e\xbd\x16\xc3\xcc\xe1\xa6\xba\xd7\xe8\xee\x81\x24\x05\xdb\x46\x7e\xc9\x09\xe8\x56\xf4\x3f\x5f\x5f\x3a\x08\xb0\xe4\x64\xf4\x62\x44\x98\xc1\x04\xcc\x51\x84\xe1\xb3\x29\x60\x3b\xf0\xa5\x1a\xbc\x87\xc9\x47\xe9\x4f\x83\x00\x33\x98\x8c\x94\xcf\x2f\x22\xfa\x4b\x4e\x3a\x14\xfb\xcf\xd7\x97\x2d\x91\x5f\x72\x72\xf2\x71\xe7\x48\xdc\x21\x24\x50\xd4\x95\xc8\x5f\x67\x0e\x35\x04\x3f\x77\xfa\xe4\xc3\x3f\x85\x2b\xc6\xb1\x40\x40\xcc\x38\x4a\x66\x8c\x3c\x97\x0e\xbb\x3d\xd0\x49\x75\xc8\xbc\x1f\xe5\xde\x1b\x1f\xf2\xa4\xca\xbe\x4b\x5b\xdf\x66\x8d\x9d\x9e\x96\x94\x9c\xee\x9a\x7c\xf9\x44\x3c\x4d\xfd\x72\xf7\xdd\x04\xcc\x97\xe6\x0b\x52\x90\x40\x1a\x77\x42\x32\x81\xee\x45\xab\x60\xd2\xdb\x26\x85\x2e\x21\x8d\x3b\xa3\x89\xf1\xa1\x8c\xa5\x61\xf9\x41\x8d\xb9\x51\xe3\x09\x1a\x94\x0e\xc4\xe1\x3f\x71\x82\x19\xf5\xe7\x62\xab\x81\x3f\x17\x3b\x1a\xc8\x14\x31\x46\xcf\x57\x98\x36\x1e\xcb\xf4\xb4\x0e\x2f\xa5\x47\x0d\xf5\xd1\x4a\x37\x53\x8e\xbf\x80\x12\x69\x82\x80\xfa\x0c\x02\x10\xfc\x05\x11\x3c\x63\xac\x1b\xbb\xac\x53\xca\x4e\xb5\x90\xa3\x08\xd5\x28\x46\xeb\x51\x34\xa5\xf2\x54\xea\x77\xd2\xee\x57\x69\x77\x99\x9b\x75\x26\xc3\x83\x9d\x34\x1d\x93\x25\xe7\x28\x3a\x79\x55\xd3\x71\x6c\xa1\xeb\x6f\xda\xf2\xc5\x29\x2b\x13\xf8\x1d\x82\xa7\xbf\x60\xb3\x81\x6c\xa1\xed\xfb\xd4\xf4\xc5\x89\xfb\x27\x7b\x38\x79\x5d\xff\x64\x0f\x5b\x48\xfa\x77\xf6\xf0\x92\xd4\x94\x51\xeb\x54\x59\x23\xaf\xb7\x57\x35\x4a\xec\x53\x2f\x6a\x08\xa4\xd1\x1c\xf2\x2f\x9d\x8a\xff\x65\xea\x94\x4b\x65\xa9\x5b\x9e\xbe\x0e\x2c\x66\xdd\xd2\x80\xc5\xcc\x21\xfe\x2c\x66\x5d\x89\xfd\x31\x8f\xf9\x97\x90\xc6\x4b\x18\x23\x7f\xd0\xb7\x1a\xf8\x83\xbe\xa3\x41\x34\x9c\x63\x0a\x12\x44\xe5\xa2\x6b\x7b\xf9\xd8\xd6\xc5\x16\x59\x41\xe8\x8c\xf0\xc7\xf4\x1d\x61\x50\xfc\xed\xaf\x57\x82\xd7\xb3\x43\x36\xd1\xc3\x8f\x98\xde\x64\x2e\x36\xe4\x09\x92\xb5\x9f\x63\x3a\xca\xc7\xd4\x95\x94\x01\xb6\x56\x08\xde\x77\x5f\x21\x78\xbf\x99\x42\xf0\xbe\x7b\x0a\x1d\x25\xa9\xff\xaa\x5e\xb2\xf4\xb9\xdc\x6a\xe0\x73\xb9\xa3\x41\xfe\xc9\xdc\xb3\xe5\x88\xc9\x0c\x4d\xbe\x94\x0b\x3b\x3d\x9d\xb3\x4f\xcd\x4c\xa9\x40\xbf\x55\x9c\x7d\x0c\xd7\x95\xb5\x0f\x76\xfd\x30\xbb\x03\x41\xcf\x3e\x6b\x6e\x88\x7a\xe6\xed\xe9\x87\x9d\x11\xc2\xee\xba\x10\x74\xe5\x48\x53\xc8\x55\x83\x93\x0f\xf8\x84\x11\x82\xd4\x88\x8e\xfd\xb6\x5e\x1a\xf8\xb7\x6b\x87\x1a\xa2\x5f\x70\xbb\x2b\x12\x3c\x6b\x99\xb1\xf1\x3b\xd8\x53\xc6\xc4\x6e\xef\xaa\xe7\x0c\x4d\x8a\xa5\x9a\xdf\x5a\x7f\x4b\x58\xe2\xc4\xc5\x58\xfd\xb7\x5c\x32\xfc\xba\x15\xc6\x2e\x20\xad\x59\x12\xfd\x5a\x90\xd6\x17\x01\x9d\xe6\x6f\x94\x19\x18\x96\x5c\xd0\xe7\x82\x4e\x33\x67\x9e\x01\x3a\xcd\x6e\x65\x86\x4e\xd7\x8e\xec\x0f\x3a\xdd\xe6\x15\xac\xb5\x1f\x35\x26\x32\x1f\x40\xce\x44\x76\x11\x7d\xcc\x07\xe0\xd1\xc7\x22\xfa\xd8\x10\x96\x97\x86\x3e\xe6\x43\xf5\xe8\xa3\x7b\x8b\x83\x62\x8b\xdb\xa4\x7c\x17\x6c\xb1\x69\xad\x6f\x87\x2d\x36\xf4\xe8\xb1\xc5\x3d\x62\x8b\x0e\x71\xf6\xd8\xa2\x7f\xd2\xb7\x36\x3b\xe1\x27\x7d\xc7\x05\xe7\xf2\xaa\xcd\x8a\x2d\xae\x4b\x3e\x8f\x2d\x56\x7b\xd8\x77\xf4\x8d\xd8\x62\x4d\x00\x8f\x2d\xae\xcd\xb7\x50\xa0\x02\x70\x55\x35\xa8\x63\x8b\x35\x01\x3c\xb6\x78\xb8\xd8\x97\xb0\x45\x63\xe4\x3d\xb6\x78\x80\xc8\x1b\xb0\xc5\x5a\xf0\x3d\xb6\x58\xed\x67\x63\x1d\x76\x7b\xe6\xe2\x84\x2d\x56\x95\xf5\xd8\xa2\xbd\xa3\xe3\xe8\xd7\x82\x2d\x5a\x97\xe6\x0b\x52\xb0\xd3\xd8\x62\x4d\xb0\x2a\xb6\x58\x55\xc8\x63\x8b\x1e\x5b\x74\x33\xf0\xe7\x62\x47\x83\xa3\x62\x8b\xd5\xf5\x6d\xc6\x16\x6b\x69\xc2\x63\x8b\xe6\xae\x8e\x91\xb2\x5d\xb1\x45\x8b\xd4\x1e\x5b\x6c\xed\xec\xd8\xaa\x36\x63\x8b\x4d\xba\x7a\x6c\xb1\xa5\xb7\x63\x4b\xdb\x82\x2d\x36\x69\xeb\xb1\xc5\x86\x8e\x8e\xad\xab\x1d\x5b\x6c\x92\xd4\x63\x8b\x87\x2d\x6b\xca\xd8\xa2\x4d\x40\x8f\x2d\x1e\xae\xac\xac\x62\x8b\xf6\xca\xd2\x63\x8b\x9b\x18\x00\x77\x0d\x4a\xd8\xa2\x35\xfe\x1e\x5b\xf4\xd8\xa2\x9b\x81\x3f\xe8\x3b\x1a\x74\x0a\x5b\x34\x3d\xd8\x6b\xc0\x16\x8d\x0f\x0a\x3d\xb6\x68\xea\xe2\xf0\x0a\x19\xb1\xc5\x06\x85\x3c\xb6\x08\x3c\xb6\xe8\x64\xe0\x73\xb9\xa3\xc1\x31\xb1\xc5\x3c\x31\xd8\xb0\xc5\x75\x2a\xf0\xd8\x62\xc1\x7a\xaf\x41\xaf\x63\x8b\xb5\xa8\x7b\x6c\x71\xef\x41\xaf\x60\x8b\xf5\x90\x7b\x6c\x71\xbf\x67\xc7\x26\x6c\xb1\x16\x7d\x8f\x2d\x7a\x6c\x71\x23\x6c\xf1\x06\x41\x3e\x99\x9d\x30\xb5\xf8\xdf\x25\xe2\x4e\xff\xa4\x26\x47\xc9\x92\x68\x98\xe6\x2b\xa1\x1b\x13\xa5\xad\x09\x74\xc9\x54\x7f\x2e\xb4\x31\x49\xef\x77\x78\xb2\x51\xdf\x29\xfc\x87\x9e\x15\xa0\xee\x41\x3a\x5f\x0e\xfa\x8f\x53\x26\xeb\x57\x1f\x53\x7f\xae\xd5\xe4\xbb\x7d\x58\x20\x83\x4b\x7a\x66\x8e\x64\x00\x03\x10\x04\x20\xe0\x68\x22\xcf\x89\x20\x98\xe3\x7b\x19\xac\x60\xc1\x16\x4b\x02\xf9\xf3\x23\x98\xb9\x8f\x35\x02\x33\x1d\x58\xa7\xf9\xcb\xcc\x7b\x8f\x5f\x16\xf1\x4b\x7b\x54\x5e\x1a\x7d\x99\x8d\xd4\xc3\x97\xfb\x6c\x71\x50\x3c\x73\xe3\x3d\xcb\x85\xcd\x6c\xc8\x03\xdb\xa1\x99\xf6\x0e\x3d\x99\xb9\x47\x32\xb3\x3d\xcc\x1e\xcc\xf4\xcf\x32\xd7\x66\x27\xfc\x2c\xf3\xb8\x68\x60\x5a\xcc\x59\xb1\xcc\xbc\x0c\xf4\x54\x66\xb5\x87\xfd\x86\xde\xc8\x64\x56\xa3\xef\x91\xcc\xb5\xf9\x16\xe1\xaf\xc0\x69\x65\x01\xea\x40\x66\x35\xfa\x9e\xc7\x3c\x54\xe0\x4b\x34\xa6\x29\xec\x1e\xc6\xdc\x7b\xd8\x0d\x28\x66\x35\xf2\x9e\xc4\xac\xf6\xb3\xb1\x08\x3b\x3d\x7a\x71\x02\x31\xcb\xaa\x7a\x0c\xd3\xde\xd1\x51\xc4\x6b\xa1\x30\x2d\x6b\xf2\x05\xc9\xd7\x69\x06\xb3\xaa\x56\x15\xc1\x2c\xcb\xe3\x01\x4c\x0f\x60\xba\x19\xf8\xf3\xaf\xa3\xc1\x51\x01\xcc\xf2\xea\x36\xe3\x97\xd5\x0c\xe1\xe9\x4b\x73\x57\x47\x48\xd6\xae\xf0\xa5\x51\x66\x8f\x5e\xb6\x76\x76\x64\x49\x9b\xc9\x4b\xbb\xa8\x9e\xbb\x6c\xe9\xed\xc8\xba\xb6\x60\x97\x76\x61\x3d\x74\xd9\xd0\xd1\x91\x45\xb5\x33\x97\x76\x3d\x3d\x71\x79\xc8\x3a\xa6\xcc\x5b\x5a\xb4\xf3\xb8\xe5\xa1\x8a\xc8\x2a\x6c\x69\xad\x23\x3d\x6b\xb9\x89\x01\x70\x15\xa0\x44\x5a\xda\x82\xef\x41\x4b\x0f\x5a\xba\x19\xf8\x03\xbd\xa3\x41\xa7\x40\xcb\xfa\xe3\xbb\x06\xcc\xd2\xf4\x2c\xd0\x53\x96\xa6\x2e\x0e\x2d\x8f\x91\xb1\xb4\xcb\xe3\x11\x4b\xe0\x11\x4b\x27\x03\x9f\xc5\x1d\x0d\x8e\x89\x58\xa6\x59\xc1\x06\x58\xe6\x79\xc0\xf3\x95\x05\xeb\x3d\x46\xbc\x4e\x57\x56\x43\xee\xe1\xca\x3d\x47\xbc\x82\x56\xd6\xe2\xed\xc9\xca\x7d\x9e\x14\x9b\xb8\xca\x6a\xe8\x3d\x56\xe9\xb1\xca\x8d\xb0\xca\x2b\x02\x27\x08\x7c\x62\x02\x4f\xf1\x04\xd6\xeb\xb1\x13\x02\x2c\xa1\xca\x4a\x09\x22\xd3\x76\x68\x64\x99\x34\xe2\x90\x7b\x84\x1d\x77\xc3\x85\x0a\x49\xb8\x8a\x99\x14\x35\x0b\x95\x8c\xe1\xaf\x32\x02\x37\x88\x4c\xd7\x09\x82\x16\x5b\x2d\x54\x2b\x15\xa7\x91\x8c\xd3\x41\xd9\xc2\x62\x2a\x73\xf0\xfd\xb3\x54\xa4\xd1\x6f\xa5\xd9\x76\x2e\xef\x93\x04\x92\xab\xe7\x02\x0a\x38\x86\x09\x3a\xd9\xb5\x12\x71\xbc\x42\xbc\x5d\x63\x99\xcb\x40\xc2\x96\x7c\xe2\xc0\x22\xeb\xc7\x94\xda\xf3\x13\x58\x5b\xee\x9f\x28\x45\xe3\x50\x07\xac\xf0\x41\x51\x36\xa5\x2f\x7e\x0b\x2f\xd4\xb5\xc6\x4f\x84\x76\x05\x2b\x37\x72\x15\x0a\x38\xd2\x9a\x59\xfc\x85\x02\xde\xa8\xeb\x9d\xf1\x59\x4f\x9d\x91\x9a\x3a\x66\xa7\xf5\x83\xf2\x5b\xd9\x60\x4b\xaf\xf7\x9d\x04\x3e\x50\x81\x38\x34\x3c\xc3\x38\xa5\x3c\xb0\xe4\xe9\xa6\xdf\xa6\xf5\x1e\x77\x57\x90\x17\xd8\x8d\x7f\xbb\xe0\x04\x13\x05\x5e\x4f\x89\x30\x0b\x6d\x61\x3a\xe3\x69\xbe\x13\x16\x26\x4f\x78\x91\xb6\x7c\x7a\x5a\xcf\x78\xdb\x75\x55\xca\x1d\x6e\xd1\x1a\xea\x8d\xa2\x27\x85\x02\xa3\x38\xd4\x23\x56\x14\x45\xef\xd2\x12\xa2\xe8\xd9\x0e\x35\x83\x93\x53\x9b\xbc\x72\x5d\xf4\xab\xfa\x57\x0a\x4c\xc3\xc9\xff\x62\x41\x07\x72\xdd\x25\x8b\x4f\x36\xc7\x7d\x25\xe7\x82\x4b\x16\x17\xd7\x27\x61\xf1\x31\xd7\xa5\xf4\x26\x5d\x8f\xd2\x93\x0e\xd5\xee\x37\x88\xaf\xaa\x30\xf4\x09\xcd\xe6\xf6\x4f\x04\x14\x31\xc7\x12\x87\xbf\x0a\xb4\x60\xdc\xa1\x15\x61\x31\x20\x98\x36\xfd\xe9\xa2\xce\xac\x0b\xf7\xad\x3a\x51\xd3\x20\x94\x3f\x18\xf2\xb0\x9e\x24\xe1\x27\x38\xef\x48\x8d\x9c\xba\x2b\x75\xb5\xbb\xfb\x9e\x25\xdb\x6e\x18\x7b\x70\xb7\xbc\xdb\xa5\x0e\xcb\x29\x66\x77\xf8\x8a\xf1\xae\x39\x4c\x58\x3c\x52\xb3\xdd\xee\xf5\x25\x8b\x2f\x65\x8b\xe3\xed\xcd\x85\x6f\xfb\x3d\x6d\xd6\xef\xcd\xc4\x9c\x0c\x5f\xfd\x2f\x00\x00\xff\xff\x9e\xdd\xdb\xe4\x48\xc8\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 51272, mode: os.FileMode(436), modTime: time.Unix(1483852796, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x51\x6b\xdb\x30\x10\xc7\xdf\xfd\x29\x6e\x7e\x5f\x04\x7d\x1c\xaa\x61\x64\x5b\x61\xac\xb4\x90\xee\xa1\x8f\x72\x74\x49\x0e\x54\xc9\x9c\xce\x2e\xa1\xf4\xbb\x0f\x5b\x1e\xd3\xd6\x24\xf3\x20\x79\x9a\xf3\x12\x94\xbf\xee\x77\xe4\x7e\xd8\x96\xf5\xbb\x4f\x77\xcb\x87\xc7\xfb\xcf\xb0\x93\x27\x57\x15\xba\xff\x02\x67\xfc\xf6\xba\x44\x5f\x56\xc5\xcb\x8b\xe0\x53\xe3\x8c\x20\x94\x3b\x34\x16\xb9\x84\xc5\xeb\x6b\xa1\xeb\x60\xf7\x55\x01\x00\xa0\x2d\x75\xb0\x76\x26\xc6\xeb\x72\x1d\xbc\x18\xf2\xc8\x65\xca\xfa\x4f\x8e\xf0\xa6\xab\xcd\x88\xf8\x99\xeb\xdd\x55\xb5\x12\x23\x6d\xd4\x6a\x77\xf5\xab\x2e\xe7\x8a\xa9\x1d\xbe\x67\x8c\x4d\xf0\x91\x3a\xcc\xf0\xc3\xd6\x21\xff\x6d\x33\xa4\x92\x28\x4c\x0d\xda\x71\x55\x07\xb6\xc8\x68\xff\x28\x4f\x08\x7e\xfb\x63\x0a\x6c\xf5\xf0\x4c\x22\xc8\xf0\x18\x5a\x86\xbb\x67\x0f\xdf\x28\x0a\x7a\x64\xad\xc4\x1e\x2f\x3b\x18\xa4\x91\xd0\x06\x16\xe9\x4f\x2f\x46\x78\x42\xde\xee\x23\xba\x4d\x4a\xb2\x19\xbd\xa1\xc7\xc6\x78\x88\xb2\x77\xd8\x0f\xdd\x05\xfe\x50\xbb\x16\xcb\xea\xe3\x5a\xa8\x43\xad\xfa\xfc\x54\x7f\x74\x11\xff\x8d\x3f\x8c\x6d\x25\xa1\x99\x00\xf7\xf6\x08\xfb\xf0\xbc\xb4\x3a\x34\xfc\x49\x46\xbe\x47\xe4\xcb\xd9\xe8\xe9\x71\x96\x31\x55\xc6\x3d\x32\x05\x4b\x6b\xf8\x1a\xea\x33\xba\x98\x05\xfc\x4d\xc0\x32\xf8\x0d\x6d\xe1\x0b\x39\x84\xdb\xe0\x49\x02\x93\xdf\x9e\x43\xc1\x48\x4b\x0d\x66\x11\x53\xaf\x84\x25\xa3\x45\x2f\x64\xdc\x65\x7c\x8c\x7d\xfa\x36\xb3\x8e\xe3\x33\xbd\x09\x61\xeb\x10\x96\x2e\xb4\xf6\xe2\x4e\x6e\x86\x36\xb3\x92\xd3\x4a\x56\xc8\xdd\x79\x9e\xd4\x89\xf4\xdf\xdf\x93\xb4\x1a\xce\xb6\xd9\xb9\x59\x59\xea\xb2\x65\xeb\xaa\x22\x0b\xfb\x65\xb6\x4d\xab\x74\x92\xd7\x2a\xbd\x01\xfc\x08\x00\x00\xff\xff\x4e\x3d\xb1\x15\x12\x0c\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3090, mode: os.FileMode(436), modTime: time.Unix(1483814045, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

