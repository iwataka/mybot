// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x5d\x6f\xe3\x36\xd6\xc7\xef\xf3\x29\xf8\xe8\x29\x9a\x16\x6d\xe4\xdd\x76\xb1\x17\x1d\xdb\x40\x77\xa6\x83\x99\x85\x27\xcd\x26\x99\x05\x16\x8b\x85\x41\x5b\xc7\x32\x3b\x34\xe9\xa5\x68\x27\x41\x90\xef\xbe\xa0\xde\x2c\x4b\x24\x25\xbf\xcb\x19\xe6\xa2\x13\xdb\x3c\xd4\xe1\xf9\x93\x47\x87\xb4\x7e\x4d\xf7\xff\xde\xfd\xfe\xf6\xfe\x5f\x37\xbf\xa1\xa9\x9c\xd1\xfe\x45\x57\xfd\x83\x28\x66\x61\xcf\x03\xe6\xf5\x2f\x9e\x9f\x25\xcc\xe6\x14\x4b\x40\xde\x14\x70\x00\xc2\x43\xfe\xcb\xcb\x45\x77\xc4\x83\xa7\xfe\x05\x42\x08\x75\xa3\xb1\x20\x73\x99\xbc\x50\x3f\x93\x05\x1b\x4b\xc2\x19\x0a\x80\x82\x84\x5b\xfe\xf0\xdd\x68\x21\x25\x67\x3f\xa2\x19\x0f\x30\xfd\x1e\x3d\xe7\x6d\xd5\xcf\x12\x0b\x24\x05\xea\xa1\xa4\x95\x3f\xc7\x02\x98\xbc\xe6\x01\x14\x7e\x7d\xb3\x66\x42\x26\xe8\x3b\x29\xfc\x31\xc5\x51\x74\x8d\x67\x80\x7a\xbd\x1e\xba\x4c\xae\x17\x5c\x96\x2f\x10\x3b\xc5\x05\xfa\x4e\x5d\x89\xa0\x1e\xfa\xd3\x1b\x44\x50\x17\xa9\x1e\xa6\x84\x06\xaa\xff\xc8\xa7\xc0\x42\x39\x7d\x83\xc8\x0f\x3f\xe8\x3a\xc8\x3c\x8d\x2d\x50\x6f\xdd\xf8\xdf\xe4\x3f\x5a\x03\xe5\x67\xdc\xca\x97\x4f\xf3\xd4\xcb\x29\x09\x02\x60\x97\xe8\xdb\x6f\x93\xbe\x7c\xc6\x03\x58\x0d\xe2\xe3\xf5\xcd\xe7\x7b\xed\x10\xb2\x9f\xc4\x6a\x89\xe9\x02\x50\x0f\x5d\x4e\x30\x8d\xe0\xf2\x8d\xb1\xf9\x7a\x9c\xd0\xa5\xa5\x69\x2a\x00\x61\x0c\xc4\x87\xfb\x4f\x03\xd5\xfc\x5d\x1c\x54\x83\xd1\x4b\xe5\xdd\xf5\x77\x5e\x10\xd0\x08\xbe\x2a\x39\xa4\x58\x6c\xa2\x46\x36\x67\x37\x13\xe5\x16\x96\x20\xe4\xb6\xa2\x5c\xac\xff\xd6\xed\x14\x57\x70\x37\x20\x4b\x14\xbb\xd8\xf3\xc6\x9c\x49\x4c\x18\x08\x6f\xb5\xba\x8b\x19\x81\xe1\xe5\x08\xa7\x19\x21\x6f\xd0\x9d\xfe\xd4\x7f\xcb\xd9\x84\x84\xdd\xce\xf4\xa7\xa2\x21\x99\x20\xff\x13\x44\x11\x0e\xe1\x65\xe5\x44\xf1\x82\x98\x82\x90\x28\xfe\xef\x55\x80\x59\xa8\xae\xfc\xfc\xbc\x32\xea\x76\x02\xb2\x2c\x76\x09\x2c\x58\xbb\xf6\x84\x8b\x19\x22\x41\xcf\xe3\x4b\x10\x0f\x82\x48\xf0\x10\x8e\xb3\x51\xcf\xeb\x8c\x63\xaf\x3a\x1e\x9a\x81\x9c\xf2\xa0\xe7\xcd\x79\x24\x3d\x04\x6c\xac\xa6\x43\xcf\x9b\x2d\xa8\x24\x73\x2c\x64\x47\x75\x73\x15\x60\x89\xbd\x7e\x37\x7e\xb1\xba\x66\x97\xb0\xf9\x42\xaa\x09\x3c\x5b\xbb\x4a\xd2\x45\xb4\x18\xcd\x88\xf4\x50\x3c\x1d\x7a\xde\x1d\x5e\x82\x97\x0d\x6e\x24\x19\x1a\x49\x76\x45\xc3\xf8\x9f\xb9\x20\x33\x2c\x9e\x3c\x14\xc9\x27\x0a\x3d\x2f\x20\xd1\x9c\xe2\xa7\x5f\x08\xa3\x84\x81\xd7\x2f\x8f\xaa\x3c\x8c\x09\xa1\x50\x18\x4b\x08\xd2\xdc\x55\x51\xfe\x74\x00\x5a\x7f\xdf\xf1\x07\x46\x39\x0e\xea\x7c\x2e\x84\x23\x0d\xcf\x66\xce\x36\x08\xfc\xce\x63\xf9\x3c\xdf\x6c\x24\x95\xfe\x94\xcf\x1e\x62\x78\xa6\x3c\x7c\x1a\x71\xe9\x27\x83\xa9\x77\xad\x1a\x94\xe9\xcf\xfd\xfb\x07\x22\x25\x08\x74\x4f\x66\xa0\xda\x47\xdd\xce\xf4\xe7\xbe\x76\x19\x48\x3c\xa2\x70\x25\x20\x9a\x73\x16\x91\x65\x65\xd4\xf1\xe7\x6b\x8d\x51\x62\x12\x49\x41\xe6\x10\xa4\xaf\x46\x5c\x04\x20\x20\x28\x99\x27\x5d\xa8\xbb\x79\xf5\xfd\xe4\x33\xa1\xff\x20\xf9\x30\xe8\x47\x63\x01\xc0\xe2\xc8\x44\xdd\x8e\x34\x74\x93\xb5\x86\xc7\x31\x5d\x04\x80\x04\xcc\x29\x69\x62\x40\x58\x6a\x20\x1b\x34\x1e\xf3\x05\x93\xf5\xcd\xb8\x9c\x82\x68\xd0\x9d\xb9\x45\xb7\xa3\x0b\x4b\xb7\x63\x08\x64\x57\xae\x2a\xa4\xf2\xcf\xf3\xb3\x50\xb9\x0d\x7d\x43\x58\x00\x8f\x3f\xa2\x6f\x64\x3a\x25\xd0\x2f\x3d\xe4\x27\xb9\xd3\x4f\xa7\x8b\x9f\x4f\x97\x97\x6a\x5e\x47\xb5\x6a\x59\x93\x55\x72\xeb\xcb\xa6\xb8\x4c\x2f\x98\x39\x13\xf9\xe9\xbd\x29\x5f\x51\x71\xa5\xe1\x75\xec\x11\x34\x7e\x98\x8c\x9c\x92\x48\xde\xc3\xa3\x1c\xf1\xc7\xd5\xb8\xfd\xbb\x78\x46\xa9\x7b\x62\x84\x34\x8e\x24\x13\x6e\x18\x4f\x38\xcf\x10\x07\x94\xa8\x51\xa3\x6f\x8d\x77\x23\xce\xe9\x1d\x50\x18\x97\xfc\xfb\x2d\x99\xc3\xb7\xc9\x14\xd6\xb9\x98\xce\xf2\x61\x3a\xcb\x4f\xe2\xe5\xc7\x64\xe1\xdc\x4a\xad\x87\xe9\xb2\x1a\x0a\x79\x58\xef\x64\xa2\xee\xef\x93\x8f\x4c\xde\x48\x51\xf0\xef\xad\x5a\xab\x3a\xd7\xe2\x45\x7c\x40\xa7\xba\x49\x0d\x95\x4e\xfb\xe4\x45\xe5\xc6\x40\xd8\x84\x7b\x48\xdd\x7b\xae\x24\x0f\x43\x95\xe0\xe3\xed\x4a\xf6\x1e\x16\x21\xc8\x9e\xf7\xff\xa9\xfb\x57\xb9\xfb\x57\x13\x42\x25\x88\xe1\xf3\x73\xb2\xa0\x5f\x5e\x34\x09\xb7\xfc\x13\x80\xc4\x84\x46\x68\x0a\x02\xec\xbe\x77\x12\x7f\x2d\xc3\x3f\x42\x70\xd2\x62\x0c\x71\x36\xa6\x64\xfc\xa5\xe7\xad\xf6\x76\x72\x4a\xa2\x1f\xd1\x65\x83\xb0\x5c\x7e\xef\xf5\x93\xed\xc4\x2e\x83\xd2\x27\x62\x54\x28\x07\xf5\x61\xa8\xb9\xa9\xd9\x63\xa4\x2d\x6a\xf2\xa1\x76\x70\x10\x94\x8a\x9b\xfa\x19\x60\xab\x5d\xae\xe1\xa1\x22\x41\x56\xb1\x58\xf2\x2f\x2a\xd4\x1e\xe6\xcf\xb7\xbf\x07\xb6\xa5\x85\xf1\x5e\x5c\xbd\xe7\x76\x3b\x71\x2d\x54\xac\xcd\xe2\x2d\x44\x61\x0f\xb1\x87\x9b\x71\xb1\x78\x8b\x93\x06\x9a\xe0\x00\xbc\x78\x27\xd2\x24\x5f\xa8\x82\x2d\xfe\xbd\xe7\x5d\xfd\xd9\x43\x82\x27\xe5\x25\xa6\x3c\xf4\x10\x16\x04\x5f\x51\x3c\x02\x4a\x21\x18\x3d\x35\xea\xf1\x4a\x12\x49\xcb\x75\xa3\xd6\xd3\xab\xec\x32\xe9\x45\xf9\x78\x31\x03\x66\x9a\xc0\x55\x73\xb5\x47\x34\xb7\xd7\xdb\xa4\x27\x49\x3b\xe4\xa5\x31\xe5\x11\xa4\x99\x39\x20\xd1\x8c\xe4\x9d\x7b\xfd\x6f\x55\x5c\xa2\x37\xf5\x39\x06\x25\x95\xf9\xba\x6f\x49\xe0\x9a\x2a\x97\xc5\xf9\x5d\x92\xce\xd7\x4b\xfa\xca\xb5\xd6\x77\xaf\xf5\x71\x52\xd3\xb9\x2e\x4a\xd3\x9f\xfb\xef\x63\xaf\xec\xd7\x2e\x5f\xa0\x66\x8b\xa1\x35\xdf\x7d\xdb\xa1\xef\xd6\xbc\x15\xd1\xb7\xb7\x64\x72\xbd\x41\xd0\x57\xa5\xa3\x3d\xe3\x98\x2c\xe3\x8c\xbc\x99\xa9\xf9\x0e\xa5\x69\xd9\x7c\xf0\xb6\x2d\x85\xbe\xfd\x16\x81\x9a\x63\x35\xe5\x59\xcd\x56\xc9\x64\xbd\x91\x01\xb2\x6c\x08\x92\x29\xed\xdf\xa4\xde\xe8\x8a\xc6\x64\x2d\xfa\x99\xc3\xb6\xf2\x51\xeb\xee\x81\x24\x45\xdb\x46\x7e\x21\x28\x6a\x57\xf4\x3f\xdf\x0e\x1a\x08\xb0\x10\x74\xf8\x6a\x44\x98\xe2\x08\xcd\x20\x20\xf8\x68\x0a\x98\x36\x73\xa9\x06\x1f\x70\xf4\x49\xf9\x63\x11\x60\x8a\xa3\x61\xec\xf3\xab\x88\xfe\x42\xd0\x16\xc5\xfe\xf3\xed\xa0\x26\xf2\x0b\x41\xcf\x3e\xee\x02\xe4\x03\x80\x84\xa0\x2d\x91\xbf\xcd\x1c\xb2\x04\x3f\x77\xfa\xec\xc3\x3f\xc1\x4b\x2e\x88\x04\x24\xa7\x02\xa2\x29\xa7\xc7\xd3\xc1\x7c\x58\x93\x2a\xf1\x3e\xf5\xed\x3e\x73\xcd\xa2\x48\x36\x8e\x61\x3e\x8e\xb3\x97\x26\x9f\x64\x6d\xd4\x26\x5f\x25\x4d\xc4\xc9\x47\xf2\x8a\xd4\xa1\x98\x85\x47\x92\xc3\x7e\x92\xae\xa4\x32\x9f\xa3\xa7\x0a\x28\x6f\xf3\x13\x9e\xe7\xe7\x8a\x9c\x03\xcc\xc2\x46\x67\x87\x6b\x7e\x1d\x6e\x67\xd2\x6c\xb7\x51\x39\x60\xd1\x37\xb2\xee\x7c\xd1\xda\x46\xd6\xff\x27\x89\x08\x67\x6e\x3f\x6b\x34\x70\xfb\xd9\x86\x06\x2a\x45\x8c\xe0\x78\x05\xa5\x75\x3b\x95\x4c\x6b\x7f\xa0\x3c\xb2\x24\xea\x65\xd2\x2c\x76\xfc\xec\x33\xf4\x04\x8f\x01\xc5\xdf\x1d\x20\x4a\xbe\x00\x25\x53\xce\x8f\x75\x07\xdd\x43\xca\x4e\xb5\x50\xa3\xf0\xe3\x51\x0c\x57\xa3\xb0\xa5\xf2\x54\xea\xf7\xca\xee\x57\x65\x37\xc8\xcd\x5a\x93\xe1\xd1\x4e\x9a\x8e\xe8\x42\x08\x08\xce\x5e\xd5\x74\x1c\x5b\xe8\xfa\xb7\xc4\xf2\xd5\x29\xab\x12\xf8\x03\xe0\xf3\x5f\xb0\xd9\x40\xb6\xd0\xf6\x43\x6a\xfa\xea\xc4\xfd\x83\x3f\x9d\xbd\xae\x7f\xf0\xa7\x2d\x24\xfd\x3b\x7f\x7a\x4d\x6a\xaa\xa8\xb5\xaa\xac\x51\x9f\xd7\x57\x35\xb1\xd8\xe7\x5e\xd4\x50\xcc\x82\x19\x16\x5f\x5a\x15\xff\x41\xea\x54\x93\xca\x32\x69\x79\xfe\x3a\xf0\x90\xb7\x4b\x03\x1e\xf2\x06\xf1\xe7\x21\x6f\x4b\xec\x4f\xb9\xcd\x1f\x60\x16\x2e\x70\x08\x6e\xa3\x6f\x34\x70\x1b\xfd\x86\x06\x41\x7f\x46\x18\x8a\x80\xa9\x45\x57\xf7\x40\xb0\xa9\x8b\x5d\xce\x68\xdf\x53\x8e\xe5\x5f\xff\xa2\x3d\xa7\xcd\x26\xba\xff\x89\xb0\xbb\xcc\x45\x4b\x9e\xa0\x59\xfb\x19\x61\xc3\x7c\x4c\x6d\x49\x19\x68\x6b\x85\xf0\x63\xfb\x15\xc2\x8f\x9b\x29\x84\x1f\xdb\xa7\xd0\x49\x92\xfa\xaf\xf1\xc3\x91\x2e\x97\x1b\x0d\x5c\x2e\x6f\x68\x90\x7f\xeb\x76\xb4\x1c\x31\x9e\xc2\xf8\xcb\x7a\x61\x97\x4c\xe7\xec\x2b\x36\x5d\x2a\x48\x9e\x06\xce\xbe\x57\x6b\xcb\xda\x47\xbb\x7e\x09\xdd\x82\xa0\x67\xdf\x39\x5b\xa2\x9e\x79\x7b\xfe\x61\xe7\x94\xf2\x87\x36\x04\x3d\x76\xc4\x16\xf2\xb8\xc1\xd9\x07\x7c\xcc\x29\x85\x78\x44\xa7\x7e\xca\x2e\x0d\xfc\xdb\x95\x43\x96\xe8\x17\xdc\x6e\x8b\x04\x47\x2d\x33\x36\x7e\x76\x7a\xc2\xb9\xdc\xed\x19\xf3\x9c\x7d\x81\x09\x5e\x50\x69\x78\xda\xfc\x2d\xe5\x51\x23\x9e\xc5\xe8\xbf\xe1\x23\xcd\xdb\xb5\xf8\x73\x01\x33\xcd\x92\xe8\xd7\x82\x99\xbe\x0a\x10\x34\x7f\x12\x4c\xc3\x9e\xe4\x82\x1e\x0b\x04\xcd\x9c\x39\x02\x08\x9a\x5d\x4a\x0f\x82\xae\x1c\x39\x1a\x08\x5a\x79\xf6\x2a\xf7\xb0\x04\x31\xae\x7c\x3b\x4b\x88\x31\x77\xdf\x41\x8c\x45\x88\xd1\x12\x96\xd7\x06\x31\xe6\x43\x75\x10\x63\xf3\x16\x07\x05\x10\xb7\xb9\x09\x34\x01\x10\x6d\x6b\x7d\x3b\x00\xd1\xd2\xa3\x03\x10\xf7\x08\x20\x36\x88\xb3\x03\x10\xdd\xd9\xdf\xca\xec\x8c\xcf\xfe\x4e\x8b\xc0\xe5\x65\x9e\x11\x40\x5c\x15\x7c\x0e\x40\x2c\xf7\xb0\xef\xe8\x6b\x01\xc4\x8a\x00\x0e\x40\x5c\x99\x6f\xa1\x40\x09\xc5\x2a\x6b\x50\x05\x10\x2b\x02\x38\x00\xf1\x70\xb1\x5f\x03\x10\xb5\x91\x77\x00\xe2\x01\x22\xaf\x01\x10\x2b\xc1\x77\x00\x62\xb9\x9f\x2d\x74\x30\x1f\xb4\xd4\x03\x88\x15\x45\x1c\x80\x68\xee\xe8\x10\xda\xd8\x00\x44\xf3\x72\x79\x45\xea\xb4\x1a\x40\xac\x28\x50\x06\x10\xcb\x72\x3a\x00\xd1\x01\x88\xcd\x0c\xdc\x7e\xb6\xa1\xc1\x49\x01\xc4\xf2\xfa\xd6\x03\x88\x95\x34\xe1\x00\x44\x7d\x57\xa7\x48\xd9\x4d\x01\x44\x83\xd4\x0e\x40\xac\xed\xec\xd4\xaa\xda\x01\x44\x9b\xae\x0e\x40\xac\xe9\xed\xd4\xd2\xd6\x00\x88\x36\x6d\x1d\x80\x68\xe9\xe8\xd4\xba\x9a\x01\x44\x9b\xa4\x0e\x40\x3c\x6c\x59\xb3\x0e\x20\x9a\x04\x74\x00\xe2\xe1\xca\xca\x32\x80\x68\xae\x2c\x1d\x80\xb8\x89\x01\x6a\xae\xc1\x1a\x80\x68\x8c\xbf\x03\x10\x1d\x80\xd8\xcc\xc0\x6d\xf4\x1b\x1a\xb4\x0a\x40\xd4\x1d\xec\x59\x00\x44\xed\x41\xa1\x03\x10\x75\x5d\x1c\x5e\x21\x2d\x80\x68\x51\xc8\x01\x88\xc8\x01\x88\x8d\x0c\x5c\x2e\x6f\x68\x70\x4a\x00\x31\x4f\x0c\x26\x00\x71\x95\x0a\x1c\x80\x58\xb0\xde\x6b\xd0\xab\x00\x62\x25\xea\x0e\x40\xdc\x7b\xd0\x4b\x00\x62\x35\xe4\x0e\x40\xdc\xef\xde\xd1\x06\x20\x56\xa2\xef\x00\x44\x07\x20\x6e\x04\x20\xde\x01\x16\xe3\xe9\x19\xf3\x87\xff\x5d\x80\x68\xf4\x07\x2b\x05\x44\x0b\x9a\x40\x30\x5f\x09\xa7\x18\xc5\xda\xea\x00\x95\x4c\xf5\x63\x41\x8a\x51\x7a\xbd\xc3\x33\x8a\xc9\x95\xfc\x7f\x24\xb3\x02\x55\x3d\x48\xe7\xcb\x41\xb9\xc4\x68\xf5\xc8\x62\xea\xcf\x6d\x3c\xf9\xee\x9f\xe6\xa0\x71\x29\x99\x99\x43\x15\x40\x0f\x79\x1e\xf2\x04\x8c\xd5\x3e\x11\x79\x33\xf2\xa8\x82\xe5\xcd\xf9\x7c\x41\xb1\x38\x2e\x4c\x99\xba\x5e\x42\x29\x73\xaf\xcf\x92\xa4\xcc\xbc\x77\x20\x65\x11\xa4\x34\x47\xe5\xb5\x71\x94\xd9\x48\x1d\x46\xb9\xcf\x16\x07\x05\x2d\x37\xbe\x8b\x35\xa1\x2c\x2d\x79\x60\x3b\xc8\xd2\xdc\xa1\x63\x2c\xf7\xc8\x58\xd6\x87\xd9\x21\x96\xee\x74\x73\x65\x76\xc6\xa7\x9b\xa7\x85\xfc\xd2\xe2\xcf\x08\x58\xe6\x65\xa0\xe3\x2b\xcb\x3d\xec\x37\xf4\x5a\xba\xb2\x1c\x7d\x07\x57\xae\xcc\xb7\x08\x7f\x09\x33\x5b\x17\xa0\x8a\x56\x96\xa3\xef\xc8\xca\x43\x05\x7e\x8d\xab\xd4\x85\xdd\x61\x95\x7b\x0f\xbb\x06\xaa\x2c\x47\xde\x31\x95\xe5\x7e\xb6\x10\xc1\x74\xde\x52\x4f\x54\x96\xe5\x70\x40\xa5\xb9\xa3\xfd\x0b\x63\xc3\x29\x8d\x0b\xe5\x15\x49\xd3\x6a\x9a\xb2\x2c\x40\x19\xa6\x5c\x97\xd2\xa1\x94\x0e\xa5\x6c\x66\xe0\xf6\xad\x0d\x0d\x4e\x8a\x52\xae\xaf\x6e\x3d\x48\x59\xce\x10\x8e\xa3\xd4\x77\x75\x82\x64\xdd\x14\xa3\xd4\xca\xec\x20\xca\xda\xce\x4e\x2c\xa9\x9d\xa1\x34\x8b\xea\x08\xca\x9a\xde\x4e\xac\x6b\x0d\x40\x69\x16\xd6\xe1\x93\x96\x8e\x4e\x2c\xaa\x99\x9e\x34\xeb\xe9\xd8\xc9\x43\xd6\x31\xeb\xe4\xa4\x41\x3b\x07\x4e\x1e\xaa\x88\x2c\x63\x93\xc6\x3a\xd2\x51\x93\x9b\x18\xa0\xa6\x02\xac\x31\x93\xa6\xe0\x3b\x64\xd2\x21\x93\xcd\x0c\xdc\x86\xbe\xa1\x41\xab\x90\xc9\xea\xf1\x9d\x05\x98\xd4\x9d\x05\x3a\x5e\x52\xd7\xc5\xa1\xe5\xd1\xd2\x92\x66\x79\x1c\x2c\x89\x1c\x2c\xd9\xc8\xc0\x65\xf1\x86\x06\xa7\x84\x25\xd3\xac\x60\x42\x25\xf3\x3c\xe0\x48\xc9\x82\xf5\x1e\x23\x5e\xe5\x24\xcb\x21\x77\x98\xe4\x9e\x23\x5e\x82\x24\x2b\xf1\x76\x8c\xe4\x3e\x77\x8a\x36\x42\xb2\x1c\x7a\x07\x48\x3a\x40\x72\x23\x40\xf2\x86\xe2\x31\xa0\x6b\x2e\xc9\x84\x8c\x71\xb5\x1e\x3b\x23\x54\x12\xc7\x59\x29\x02\x3a\xa9\x87\x3d\x16\x91\x15\x6c\xdc\x23\xb6\xb8\x1b\xe6\x53\x48\xc2\x65\x3c\xa4\xa8\x99\x1f\xcb\xe8\xff\xaa\x22\x70\x07\x74\xb2\x4a\x10\xac\xd8\x6a\x1e\xb7\x8a\xe3\x34\x54\x71\x3a\x28\x70\x57\x4c\x65\x0d\x7c\xff\xac\x14\xb1\xfa\x1d\x6b\xb6\x9d\xcb\xfb\x24\x78\xd4\xea\xf9\xc8\x24\x08\xac\xd9\xbe\x7c\x9d\xcb\x05\xa1\x46\x58\x71\x9b\x57\x55\x41\xd1\xe2\x32\x22\x85\xb7\x4f\xb8\x6e\x8a\xde\xa5\x0b\xa5\xe8\xd9\x0e\x2b\xa3\xa1\x53\xe5\x87\x06\x75\x8e\xa5\x24\x6d\xd1\xb1\x1d\x20\xda\x7d\x2f\xd9\x01\x0f\xdd\x52\x6d\xf7\x1a\x1c\xf0\xb0\xb8\xf6\x28\x0f\x4f\xb9\xe6\x94\x37\xe9\x5a\x53\x9e\xb4\xe8\xee\x73\x07\x62\x59\xc6\xf0\xce\x68\x36\xd7\x9f\x69\xc5\xac\x06\x8f\x1a\xfc\x1f\x2a\xe6\x5c\x34\x68\x45\x79\x88\xe2\x3f\x64\x7f\x06\xeb\xa2\xf9\x73\x0e\x51\x3c\x0d\x7c\xf5\xa2\xf0\x00\x43\x36\x7d\x93\x49\xe2\x5f\xe3\x19\x58\x9f\x55\xd8\x15\xd5\xdf\xd4\x5d\xa5\xab\xd9\xdd\x0f\x3c\x92\xa7\x73\x97\x2d\x66\x23\x10\x25\x87\xd5\x14\x33\x3b\x7c\xc3\x45\xdb\x1c\xa6\x3c\x1c\xc6\xb3\xdd\xec\xf5\x80\x87\x03\xd5\x62\x4b\xcf\xf7\x90\xd0\x0a\xbf\x76\x3b\x89\x59\xb7\x33\x95\x33\xda\xbf\xf8\x5f\x00\x00\x00\xff\xff\xb9\x74\x93\xe6\x10\xc2\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 49680, mode: os.FileMode(436), modTime: time.Unix(1483901485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483903181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483903195, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x53\xdf\x1b\xc3\x1e\x8b\xd6\x50\xb2\xed\x96\xd2\xd0\x40\xd2\x43\x8f\xb2\x35\x71\x04\x5a\xc9\xcc\x4c\x5c\xc2\xb2\xff\xbd\xd8\xb2\x89\xdb\x4d\xba\xcd\xa6\xe9\xc9\xb9\x04\xe5\x8d\xde\xd3\xf0\x29\xd8\xa3\xde\xdc\x7d\x9d\xaf\xbf\x2f\x3f\xc0\x56\x1e\x5c\x9e\xa8\xf6\x0b\x9c\xf6\xd5\x6d\x8a\x3e\xcd\x93\xc7\x47\xc1\x87\xda\x69\x41\x48\xb7\xa8\x0d\x52\x0a\xb3\xa7\xa7\x44\x15\xc1\xec\xf3\x04\x00\x40\x19\xdb\x40\xe9\x34\xf3\x6d\x5a\x06\x2f\xda\x7a\xa4\x34\x6a\xed\x67\x6c\xe1\x75\x53\xe8\xde\x62\xd0\xd5\xf6\x26\x5f\x52\x28\x91\x19\x56\xa2\x65\xc7\x2a\xdb\xde\x1c\xf6\x8f\xfd\x45\x17\x0e\xdf\x12\x72\x1d\x3c\xdb\x06\x47\x31\x5d\x69\xa7\xff\x52\x0c\x71\x0b\x0b\xd9\x1a\x4d\xbf\x2a\x02\x19\x24\x34\xbf\x6d\x8f\x16\x6d\x9b\xcf\x7f\x8f\x1a\x1d\x17\xa2\x68\x86\x36\x54\x26\x27\x1c\x86\xc2\xa1\xcf\x53\x75\x2a\x3b\x16\xa5\xb2\x13\x87\x53\x72\xc0\x71\xf6\xa1\xd7\x3f\xac\x08\x12\xdc\x59\xc2\x52\x60\x81\xcc\xba\x42\xf8\x62\x59\xd0\x23\xbd\xdc\xcc\x49\x11\x3a\xfa\x76\x03\xb3\xd8\xef\xac\x8f\x8a\xd6\x8b\x3d\xa3\xdb\x44\x65\x74\x1d\x8e\xa6\x70\xad\x3d\xb0\xec\x1d\xb6\x77\xcc\x05\x7a\x57\xb8\x1d\xa6\xf9\xfb\x52\x6c\x83\x2a\x6b\xf5\x97\xce\x81\x8e\xf1\xfc\x9c\xee\x96\xac\x24\xd4\x7f\x19\xe2\xcd\x1f\x32\xce\x05\x0e\xe7\xf0\xfb\xc6\x48\xd7\xa7\xd6\xa6\xf0\x04\x6d\x50\x2e\x85\xb6\x44\xb2\xc1\xd8\x12\x3e\x87\xe2\x0a\xcc\x26\x50\x83\xf2\x5a\x50\xf3\xe0\x37\xb6\x82\x8f\xd6\x21\x2c\x82\xb7\x12\xc8\xfa\xea\x5f\xa2\xea\x5d\x63\xd0\x04\x6c\x50\x2e\xfd\x67\xcd\x09\x0d\x7a\xb1\xda\x5d\x97\x5b\x9f\xd7\xc6\x4d\xd8\x5e\x8f\xed\x3e\x84\xca\x21\xcc\x5d\xd8\x99\xff\xc6\xee\xbe\x8b\x9b\xd0\x5d\x86\xee\xd3\x7a\xbd\xbc\xca\x8b\xc7\x0a\xa9\x99\x9e\x61\x07\xe5\xf8\x48\xf0\xfc\xd5\x5f\x65\xdd\x98\x33\x1a\xa1\x32\x63\x9b\xd1\x72\xe7\xf2\x64\x24\xb6\xcb\x51\x99\xca\xa2\xa5\xca\xe2\x50\xf8\x33\x00\x00\xff\xff\x90\xc8\x2c\xa6\x25\x0e\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3621, mode: os.FileMode(436), modTime: time.Unix(1483902029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

