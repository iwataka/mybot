// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/js/config_after.js
// assets/js/config_before.js
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6a\xeb\x40\x0c\x46\xdf\xbd\x0a\x6d\x60\x4c\x20\x17\x6e\x99\x40\xf6\x22\x8f\x14\x67\x5a\x47\x1a\x64\x25\x4d\x5a\xba\xf7\x62\xc7\x31\x53\x28\xa1\x7e\xf0\xd3\xd1\xd1\xcf\x37\x9d\xd2\x0d\x3e\x1b\x58\xbe\x82\x44\x59\xfa\xe0\x5a\x22\xfc\xdf\x94\xeb\xae\xf9\x6a\x9a\xf6\xf5\x7c\xea\xd4\x4d\xa5\x42\x3b\x4c\x6f\xbd\xe9\x59\x28\x24\x1d\xd4\x22\xb8\xa1\x8c\x05\x8d\xc5\x77\x2b\xe6\x7c\xf5\x80\x43\xee\x25\x42\x62\x71\xb6\xbb\x32\xa9\x38\x66\x61\xab\x94\x27\xbc\x86\xf7\x4c\x7e\x8c\xf0\xb2\x79\x34\xa7\x7c\xa9\xfa\x23\x8c\x05\xa5\x3d\x60\x55\x76\x50\xf1\x30\xe6\x0f\x8e\xf0\xef\x51\x55\x8c\xeb\x59\xd5\x88\x2d\x82\xa8\xf0\xee\xaf\x1b\x4c\x53\x1e\x30\x60\xf2\x7c\xa9\x65\x0b\x4b\x4a\x3d\x5b\x37\x9c\x79\x45\x0b\x8e\xe3\xaf\x6c\x6f\x7c\x9b\x29\xc7\x6e\x60\xd8\x83\x1f\x19\xe9\xe9\x31\x71\xc8\x89\x57\xfb\x5c\xd7\xce\xff\x30\xba\xe5\xc2\x34\x59\xe6\xf4\xf6\xe0\xd6\x12\x0f\xec\x5c\x2b\xb5\x60\xca\x7e\x8b\xb0\x69\xb7\xcf\x76\x5e\x67\x9b\x0e\xed\xd8\x85\x29\x19\x16\xff\x91\x8b\xf5\x59\xee\x8f\x62\xbb\x5c\xf8\x3b\x00\x00\xff\xff\x0a\xc5\xa6\x4c\x39\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1503580372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4b\x8f\xd3\x30\x10\x80\xef\xf9\x15\xa3\x00\x72\x2b\xb5\x89\x84\x38\x85\xa6\x3c\x24\x24\xae\xa0\xe5\x80\x00\x55\xb3\xf6\x6c\x62\xf0\x6b\xfd\x68\x14\xa2\xfc\x77\x54\x93\x76\xcb\x0a\x0e\x5c\xa2\x19\x7f\x93\x19\xcf\x27\x1f\xd1\x43\x1c\x64\x8c\xe4\xdf\x70\x6e\x93\x89\x01\x5a\x30\x34\xc0\x5b\x65\xad\xe8\x6d\x32\x62\x35\x15\x00\x02\x63\xd2\x37\xf6\x07\x19\xf9\x93\x7c\x73\x85\xab\x78\x3e\x0d\xd5\xd0\xcb\x48\xc1\x21\xa7\x4d\x01\x70\x9f\xc8\x8f\xff\xf9\x8f\x27\x6d\x23\x35\x70\x9a\x09\x90\xbc\x6a\x80\x55\x55\xbd\xdc\xb1\x4e\x81\x7c\xa8\x03\xa1\xe7\x7d\xfd\xea\xbe\x7d\xf6\xe1\xd3\xbb\x8f\x9f\xd9\x26\x57\x0f\x52\x09\x8e\x5e\x34\xc0\x96\xf3\x02\x60\x2e\xe6\xf5\xcb\xa2\x78\xba\x62\x4f\xe2\xe8\x08\x7b\x42\x01\xd5\x25\x64\xeb\x87\x78\x65\x92\x52\x9b\x3c\xda\xa0\xa6\x06\xd8\x32\x76\x8b\x8b\x9b\x3c\x48\xc8\xe0\x14\x8e\x0d\xb0\xc0\x3d\x91\x39\x9c\x8a\x33\x09\x36\x79\x4e\xcd\x63\xa3\x27\x14\x49\x3b\x85\x91\xc2\x79\x35\xd2\x2e\x8e\x0d\x7c\xc9\x09\x00\xdb\x09\x79\x04\xae\x30\x84\xb6\xcc\x6c\xab\x29\x04\xec\xa8\x5c\xb6\x03\x60\x37\xa3\x23\x40\x33\xc6\x5e\x9a\x0e\x7a\xf2\xf4\xc0\x76\xb5\x90\xc7\x3d\xcb\xe9\xb7\xea\xbb\x95\x66\xc5\xbe\x1a\xb6\xfe\x5d\x10\x52\xd7\x51\x88\xd2\x9a\x06\xde\xa3\x11\x8a\x6e\xd1\x87\x8a\x5b\xed\xa4\xa2\xd5\x1f\xb7\xd8\x5f\x35\x95\xba\x83\xe0\x79\x5b\x4e\x93\xf3\xf6\x4e\x2a\x3a\x48\x8d\x1d\x1d\x92\x57\xf3\x5c\x02\xaa\xd8\x96\x0b\x81\x4c\x4a\xe8\x49\x76\x7d\x6c\xcb\x17\xcf\x4b\x18\xa4\x88\x7d\x0e\xeb\xeb\xb6\xc1\xa1\xd9\x4f\xd3\x49\xdc\x3c\xbf\x9e\xa6\x2b\x91\xf3\xbc\xab\x33\x7e\x54\x7e\x76\xa3\xf0\x96\x14\xe4\xef\xd6\x79\xa9\xd1\x8f\xe5\xfe\xce\x2a\x65\x07\xf2\x27\xbb\xd3\x25\x39\x64\xfd\x7f\x6b\xf8\x0f\x57\xeb\xcb\x7b\xf9\x15\x00\x00\xff\xff\xf5\xd7\x8d\x10\x18\x03\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 792, mode: os.FileMode(420), modTime: time.Unix(1529415209, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\x4f\x8b\xdb\x30\x10\xc5\xef\xfe\x14\x73\x5a\x39\x6c\x6c\xb6\xd7\xb8\xbe\x2c\x2d\x74\x61\x1b\xca\x92\x9e\x4a\x0f\x5a\xeb\x39\x11\xc8\x92\x91\xc6\x31\xa6\xe4\xbb\x17\xff\x89\x13\xa7\x2d\xdd\x5e\xab\xd3\x80\xde\x3c\xbd\xf9\x49\x2a\x1b\x5b\xb0\x76\x96\x14\x0c\x18\x2f\xae\x8d\x5f\x1b\x66\x67\xd7\x54\x39\x25\xcd\x8a\x7e\x44\x44\x44\x47\xe9\x89\x3d\xe5\x34\xee\xa6\xb5\xf4\xb0\xbc\x75\x0a\x57\x65\x36\x48\x75\x49\x31\xfb\xb4\x30\x32\x84\xad\xac\x40\x79\x9e\x93\x18\xfd\x95\x38\x1b\xf6\xab\x74\x9e\xe2\xde\x59\x53\x4e\x0f\x19\x69\x7a\x4f\x7d\xe7\x41\x1b\xd5\xfb\x85\xd4\xc0\xee\xf9\x90\x91\xbe\xbf\xbf\x6e\x3c\x27\x1a\x94\x94\x2f\x9b\xbe\xe9\xef\x0b\x61\x9f\x67\xd8\x4d\xb9\xab\xa7\x34\x07\xad\x14\xac\xa0\xbb\xbb\xd1\x23\xb5\x4e\xe1\x12\xf6\x69\xfb\xe5\xeb\x4e\xdc\x9e\xd8\xaf\x51\x7d\x94\xa6\x01\xe5\x24\x4a\x69\x02\x44\xf6\x8b\x6c\x39\x3f\x89\xdf\x48\x26\x90\xda\x5a\xf8\x4f\xbb\xcf\xcf\xbd\xec\xc3\x00\xe9\x46\x7c\x8a\x96\xd5\x89\x60\x02\xfe\x2b\x8c\xec\x9b\xb7\x50\x3c\xbf\xa1\xb7\xc1\x7c\xc1\x11\x9e\xff\x06\x33\x3a\x45\xd1\xfc\x09\x5c\x0d\xbb\xd3\x15\x8c\xb6\x88\xaf\x9f\x7e\x28\x3c\x60\xa7\x1c\xca\x15\x4d\x05\xcb\xe9\x1e\xfc\xd1\xa0\x2f\x1f\xbb\x27\x15\x0b\x6e\x35\x33\x7c\x12\x20\x7d\x71\x48\x64\x51\xb8\xc6\x72\xa2\x6d\xdd\xb0\x58\x8d\xe3\x66\xb3\xe7\xf0\xbf\x1e\x9d\xea\xfe\xc1\x92\xa7\x70\xc9\xd0\x9c\xbc\x3a\xd5\x89\xd5\x68\x39\xdb\x2d\x29\x4c\xf3\x73\xcb\xec\xd3\x56\xab\x3d\x38\xa4\x85\x87\x64\xcc\x93\xce\x4c\x96\x17\x15\x5c\xe3\x0b\xec\xba\x1a\x1b\x12\xb5\x77\xa5\x36\x10\xeb\xa5\x64\xe6\xb2\xb9\xaa\x2f\x8c\x2f\xea\x39\xde\xfa\x0f\xa7\x71\x0b\xf0\xb3\xae\x34\x6f\xe8\xdd\xc3\xcd\x35\xad\xa2\x53\xf4\x33\x00\x00\xff\xff\x50\x9c\x1b\xd8\xab\x04\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 1195, mode: os.FileMode(420), modTime: time.Unix(1529420336, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x6e\xdb\x30\x0c\xc6\xef\x79\x0a\x42\x40\x81\xf6\x30\x19\xc3\x76\x54\x0d\x0c\x05\x76\x2e\xda\xdc\x07\xd9\xa2\x17\x21\x9e\xe4\x49\x9c\x93\x22\xc8\xbb\x0f\xb1\xe4\xe5\x4f\xed\x4c\xce\xbc\xa3\x29\x91\x1f\x7f\x5f\x48\xc7\xbb\x9d\xc2\x4a\x1b\x04\x26\x4b\xd2\xd6\x7c\x2b\xad\xa9\xf4\x77\xb6\xdf\x2f\x84\xd2\x2d\x94\xb5\xf4\xfe\x91\x91\x2c\x6a\xfc\xe0\xd0\x37\xd6\x78\xdd\x22\xcb\x17\x00\x00\xa2\x8b\x9f\x5d\x82\x70\xd5\x93\xd3\x0d\xaa\xf8\x54\x58\xa7\xd0\xa1\x8a\x69\x21\x75\x85\x52\x1d\x9f\x43\xcc\x9d\x07\x42\x50\xe5\x22\x23\x35\x7c\x62\xe4\x0f\x1c\x3f\x6d\x65\xfd\x6b\xe0\x58\x64\xa7\x42\x22\xbb\x68\x45\x50\x61\xd5\xdb\x79\xca\x6e\xa7\x2b\xb0\x0e\xee\xf1\x27\xf0\xe5\x5b\x83\xc0\x7c\x2d\xcb\x35\x7b\x38\x0d\x6d\xb0\x58\x59\xbb\x66\x0f\xfb\x7d\x12\x18\x38\xbb\xf1\x8d\x34\x8f\xec\x23\xcb\x97\x1b\x4d\x84\x6e\x9c\x86\x36\x88\x34\x7e\xfc\x2e\x18\xfa\x2e\x57\x58\xae\x0b\xbb\x05\xfe\xa5\xfb\x85\x79\xd4\xe1\xcb\x43\x39\xb8\x6f\x9c\x36\x54\x01\xbb\xf3\x77\x9e\x01\x7f\x76\x58\xe9\x2d\x30\x1e\xe6\x81\x53\xbc\xdd\x89\xbf\x03\x8b\xfe\x5d\xf5\x37\xb4\x81\x46\x5d\xe4\x76\x96\x1e\xbd\x8b\x42\x6c\xb2\x75\x9f\x12\xac\x73\x38\xb3\x79\x2f\xa1\x60\xb2\x7d\xb1\x81\x9b\x0d\x1c\x5d\x8d\x4a\xb6\xd6\x69\xba\xb2\x04\x53\xd1\xbe\xc6\x8a\xc9\x6c\x7d\x0b\xf3\xc3\x95\xb6\xae\xb1\x13\xf3\x93\xf9\x6a\xed\x69\x89\x5b\x1a\x42\x7c\x3a\xd6\x4d\xa6\x3c\xe9\xe5\x7f\xae\x41\x78\xab\x4c\x5e\x82\xcf\x2c\x7f\x3d\x64\x8e\xdb\xd4\x68\xf3\xef\x33\xd2\x69\xf0\x67\x6d\xfe\x6a\x5b\xc7\xc1\x1b\x6d\xe6\x9f\x0a\x4f\xf2\xca\xaa\x4f\x43\x79\x25\xe9\x12\x59\x0e\xb2\xf3\xc3\x38\x94\x33\x0e\x78\x80\x7a\xe9\x6b\x26\x92\xfd\xe9\x61\xd6\xc1\x1e\x44\x1e\x79\xe9\xc3\x90\xee\xc5\xff\xe3\x95\xf9\x1e\x92\xef\xdd\x2b\x57\xd2\x18\xac\xe7\xf4\xf7\x29\x96\x4c\xb4\xb7\xef\xe0\x26\x77\x45\x76\xf2\x35\x22\xb2\xee\x7b\x2a\x5f\x88\x4c\xe9\x36\x5f\xf4\xdc\xbf\x03\x00\x00\xff\xff\x1e\x69\xb6\xee\xc6\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2502, mode: os.FileMode(420), modTime: time.Unix(1512482849, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xdb\x3c\x0c\xbe\xe7\x57\xf0\x15\x50\xe0\xdd\x21\x0e\x50\x14\xdb\x0e\x8e\x81\xee\x90\xb5\x43\x8a\x05\x6d\xb7\x6b\xa2\xc4\xb4\xa3\x56\x96\x3c\x49\xf9\x82\x91\xff\x3e\xc8\x5f\x69\xda\xa4\xb1\x33\x1b\xe8\xad\x91\x45\xf2\x79\x1e\xd2\x24\xeb\x24\xf1\x31\x60\x02\x81\x04\x8c\x1b\x54\xe3\x99\x14\x01\x0b\xc9\x76\xdb\x71\x7d\xb6\x84\x19\xa7\x5a\xf7\x89\xa1\x53\x8e\x5d\x85\x3a\x96\x42\xb3\x25\x12\xaf\x03\x00\xe0\xa6\xe7\x7b\x97\x20\xbb\xaa\x8d\x62\x31\xfa\xf9\xaf\xa9\x54\x3e\x2a\xf4\x73\xb3\xcc\x74\x8e\xd4\xdf\xfd\xce\xce\xd4\xfe\x41\x76\xe8\x7b\x6e\xcf\xf8\x75\x9f\x08\x1a\xe1\xf1\xa7\x4b\xca\x17\x07\x1e\xbb\xbd\x97\x10\xdc\xde\x2b\x90\xae\x99\x4a\x7f\x53\x01\x74\x92\xb0\x00\xf0\x0f\x38\x8f\x9b\x18\x81\x98\x15\x33\x06\x95\x55\xf5\x00\x18\x50\x72\xa5\x63\x2a\xfa\xe4\x0b\x81\x99\xe4\xd9\xdf\x97\xc4\xfb\x8e\x02\x15\xe5\x87\x59\x24\x09\x72\x8d\xb0\x17\x47\x73\x3a\x7b\x3e\x19\xe5\xb2\x5e\x14\xe1\x1f\x76\xe8\xc5\xd4\x92\x12\xfa\xb8\xca\x6f\x0e\x33\x97\x9c\x69\xf3\x88\x6b\x33\x95\x6b\x70\x06\x69\xdd\x39\xa3\xdc\x19\xfc\x1f\x2b\x26\x4c\x00\xe4\x42\x5f\x68\x02\xce\x48\x61\xc0\xd6\x40\x9c\xac\x40\x9d\x22\x2a\xf9\x74\x08\xd6\x89\x8c\xc2\x7b\x55\x36\xa7\x1a\x22\xf4\x19\xad\x4d\x68\x2a\x25\x7f\x40\x8e\xb3\x3d\x4a\x37\x54\xdf\x59\x77\x27\x29\xcd\xa9\x1e\xa7\x81\xcf\xe6\x54\xad\xde\x8e\x32\x5f\x28\x0e\x8d\x66\xf3\xd7\xfd\xb0\x72\x42\x17\x8a\x8f\xdb\x4b\xaa\x42\xb3\x42\x34\xe8\x37\x94\xd4\xfb\xc2\xdf\x49\x5e\x65\xe4\xe6\x49\x05\x74\x29\x15\x33\x08\x66\xae\x50\xcf\x25\xaf\xcf\xce\x64\x19\xfb\x19\xdc\x0a\x33\x32\xaa\xe4\x37\xc8\x5d\x3f\x16\x9e\x4f\xf2\x2c\xc0\x8c\x4b\x30\x2d\x66\xb1\x05\xc6\x65\x46\xab\x53\x2e\xe1\xb4\xc9\x99\x53\x11\xd6\x24\xe9\x32\x11\x2f\x0c\x04\x52\x45\x7d\x22\x97\xa8\x56\x36\x31\x04\xcc\x26\xc6\x3e\xb1\x02\x10\xb0\x73\xb1\x4f\x92\x24\xa7\x38\xb1\x14\x27\x25\xc5\x49\x41\xd1\x46\x9f\x6c\xb7\x04\xd2\x49\x69\x0d\x0a\xbd\x86\x54\x84\xdb\x2d\x39\x00\xab\x52\xa3\x7a\x3b\x4f\xdc\xff\xba\x5d\xf8\xcd\x34\x93\x02\xae\x47\xb7\xd0\xed\x56\x53\x68\x37\xd1\xbe\x12\x2f\xb3\x3f\xaa\xd7\xde\xc4\x1b\xd2\x29\x1e\x99\x77\x35\xfb\x5c\x16\xd5\x49\x1d\x9e\xac\x9a\x65\x76\x99\xdb\xcb\x8d\x97\xcb\x4e\x8c\x2b\xe2\x0d\xe8\xec\x9d\xdd\x87\x8a\x10\x15\x70\xf6\x8c\x9c\xcd\xa5\xac\xfb\x26\x35\x58\x64\xb9\x22\x01\x9d\xa1\x93\xa2\x1a\xef\x50\x1d\x2e\xbe\x5c\x70\x4b\xd0\xb9\xb6\x16\xc3\xd2\xe0\xec\x9a\x3c\xfa\x06\x4e\xf9\x42\x29\xf4\x3f\x9c\x54\x39\xae\x57\x62\x4d\xde\x57\xeb\x5b\x66\xd4\xa6\x5e\x76\x59\x5e\x21\xfd\x78\xb5\x55\x00\xab\x55\x5e\x37\xb9\x51\x9b\x8a\x3d\xc9\xcd\x87\x13\xeb\x49\x6e\x6a\xe9\xf4\x43\x6e\x5a\x94\x68\xaf\x71\xdb\xf6\xdb\x64\xdf\xb6\xc7\x55\xdb\x76\xaa\x67\xe3\x5d\x7b\x7f\x2c\x09\x3f\xa2\xea\xb9\xd9\xc9\x94\xf9\xac\x3e\x9c\xb2\xfb\x2d\x33\x95\xa1\x6c\x94\xa5\x0c\x65\x65\x86\x32\x94\xe7\xb3\xb3\xab\x8a\x5d\x80\x16\x34\xc4\x33\x97\x95\x57\xff\x7e\x17\xde\x8e\xeb\x11\x31\x01\x1a\x85\x61\x11\x8a\xfa\xe5\x5f\xae\xbd\x03\x2e\xa9\xf9\x7c\xf5\x72\xf5\x2d\x62\x3b\x77\x4c\x3c\x14\x11\x4e\x0a\xc9\x0b\xab\x88\x89\x71\x09\xac\xf9\x05\x38\xa2\xeb\xd6\x79\xd3\xf5\x39\xbc\xe9\xfa\x1f\x79\xbb\xbd\x17\x5f\x92\xdc\x5e\xfa\x95\xcc\xeb\xb8\x3d\x9f\x2d\xbd\x4e\xb1\x23\xff\x0d\x00\x00\xff\xff\x1e\xb5\x5e\x46\x9c\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5020, mode: os.FileMode(420), modTime: time.Unix(1529421066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xcd\x6e\x1b\x39\x12\xbe\xfb\x29\x6a\xb9\x83\x75\x02\x44\x12\x92\xdc\x66\x25\x01\xb3\x4e\x06\xc8\x61\x92\x6c\xec\x39\xec\xc9\x60\x37\xab\x25\xc6\x14\xd9\x4b\x52\xb6\x05\xc1\xef\x3e\x60\x93\xdd\x6e\xb5\xfa\x4f\x8e\xa5\xb1\x1d\xe9\x90\xc4\xea\x62\xf1\xab\x3f\x16\xbf\x52\xe4\xf5\x9a\x61\xc2\x25\x02\x89\x95\x4c\xf8\x8c\xdc\xdd\x9d\x8c\xff\xf1\xe1\xcb\xd9\xc5\xff\xbe\x7e\x84\xb9\x5d\x88\xe9\xc9\xd8\xfd\x05\x82\xca\xd9\x84\xa0\x24\xd3\x93\xf5\xda\xe2\x22\x15\xd4\x22\x90\x39\x52\x86\x9a\xc0\xd0\x2d\x8c\x14\x5b\x4d\x4f\x00\x00\xc6\x26\xd6\x3c\xb5\x60\x74\x3c\x21\x23\x6a\x0c\x5a\x33\xfa\x6e\x46\x7e\x97\xcb\x08\x13\xa5\x71\xf8\xdd\x90\xe9\x78\xe4\x45\xa7\x27\x7e\x21\xe3\xd7\x10\x0b\x6a\xcc\xc4\x41\xb2\x94\x4b\xd4\xc4\x2b\x75\xaf\xf2\xde\x92\x5e\x47\x34\xec\x5d\x08\x94\x15\x7c\x5f\x2e\x22\x65\xb5\x92\x25\x05\x99\xcc\xfc\xed\xf4\x2c\x43\xb2\xd4\xd4\x72\x25\xc7\xa3\xf9\xdb\xaa\xc8\xbb\x5c\x8b\x40\xca\x48\x21\x8f\xb0\x52\x4b\x0d\xea\x46\x42\xa4\xec\xa9\x01\xa3\x96\x3a\x46\xf3\x06\x12\x2e\x2c\x6a\x03\x54\x32\xa0\xb1\x53\x6b\xc6\xa3\xf9\xbb\x8a\xde\x44\xe9\x05\x70\x36\x21\xea\x1a\xf5\x8d\xe6\x16\x49\x90\x9e\x90\xe0\x9e\x11\x81\x05\xda\xb9\x62\x13\x92\x2a\x63\x09\xa0\x8c\xed\x2a\xc5\x09\x59\x2c\x85\xe5\x29\xd5\x76\xe4\xd4\x0c\x18\xb5\xd4\x79\xd0\xfd\x50\xd9\x86\xcb\x74\x69\xc1\x3d\xd8\xd8\xc9\xab\x31\xcb\x68\xc1\x2d\x81\x6b\x2a\x96\x38\x21\xe7\xf4\x1a\x49\x6e\x6d\x64\x25\x44\x56\x0e\xc4\x2c\xfb\x2b\xd5\x7c\x41\xf5\x8a\x80\xb1\x2b\x81\x13\xc2\xb8\x49\x05\x5d\xfd\xca\xa5\xe0\x12\xc9\xf4\xa4\xc6\xba\xaa\x39\x09\x17\x58\xb2\x69\x86\xb6\x59\x1d\x54\x5e\xc1\x90\x5a\xdc\x1f\xd4\x8d\x14\x8a\xb2\x2e\xec\x15\xd7\x04\x77\xed\x0e\xbc\x47\x30\x1e\xc5\xae\x3f\xd3\xdd\xad\xda\xd2\xe9\xb0\x13\x90\x74\xe1\x90\xae\x22\x65\x87\xa1\xc2\x7b\x41\xac\xe6\xd4\x78\xc4\xf8\x75\xc9\x67\xeb\x35\x4f\x60\xf8\x07\x1a\x43\x67\x78\x77\x57\x5b\x7d\x54\xa0\xb6\x90\xfd\x39\x60\x54\xce\x5c\x1d\xaf\xd7\xf7\x8b\x82\xce\x7b\x95\x28\xd9\x56\x25\xbb\x4a\x71\x06\x51\x77\xd0\x14\x2e\xc9\x1c\x3e\xd3\x6a\x99\x42\x66\xb3\xff\x77\xd5\x86\xb2\x3b\x2c\xde\xda\x62\x79\xa1\x30\x2b\x90\x81\x3b\x67\xb4\x12\x04\x52\x41\x63\x9c\x2b\xc1\x50\x4f\xc8\xc5\x2a\x45\xa0\x71\xac\x96\xd2\x66\x7e\x84\x39\x6a\x24\x1e\xd1\x0d\xb7\x16\xf5\xc0\x20\xd5\xf1\x7c\x10\xa4\x06\xd9\x86\x04\x94\xbc\xc2\x55\xaa\xd1\x6d\xc5\x13\x78\x85\xd7\x28\xed\xf0\x0a\x57\x67\x8a\x21\x4c\x26\x13\x78\xfb\xfe\x35\x30\x15\x2f\x17\xee\xc1\x0c\xed\x47\x81\xee\x9f\xff\x59\x7d\x62\xaf\x4e\x1b\x94\xab\x14\xe5\xe9\xeb\x61\x2c\x78\x7c\xf5\xea\x75\xd5\x56\x93\x52\x99\x9b\x57\x72\xc9\x20\xb2\xd5\xc3\x2f\x13\x8f\x96\xd6\x2a\x59\xcd\x30\x86\x09\x5d\x0a\x9b\x1f\x13\x5e\x88\x80\xcb\xec\x81\x55\xb3\x99\x4b\x9b\x85\x62\x54\xe4\xef\x51\x3d\x43\x3b\x21\xff\xac\x40\xb6\x7c\x81\x2e\xa9\x06\x41\xb8\xc5\x65\xce\x2a\xe7\xb1\xcc\xac\x09\x71\x3f\x5e\x84\xd5\xce\xc8\x2f\x29\xca\xf1\xc8\x03\xa9\x66\xa8\x33\xb9\x39\x43\xcb\x99\x98\xc1\x80\x84\xb2\xfa\xf0\x55\xe1\x5a\x1a\x71\xc9\xf0\x76\x42\x06\x6f\x09\x68\xe5\xab\x85\x0a\x35\x23\x40\x35\xa7\x03\x41\x23\x14\x02\x59\xb4\xea\xd0\x35\xb0\xdc\x8a\xad\xda\xaa\x22\x1b\xe4\xca\xc3\x56\x21\x31\xea\xe2\xb6\xb5\xd4\xe5\x6e\xbd\x6c\xbd\x7c\xe8\xd7\xf5\xe2\xe5\xd4\xd8\x4c\x81\xbc\x23\x0b\x65\x30\x04\x9f\x71\xb3\xe0\x85\x62\x32\xfd\x97\x33\xdd\xfc\xbb\x3e\x5a\x1b\x3b\xcc\xdf\x6f\x62\xf2\x4e\xea\x8e\x4c\xee\xcd\x3c\x41\xc6\xa3\xf9\xfb\x06\xbb\x37\x8f\x96\x76\x97\xb8\x5b\x4b\x9f\xdd\x33\xb9\xe9\x4e\xaa\x13\xa5\xec\xc3\xbd\xbd\x55\x96\xb5\x7e\x3f\x73\x31\x69\xf7\x7a\x03\xe6\x9a\xb7\x2b\x6f\x6d\x15\xd5\xfc\xfd\xf4\xc2\x3b\x09\xf2\x28\x98\xcd\x30\x94\x9d\x60\x69\x24\x70\xa0\xd1\xa4\x4a\x1a\x7e\xbd\x55\x08\xd9\xf3\x0d\x61\xf0\x4b\x8c\xd5\x3c\x45\x16\x7e\x8a\x94\x66\xa8\x91\xd5\x15\x84\x75\x09\xdd\x60\xb5\xd5\x2d\x8e\xb7\x6c\x6a\x62\x8d\x28\xb3\xb3\xdd\x8c\x47\xb6\x41\x4d\x2e\x8d\xb7\xb1\x58\x32\x04\x8d\xa9\xe0\x7d\x16\x70\x19\x16\xd8\x1e\xc2\xd9\x69\xd8\x2d\xa6\xec\x1c\x75\x0f\x75\xcd\x12\xe3\x51\x9d\x5b\xc6\xa3\x06\x47\x8e\xed\xfd\xa5\xbe\xfa\x5a\xaf\xb5\x6b\xeb\xf0\x4b\x76\x5a\xbe\x81\x5f\xf2\x82\x81\x5f\x27\x30\xf4\x17\xe6\x61\x48\x97\x61\x91\x2e\xa5\xdb\xc2\xe6\x46\x6d\xd1\x6a\xbd\xce\xce\x39\x63\xae\x8b\xf8\xcb\x4e\x28\xe2\x61\x0e\xc6\x0c\x19\x0a\xb4\xc8\x8a\xfb\x55\x42\x85\x41\x32\x6a\xf7\x60\xe3\x43\x6f\xb9\xe0\xc6\x5e\xe0\xad\x8d\xd4\xed\xbd\xdd\xc3\xf3\x2c\xa3\x3e\xbb\x84\x82\x1a\x20\x3e\xe1\x2e\xb3\x84\x23\x0d\x7e\x00\x1f\x8d\x8e\xf8\x76\xa0\x8b\x94\x12\xe7\x28\x30\xae\xe0\xfb\xe8\x73\xf8\x9b\x4f\xe1\x3a\x88\x21\xcb\x2f\x43\x96\xff\x2d\x28\x3f\xf9\xc2\xf9\x66\x6b\x11\x86\xb2\xba\xd4\x76\xbf\xe8\xac\x8f\xee\x97\xe4\x93\xb4\x5f\xad\x2e\xe1\x3b\xcb\xae\x84\x35\xd0\xb2\x22\xde\x23\xa8\x5e\xdd\x82\xcb\x44\xed\x72\x67\x2b\xe0\x0f\x3c\x81\xbd\x5c\xaf\x7d\x41\xdf\xdd\xb5\x34\xae\xfc\xc5\xd0\x52\x2e\x4c\x76\x37\x6e\xc7\xde\x7d\x2f\x38\x80\x73\x02\x0f\xb9\xbf\x70\xfa\xb3\xe1\x9b\xba\x79\x65\xe7\xdc\xbc\x81\xd3\x1e\x6e\x39\x7d\x4d\xa6\x1f\xb2\x75\x3f\x62\x54\xfd\x41\x0c\x25\x26\x54\xef\x86\x8e\xa6\xd6\xee\xa3\x5a\x9a\x5b\x98\x3a\xa2\x8c\x55\xe8\x6e\x77\x06\xb4\x31\xd9\xcf\x78\xb3\x15\x82\x9c\xbf\xb6\x9c\xbf\x50\xc3\x40\xb7\x9f\x3f\xbc\x07\x3e\x15\x89\xc6\x5e\xbc\xdd\x73\xc7\xa3\xec\x2e\xd4\xc6\xc8\x1f\xa1\x19\xf7\x21\x4d\x6d\xe7\xc5\xc3\xa8\x53\x8b\xc6\x5a\x02\x55\x8b\xb4\x3f\x89\xaa\x5f\xde\x4e\xa4\xea\xd7\x74\x92\x29\x38\x08\xa1\x82\x9e\xa4\xaa\x87\x9f\x3f\xf8\xe3\xbc\x99\x59\x41\x3b\xbb\xaa\xf7\x93\x67\x4e\x5d\xf8\xa7\xbf\x67\xa8\xda\xf7\x86\xca\x0c\x38\x58\x92\xcf\xb6\x5e\x49\xbc\xf9\x83\xa6\x90\x4d\x6f\x48\xd1\xa3\x09\x10\xaf\x9c\x94\xda\xb8\x7f\x07\xc8\x57\x8d\x09\xbf\x25\x35\x0d\x9d\xbc\x6e\xe9\xe5\x39\xea\xdf\xe2\x30\x41\xde\x01\xb5\x3f\x81\x7b\xa0\xf6\xca\xcb\xa8\xfd\x3b\x0f\x46\xbd\x73\xec\x3a\x29\x2c\x1c\x8c\xc6\x76\xe0\x7f\x30\xcb\xdd\x9e\x3c\x96\x68\xee\xef\xf4\x5a\x39\xb2\xf1\xb3\xd0\xdc\x17\x41\x44\x93\x10\xb4\xba\xde\x57\x04\xf4\x50\x44\x34\x07\x73\x00\x22\x9a\x6f\x55\x4f\x44\xef\x81\x1c\x8c\x88\x6e\x91\xa8\x02\x61\x85\x44\xdd\x63\x7b\x96\x24\xaa\x80\x7f\x24\x51\x65\x12\xd5\xe2\x96\x97\x46\xa2\x0a\x53\x8f\x24\xaa\xbf\xc4\x5e\x09\xd0\x43\x9a\x40\x1f\x02\xd4\x56\xeb\x0f\x23\x40\x2d\x1a\x8f\x04\xe8\x11\x09\x50\x0f\x3f\xff\x04\x04\xa8\x68\xc1\x8d\x04\xa8\xf0\xd3\x13\x22\x40\x05\xea\x46\x02\xd4\x0f\xf5\x91\x00\xed\x48\x80\xce\xb3\x0f\x43\x9f\x31\xff\xf9\xff\x12\x75\xaf\x0f\xec\x34\x9a\xa5\xf0\x4d\xf8\x27\xe1\x49\xfe\x83\xee\xba\x06\x99\x47\xfd\x50\x24\xc9\x84\xfd\xf6\xcf\x91\xfc\x4e\xc3\xff\xfa\xac\x80\x6d\x04\x21\x5f\xf6\xca\x8b\xcc\xfd\xc7\x5e\x01\xcf\xb7\x2c\xf9\xb2\xff\x74\xb4\x0d\xc9\x67\xe6\xa5\xf5\xa7\x23\x01\xa2\x31\x76\xbd\x1a\xc8\x82\xdf\x3a\x67\x91\x54\xa5\x4b\x41\xf5\x61\xc9\x5c\x80\x5e\xa1\x72\x05\xea\x67\xc9\xe4\x72\xf4\x47\x22\x57\x26\x72\xcd\x5e\x79\x69\x3c\x2e\xb7\xf4\x48\xe3\x1e\x53\x62\xaf\x44\x6f\xe7\x2e\xd6\xff\xff\x06\x3e\x22\xc9\x6b\x56\x78\xe4\x78\x8f\xc8\xf1\xba\xdd\xfc\x13\x50\xbc\xd0\x98\x1b\x09\x5e\xee\xa4\x27\xc4\xef\x02\xe4\x46\x76\xd7\x0b\xf2\x91\xdc\xed\x48\xee\xbe\x38\x7a\x02\xe7\x68\x2d\x97\xb3\x67\x4b\xf1\x20\x56\xc2\xa4\x54\x4e\xc8\x3b\x32\xfd\x24\x2d\x6a\x1a\x72\xb6\xa3\x63\x6d\x2c\xfc\x2a\x68\x8c\xf0\x59\x59\x9e\xf0\x98\xf6\x5a\xbf\x73\xc7\xeb\x63\xcd\x74\xb1\x32\x28\x92\x9e\xdc\x12\x96\xa6\x17\xc1\xdc\x8b\x52\x16\xbe\x3f\xe5\xb8\x1e\xa4\xa8\xb9\x62\x3c\x86\xef\x2a\x3a\x08\x9d\xfd\xb1\xeb\xdf\x7a\x1d\xcf\x31\xbe\x72\x1c\xac\x7a\x6d\x28\xa5\xd0\xf0\x37\x21\xd4\xcd\x39\x8a\xe4\xfe\x28\xe2\xa5\xc7\xd4\x3d\xbe\x74\xae\xdd\x2b\xf5\x2a\x33\xd8\x36\xb4\x7f\xba\xb8\xd5\x23\xcd\x42\xba\x57\x90\x8d\xfe\x2c\xd7\xd4\x30\x2b\xb3\x3a\xb7\xca\xb2\x54\xf6\x55\x9c\xa7\xe0\xdd\x1a\xec\x15\x27\xd7\xe0\xde\xb7\xaf\xdb\x27\x2c\xfe\xbb\x4e\x9b\xf3\x95\xbc\x52\x0b\x3a\xb2\x5e\x57\x2d\xfd\x10\x44\x5a\x99\xee\x61\xae\xf8\xae\x45\x9d\x0b\x1a\x5f\x41\xf8\xb6\xd8\xb3\x6d\x4d\xd3\x78\x4e\xa5\x44\xf1\x43\x23\xc0\x6e\x89\x7d\x0e\x09\x17\x66\x56\xe6\x56\x59\x5c\xf2\x6f\xf1\xed\x7d\x3e\x68\xb2\xdd\x16\x61\xb7\xfd\x4f\x07\x17\x66\x36\x3c\x0b\x21\x83\xea\xee\x79\x2c\x9f\xcb\x4c\x2b\x83\x3f\xc8\xe1\x1f\x27\x5a\xe6\x0d\x9c\x76\xf9\xe4\xa5\xcd\xb3\x72\x4b\x0f\x3a\xcf\xca\x18\x79\xd8\x79\x20\xf1\x66\x10\xc2\xf5\xa4\xe7\x5c\x7b\x9d\x51\xed\x72\x88\xb6\x8d\xa7\x3a\x4b\x7a\xb7\xe1\x54\x97\xba\xe3\x68\xea\x11\x46\x53\x7d\x9d\xfc\xd2\x06\x53\x99\xdd\xe5\xb1\x94\x6b\xae\x5b\x33\xa9\xcd\x1e\xfb\x77\x4d\xa4\x72\xac\xc5\x3c\xca\x61\xdd\x1a\x46\xed\x80\xf5\x38\x8a\x6a\x1e\x45\x41\xe5\xc4\xec\xf8\x6d\x31\x34\x71\xf4\x64\xf3\x97\xc5\x8c\x47\xfe\x54\x1e\x8f\xfc\x2f\xa9\xc9\x55\xff\x15\x00\x00\xff\xff\xf1\xcc\x20\xbb\xd1\x46\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 18129, mode: os.FileMode(420), modTime: time.Unix(1529420355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x73\xe2\x46\x10\xbd\xf3\x2b\x54\x73\x4d\x98\x41\x40\x16\x92\x42\x54\x39\xde\x2c\x66\x37\xde\x75\x6c\xec\xad\xcd\x6d\x34\x6a\x49\x23\x4b\x33\xf2\x74\x0b\xa1\x50\xfc\xf7\x94\xc0\x06\xe2\x8f\x0a\x07\xdf\xe8\x6e\xf4\xde\xbc\x7e\xaf\x7a\xbd\x8e\x20\xd6\x06\x3c\x96\x82\x8c\xc0\xb1\xcd\xa6\x33\x69\x7f\x4e\x3b\x9e\xe7\x79\x93\x02\x48\x7a\x2a\x95\x0e\x81\x02\x76\xbb\xf8\xd4\x1d\xb3\xe3\x91\x91\x05\x04\x6c\xa9\xa1\x2e\xad\x23\xe6\x29\x6b\x08\x0c\x05\xac\xd6\x11\xa5\x41\x04\x4b\xad\xa0\xbb\x2d\x7e\xf6\xb4\xd1\xa4\x65\xde\x45\x25\x73\x08\x7c\x36\xed\xec\x90\x48\x53\x0e\xd3\xcb\x26\xb4\x34\x11\xbb\xe2\x71\x92\x6b\x73\xef\x39\xc8\x03\x86\xd4\xe4\x80\x29\x00\x31\x2f\x75\x10\x07\x2c\x25\x2a\xf1\x37\x21\x0a\xb9\x52\x91\xe1\xa1\xb5\x84\xe4\x64\xd9\x16\xca\x16\x62\xdf\x10\x03\x3e\xe0\x23\xa1\x10\x0f\x3d\x5e\x68\xc3\x15\x22\xf3\xb4\x21\x48\x9c\xa6\x26\x60\x98\xca\xc1\x78\xd8\xfd\xfd\xee\x87\xd6\x37\xf3\x4f\xf0\xc5\x8f\x66\xc5\xe7\xeb\xb3\xfb\x46\x55\x17\x67\x17\xd7\xc9\xa0\xff\xad\xb8\x55\x75\x3d\xb2\x66\x70\xfd\x23\x4a\x86\x77\xf2\xa7\xab\xe2\x66\x81\xff\x88\x2f\x1f\xc6\xcb\x30\xfa\x23\x4b\x87\x15\xf3\x94\xb3\x88\xd6\xe9\x44\x9b\x80\x49\x63\x4d\x53\xd8\x0a\x9f\x16\x77\x8a\x28\x15\x99\x0c\xb9\xca\x6d\x15\xc5\xb9\x74\xb0\x55\x24\x33\xb9\x12\xb9\x0e\x51\xc4\xd6\x50\x57\xd6\x80\xb6\x00\x31\xe4\x1f\xf8\x60\x2b\xef\xb8\xbd\x57\x78\x02\xab\x90\x88\x40\xb8\xc5\x50\x15\x92\x2d\x4e\xfd\xf2\xc4\xf7\x52\x53\x82\x6c\x63\xc5\x33\xec\xee\x4d\xe8\xb6\x7c\x3e\xef\x73\xff\xf0\x87\x0c\x8f\x1e\xbe\xe3\x47\xe5\x74\x49\x1e\x3a\x75\xe0\x6b\xa1\x79\x62\x6d\x92\x83\x2c\x35\x3e\xa3\xcb\x1e\x2a\x70\x8d\xf0\xb9\xdf\xe7\xc3\xc7\x6a\x0b\x9b\x21\x9b\x4e\xc4\x0e\x70\xfa\x36\xfa\xa9\x91\xca\x9e\x27\x2a\x7b\x35\x50\x0b\xf5\xcb\xfc\x2f\x1d\xf6\xfa\xa3\x87\x65\x93\xdd\x5c\xc6\x17\xd9\xb7\x4b\xf9\xe7\x7d\x5c\x7d\xbf\x5b\xfd\xbd\xba\xbd\x32\xe7\x9f\xcf\x46\x79\xbf\x38\xff\xfe\x75\x5e\xce\x7e\x2d\x66\xe7\x1f\xc7\xf5\xec\xeb\x5c\x5d\x7d\x1c\x2d\x56\xf2\xed\x40\x1d\xb4\xbc\x9b\x55\x07\x77\x48\x26\xa8\x4d\x59\x91\xe8\xf1\x31\xef\xbd\x36\x39\x8e\xc9\x6b\x8b\x7c\x57\xae\x97\x06\xbe\x4d\x5c\xe6\x92\x62\xeb\x0a\x4e\xb5\x26\x02\xb7\x25\xae\x75\x94\x00\xe1\xd6\xa5\xfd\x4d\xab\x28\x6e\x6f\xda\x29\xa0\x4f\x58\x89\xa6\xb4\x0a\xb9\xb6\xff\xc9\xb5\x70\x90\x83\x44\x40\x91\x4b\x02\xa4\xa3\x61\x58\x99\x28\x87\x53\xd3\xf7\x3f\x4b\x4b\x65\x0b\x16\x4a\xd7\x0a\x11\x43\xde\xe3\xbe\x7f\xdc\x7c\xb9\xa6\x89\xd8\x5d\xf4\xf5\x1a\x4c\xb4\xd9\x74\xfe\x0d\x00\x00\xff\xff\x94\x57\x91\x73\xf5\x05\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1525, mode: os.FileMode(420), modTime: time.Unix(1512483723, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xb8\xf2\x69\x03\xa6\x68\x6d\x87\x61\xc8\x68\x01\xc1\x32\x6c\x1d\x9a\x2d\x68\xda\x01\x7b\xa4\xc8\xb3\xc5\x86\x22\x35\xf2\xe4\xc4\x33\xfc\xdf\x07\x4a\x56\xa3\xc8\x92\x13\x37\x19\xd2\xf9\xc1\xb6\x7c\x77\xdf\x7d\x77\xdf\x1d\x25\xaf\xd7\x0a\xe7\xda\x22\x30\x6d\x15\xde\xb0\xcd\xe6\x88\xbf\x38\xfb\xe3\xa7\xf7\x7f\x5d\xfc\x0c\x05\x95\x26\x3b\xe2\xf1\x03\x8c\xb0\x8b\x19\x43\xcb\xb2\xa3\xf5\x9a\xb0\xac\x8c\x20\x04\x56\xa0\x50\xe8\x19\x1c\xc7\xc0\xdc\xa9\x55\x76\x04\x00\xc0\x95\x5e\x82\x34\x22\x84\x19\x93\xce\x92\xd0\x16\x3d\x6b\x6d\xf1\xd5\x87\xb0\x62\x99\x8b\x2d\xc4\x27\x87\x3e\xc0\xc7\xba\xcc\x1d\x79\x67\x7b\x00\x8d\x4f\xf1\x32\x3b\x5f\xe5\x8e\x78\x5a\xbc\x1c\x9a\x5e\x75\xd1\x06\x85\x62\x99\xa8\xc9\x95\x82\xb4\x14\xc6\xac\x40\x3a\x63\x50\x12\x08\xab\x20\xf7\x4e\x28\x29\x42\xbc\x5a\xc1\x95\xb6\x2a\x80\x9b\x83\xb6\x73\xe7\x63\x84\xb3\x30\x77\x1e\x56\xae\xe6\x69\xf1\xea\x36\x0d\x4f\x95\x5e\x66\x3d\xc6\x2f\x92\x04\xfe\xd4\x21\x06\x9c\x5e\xbc\x01\x8f\xa1\x36\x04\x49\x92\x8d\x16\x55\x09\x8b\x06\x9a\xf7\x24\xe6\x1a\xd6\x36\x74\x4d\x62\xa7\xb5\x5d\x0c\xfc\xda\x66\xea\x39\x1c\xbf\x29\xc5\x02\x4f\xad\x30\xab\xa0\xc3\x99\x20\xdc\x6c\x76\x3c\x79\xf1\xfa\x2e\x28\x69\x32\xc8\xb2\x5f\x9c\x5b\x18\xec\xb3\x7f\xd7\xb2\xff\x6a\xbd\x1e\x03\xfe\x9a\xa7\xc5\xeb\x31\x22\x68\xc2\x53\xe4\x9d\x84\xb7\x6a\x80\xbe\x55\x61\x7f\xeb\xe2\x5c\xee\xef\xdb\x87\x77\x6f\xc7\x68\xf7\x90\xbc\xbb\x1e\x81\x18\x7a\x49\x67\x92\x52\x25\xdf\x4f\xb8\x36\xee\x02\x0a\x8f\xf3\x19\xeb\x5a\x7b\xe9\x6a\x2f\x71\xb3\x61\x19\xd7\xe5\x02\x82\x97\xb7\xb6\x86\x17\xeb\xd0\x75\xb9\x48\x3c\x86\xca\xd9\xa0\x97\xc8\xbe\x01\x61\x68\xc6\x1a\x47\x10\x51\xa0\x7f\x50\x41\xbe\x82\x9d\xb6\xb2\x8c\xa7\x62\x82\xfd\x6e\x03\xf7\x16\x06\x81\x56\x06\x67\xcc\x2d\xd1\xcf\x8d\xbb\x3e\x89\x9b\xf5\x63\x29\x6e\x92\x02\xf5\xa2\xa0\x93\xef\x7e\xf8\xb6\xba\xd9\x57\x7f\xe5\x31\xe3\xd2\x29\xcc\x86\xc3\xd5\x8a\xbf\xd9\xf0\xb4\x31\xf3\x34\xba\x1e\xc2\x7a\xe2\xe7\xe9\xb9\xc4\x32\xfb\xdd\x51\xa1\xed\x02\xc8\x41\x28\xdc\x35\x4f\xb1\xfc\xac\xd1\x1b\x3d\x0f\x7e\x45\x61\xa8\x90\x05\xca\x2b\x20\x91\x1b\x9c\x3c\x0f\x1a\x6b\x5f\xdd\xc1\x50\xb7\xd1\x7d\xe7\x16\x30\x09\xe4\x75\x85\x6a\x7b\x95\x3b\xaf\xd0\xa3\x1a\x11\x80\x53\x3c\x42\x26\xfa\x49\x7e\x8f\x62\xa4\xb2\x0b\xef\x24\x86\xc0\x53\x9a\x40\xe8\x1c\xfb\x15\x77\xcb\x3c\x15\xc3\xd3\xb1\xb4\x3c\x9d\x20\xca\xe9\xf6\x06\x73\x70\x01\xef\xaf\x35\x11\x7a\x38\xd3\x3e\x9e\xfc\xe7\x18\x42\x5c\x9b\xb7\x3a\x10\x5a\xf4\xf7\x17\x36\x69\x84\xee\x28\xc1\xbf\xe1\x78\x9b\xa6\x85\x3d\x3b\xbf\x24\x41\x75\x00\xf2\xf5\xd8\xf8\xdd\x49\x11\x2a\x61\x41\xab\x19\xa3\x16\x22\x51\x65\x62\xb6\xec\x92\xd0\xe0\x7c\x5a\x3e\xe9\x8c\xf3\x27\xb9\xa9\x91\x65\xa7\x92\xf4\x12\x79\x1a\xe3\xef\x23\x39\xb1\x06\x8f\xe4\xd1\x8c\xdb\x25\xb9\xea\x81\x24\x76\x36\xe9\x4e\xfe\x03\xa7\x05\x0e\x11\xff\x43\x40\xff\xdf\x4a\x1e\x33\x84\xc7\xa8\x5e\x07\xf4\x5f\x86\xee\x0f\x60\xf2\xff\x51\xfe\x02\xbd\x76\x4a\x4b\xf8\xcd\xe5\x4f\x2c\x7c\x07\xfd\x18\xd5\xab\x2d\x46\xf2\xd1\xe5\xcf\x2a\xfa\xfd\x44\xbe\x7c\xcd\x2f\x8d\x90\x57\x4f\xbe\xe6\x0d\x6a\x07\xfa\x39\x5a\x87\x08\xf0\xbc\xab\xfd\x10\x0a\xcf\xaa\x2f\x4f\x47\xee\xf1\x3c\x6d\x9e\x6d\x76\x1e\xb5\x7a\x5f\x79\xda\x86\xf1\xb4\xfd\xcf\xda\xf1\xfa\x37\x00\x00\xff\xff\xb6\x12\x0c\x08\xdf\x0e\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 3807, mode: os.FileMode(420), modTime: time.Unix(1515678371, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x5f\x6f\xdb\x20\x10\xc0\xdf\xf3\x29\x10\x7b\x76\x78\x9f\x92\x68\x52\x35\xed\xa5\xed\xc3\xd6\xbd\xf7\x6c\xce\x0e\x2a\x01\xd7\x9c\xdd\x4e\x96\xbf\xfb\x04\xd8\x8e\xe7\x26\x53\x94\xb4\xd9\x5e\x12\x7c\xdc\x1f\xee\xc7\x1d\xd0\xb6\x12\x73\x65\x90\x71\x03\x4d\x0a\x15\xef\xba\xc5\xca\x40\xc3\x32\x0d\xce\xad\x7b\x29\x8b\x7f\x89\xc4\x1c\x6a\x4d\xc3\xa7\x32\x0d\x56\x0e\x87\xcf\x5c\xbd\xa2\x4c\xc8\x96\x7c\xb3\x60\x8c\xb1\x95\x54\xa3\x9f\xcc\x1a\x02\x65\xb0\x4a\x72\x5d\x2b\xd9\x6b\xcc\xb5\x7a\x47\x5b\x04\x89\xd5\x44\x27\xe8\xa5\x35\x91\x35\x33\x55\xb2\x45\xa1\x91\x65\x56\x6b\x28\x1d\x4a\xce\x24\x10\xf4\x62\x1f\x36\xca\x07\x31\x54\x05\xd2\x9a\x7f\x8a\xd6\x77\x68\x6a\xc7\x19\x54\x0a\x12\x7c\x2d\xc1\x48\x94\x6b\x9e\x83\x76\x38\x0b\x1e\x16\xe0\x4a\x18\xc3\xab\xcc\x9a\xc4\xf3\xda\xac\x84\x97\x5f\x53\x7d\x25\x22\x8a\x99\x14\x66\x68\xd2\x0a\x8c\xe4\x6c\x5b\x61\xbe\xe6\x82\x6f\xee\x7e\xa5\x96\x56\x02\x26\xe8\x85\x54\xcd\x5f\x77\x62\xe0\xc7\xf6\x20\x95\x1c\x66\x23\xbe\xd9\x2a\x6a\x3d\x71\x31\x54\x86\x81\xe6\x10\x50\xad\x26\xba\x89\x22\xdc\xb5\xad\xca\x19\x3e\xb3\xe5\x7d\x30\xbc\x87\x1d\xb2\xc7\x1b\x6b\x72\x55\x3c\x76\x1d\x64\xa4\x1a\x6c\x5b\x34\xb2\xeb\x0e\x38\x7c\x83\x21\xd1\xca\x3c\x8d\x08\xb2\xe0\x47\xf0\x4d\x74\x58\x57\x40\xca\x9a\x3f\x88\xec\xc9\x68\x35\x87\x5e\xeb\xcd\xe2\xc3\x73\x7d\x78\x51\x44\x58\xdd\x58\xed\x2e\x4f\x98\xa2\xb3\xb0\x8b\x98\xf9\x64\x9d\xe0\x9b\x3e\x04\xbb\xd9\x4b\x3f\x80\xc1\x30\xac\x54\xb1\xa5\x03\x4b\x0f\xd9\x1b\x64\xcb\x7e\x39\x21\x7d\xee\x8f\x9f\x13\xd0\x1d\x47\x11\x33\xdf\x12\x95\xee\xb3\x18\x00\x2c\x33\xbb\x13\x6d\x3b\x0d\xd5\x75\x7c\x70\x9a\x92\x61\x29\x99\x44\x17\xe1\xcf\xd9\x4c\x81\x4e\x7c\x0b\x86\xef\xde\xc7\x91\x90\x6c\xde\xba\x39\xb0\x1c\xbc\xaf\x1c\x06\x53\x3f\x8c\x3b\x39\xf6\x33\xfb\x32\x5f\xce\xe1\x84\x4e\xdb\x97\xc8\x13\xb5\x3b\xe4\xe7\x02\x7c\x50\x96\x6e\x39\x61\x78\x5d\x64\x25\x38\x37\x65\xf6\x0e\x84\x7c\x1b\x2d\x8e\x97\xe2\x0f\x0d\xd9\xd3\x03\xc2\xee\xdd\x0a\xb1\x6d\xa3\xd3\x9f\xdf\x6f\x4f\xaf\x38\xe7\x2d\xce\x81\x17\x0c\x8f\x55\xdb\x98\xdc\xff\x55\x6b\x02\x6a\xda\x8a\x98\xf2\xd5\xf8\x5c\xad\xb4\x2e\x68\xbe\xcc\x1a\x67\x35\x2e\x25\x36\xa8\x6d\x89\x95\x5b\x16\xd6\x16\x1a\xc3\x69\x06\xa5\x72\xfe\x47\x34\xca\x29\x6b\xfa\x29\x2f\x0d\xd3\xcf\xb5\x25\x70\xa7\x02\x8d\xc6\xe7\x10\x8d\x96\x7e\x34\xde\x66\xdf\x82\xe8\xab\x81\x54\xa3\x64\x54\xd5\x38\xb9\xc7\x42\xd9\xf4\xf4\xc7\x6b\xed\x9d\x36\xe1\x02\xd6\x85\xa2\x6d\x9d\x06\x72\xea\x05\x08\x9e\x40\xec\xfc\x6b\xe9\x64\x80\xc1\xfe\x2c\x80\xc1\xf2\x40\xcf\xfe\x03\x1a\x42\xdb\xc2\xd6\x34\xdc\x9a\xfc\xcd\xbb\xe2\x9c\x96\x53\x85\x49\x6c\x4d\xfb\xb3\xe8\x36\x04\xb9\x24\xbd\xd9\x33\x64\xf2\x8a\xed\x87\x2b\x61\xa0\xd9\x2c\x86\xae\xfc\x1d\x00\x00\xff\xff\xe4\x8a\x37\xb0\xe4\x0c\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3300, mode: os.FileMode(420), modTime: time.Unix(1512483720, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x4f\x6b\xdb\x4e\x10\xbd\xfb\x53\xcc\x6f\xef\xf6\x92\x1c\x7f\x48\x82\xe2\xf4\x10\x42\x68\xc1\xb9\xf4\x64\x46\xda\xb1\xb5\xb5\xb4\xbb\xec\x8e\x1c\x84\xd0\x77\x2f\x92\xec\xc4\x76\x64\xa7\xa4\x14\x07\x7a\xb1\x35\xcc\xcc\xd3\x9b\x37\x7f\x50\xd3\x28\x5a\x69\x43\x20\x02\x71\xe5\x44\xdb\x4e\xa2\xff\xee\xbe\xcd\x9f\x7e\x7c\xff\x0a\x39\x97\x45\x32\x89\xba\x3f\x28\xd0\xac\x63\x41\x46\x24\x13\x00\x80\xa6\x61\x2a\x5d\x81\x4c\x20\x72\x42\x45\x5e\xc0\xac\x6d\x7b\x5f\x94\x5a\x55\x0f\x61\xbd\xa9\xf4\x16\xb2\x02\x43\x88\x45\x66\x0d\xa3\x36\xe4\xc5\xab\xff\x14\xce\xe0\x36\xc5\x03\xb8\x31\x9c\x9f\x55\x99\x5a\xf6\xd6\x9c\xe0\xf4\x71\xf9\x4d\xb2\xe8\x8a\x89\x64\x7e\x33\xe6\xbe\xdd\xa3\x14\x84\x4a\x24\x4f\xb9\x0e\xa0\x03\x70\x4e\xb0\xd2\x3e\x30\x04\x26\x07\x6c\xa1\x0a\x04\x8f\x75\x6a\x39\x92\xf9\xed\x08\xd2\xca\xfa\x12\xb4\x8a\x77\xda\x01\x66\xac\xad\x89\x85\xec\x6d\x29\xa0\x24\xce\xad\x8a\x85\xb3\x81\x05\x90\xc9\xb8\x76\x14\x8b\xb2\x2a\x58\x3b\xf4\x2c\x3b\x84\xa9\x42\x46\x91\x44\xbd\x31\xf2\x16\x6d\x5c\xc5\xd0\x39\x5f\x5e\x34\xc0\x84\x2a\x2d\x35\x0b\xd8\x62\x51\x51\x2c\x16\xb8\x25\xb1\x2f\x2d\x65\x03\x29\x9b\xa9\xf3\xba\x44\x5f\xf7\xcf\xc5\xfa\x44\xad\x48\x2a\xbd\x4d\x26\x27\x9d\xd0\x2b\x98\x3d\x52\x08\xb8\xa6\x0b\x1d\xc0\x82\x3c\x43\xff\x3b\x55\x68\xd6\x5d\x4b\x9b\xe6\x35\x71\x87\x7d\x0c\x4d\x46\xb5\xed\xe4\xb7\x30\xb5\x59\xd9\xb1\xe6\x22\xe4\x9e\x56\xb1\xc8\x99\x5d\xf8\x5f\x4a\x74\x2e\xcc\xf8\x59\x33\x93\x9f\x65\xb6\x14\xc0\xe8\xd7\xc4\xb1\x58\xa6\x05\x9a\x8d\x48\xe6\x85\xce\x36\x90\x93\xa7\xae\xa7\x99\x27\x64\x92\x59\x4e\xd9\x06\x6a\x5b\x79\xb0\xcf\x06\x9e\x06\x00\xf8\xe2\x5c\x24\x71\x54\xa5\x73\xa4\x19\xd3\x82\xa6\x9e\x82\xb3\x26\xe8\x2d\x8d\x91\xee\x63\x8e\x12\x60\x48\x0b\xec\xb5\x23\xb5\xb3\x52\xeb\x15\x79\x52\x23\x10\x03\xcc\xf1\x62\xbd\xf5\xfb\xf3\xce\x21\x40\x25\xfb\x4a\xe7\xd6\x84\xaa\x24\x0f\x0f\x54\x47\x92\xd5\xfb\x99\x17\x03\xe0\xe2\xa4\x3a\x0c\xe1\xd9\x7a\x25\xc0\x60\x49\x3b\xe7\xbe\x6b\xcb\x6c\x47\x65\xb9\xa1\xfa\x65\x9a\x9b\x66\xb6\xa3\xba\x67\xfa\x40\x75\xdb\x9e\x91\xe6\x85\xc2\xc5\x4a\x22\x79\x49\xa1\x8f\xc9\xb7\xa0\xcc\x13\x7f\x16\x05\x43\xcf\xe6\x82\x88\x03\xdd\xbf\xa6\x63\x24\xcf\xcc\x68\x24\xfb\x11\x7f\xff\xfe\xfc\xf9\x3d\xd0\xb3\x50\x60\xb6\xe9\x8e\x41\x7f\x1d\x3e\x76\x11\x16\x1d\xc6\x3f\x70\x0f\x86\x3a\xe7\x85\x26\xc3\x70\x7f\x77\xa5\x41\xee\x3b\xb6\xcc\x7a\x16\x4b\xad\x0e\x07\xb8\x27\x38\xf0\xbb\xbf\xbb\xfe\x01\x38\xd2\xeb\xaa\xcb\x7f\xa4\xd9\xdb\xc5\x3f\xd0\xed\x53\x2f\xfd\xc1\x3a\x45\x72\xc0\x89\xe4\xf0\xe5\xb9\xff\x60\xf8\x15\x00\x00\xff\xff\x15\x41\x24\x68\xa5\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2725, mode: os.FileMode(420), modTime: time.Unix(1513780947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xb1\x8e\x9c\x30\x10\xed\xf7\x2b\x26\xce\x95\xd9\x45\x77\x65\x64\x2c\x45\x9b\x94\x51\x52\x5c\x8a\x94\x03\x1e\xc0\x17\xaf\x4d\xec\x81\xd3\xca\xe2\xdf\x23\x60\x39\x58\x14\x29\x0a\x0d\x23\x98\xf7\xde\xbc\xe7\x71\x4a\x9a\x2a\xe3\x08\x04\xbf\x1a\x66\x0a\x67\x6f\xa3\x18\x86\x83\x7c\xf7\xf9\xdb\xf9\xf9\xe7\xf7\x2f\xd0\xf0\xc5\xaa\x83\x1c\x5f\x60\xd1\xd5\xb9\x20\x27\xd4\x21\x25\xa6\x4b\x6b\x91\x09\x44\x43\xa8\x29\x08\x38\x8d\xc0\xc2\xeb\xab\x3a\x00\x00\x48\x6d\x7a\x28\x2d\xc6\x98\x8b\xd2\x3b\x46\xe3\x28\x88\xf9\xdf\xf8\x6c\x29\x1c\xf6\x05\xde\x28\xde\x1a\xb6\x04\x2f\xdd\xa5\xf0\x1c\xbc\xdb\x10\x4c\x3d\xcd\xa3\x7a\x9e\x67\x87\xb3\xb7\x96\x4a\x36\xde\x45\x99\x35\x8f\xfb\xc6\xa7\x85\xcb\x12\x6a\xa1\x7e\x44\xe3\x6a\x58\xb0\xe5\x8a\x05\xf6\x10\xd9\x07\x82\xab\xef\x02\x54\xd8\xfb\x60\x98\x80\x5f\x89\x38\x82\x89\xa0\x09\xb5\xbd\x42\x17\xa9\xea\xac\xcc\x9a\xa7\x55\x4a\x66\xda\xf4\x6a\xe3\xa1\xb3\x8b\xac\xc3\x1e\x1c\xf6\xc7\xd6\x58\x1b\xa7\xea\xa5\x8b\x6c\x2a\x43\xfa\xce\x54\x4a\x01\x5d\x4d\xf0\xf0\x8b\xae\x1f\xe0\xa1\x47\x0b\x1f\x73\x38\xad\xee\xbe\x62\x3b\x0c\x1b\x80\xb4\x06\x82\xb7\x94\x8b\x36\x50\x24\xc7\x38\x76\x89\x45\x37\x25\x53\x01\xfd\x86\x87\xd3\xa7\x92\x4d\x4f\x2b\xd1\x24\x31\x0c\x38\x7d\x4e\x89\x9c\x1e\x06\xa1\x24\x82\x46\xc6\x23\xfb\xba\x1e\x49\x19\x0b\x01\x4d\xa0\x2a\x17\xef\x53\x9a\x21\x42\x2d\x95\xcc\x50\xc9\xcc\x9a\x7b\x07\x13\xd5\x26\x94\xce\xaa\xbf\x9f\x2b\x63\x71\x1c\x97\x83\x1c\xef\x4e\xf6\xbf\x63\xb8\x11\x1b\x3d\x5a\xbe\x8d\xb9\x95\x69\xd1\x11\x54\xa8\xe9\x9f\x81\x18\x07\xbb\x4c\xee\x64\x26\x29\x7c\xa3\x9e\x37\xe8\x58\x07\xa3\x97\x9c\x52\x1a\xe7\x9d\xc2\xcc\x70\xb7\x87\xf3\x82\xdc\x3b\xdd\xc7\xb5\xee\xd0\xad\x96\xd9\x7c\xaf\x64\x36\xdf\xc7\x05\xf2\x27\x00\x00\xff\xff\xc9\x1a\x8d\x48\xc1\x03\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 961, mode: os.FileMode(420), modTime: time.Unix(1511175046, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

