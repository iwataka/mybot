// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xdd\x8a\xe3\x30\x0c\x85\xef\xf3\x14\x86\xbd\x76\x28\x64\x61\x97\x14\xfa\x2e\x8a\xad\xb8\xde\xb8\x92\x91\xd5\xbf\x1d\xe6\xdd\x87\xf4\x27\xb8\x74\x08\x93\x8b\xe0\x8b\xf3\x1d\x1d\x89\x33\xb0\xbf\x9a\x8f\xc6\x3c\xbe\x0c\xde\x47\x0a\x56\x39\xf7\xe6\xcf\x26\x5f\xb6\xcd\x67\xd3\xb4\xff\x8e\x87\x81\x55\x98\x2a\xe9\x00\x6e\x0a\xc2\x47\xf2\xd6\x71\x62\xe9\x8d\x0a\x50\xc9\x20\x48\xba\x5d\x64\x8a\x17\xb5\x90\x62\xa0\xde\x38\x24\x45\xb9\x5b\x3a\x26\x85\x48\x28\x95\xe5\x01\x2e\xf6\x1c\xbd\xee\x7b\xf3\x77\xf3\x1c\xee\xe3\xa9\x9a\x0f\xa6\x64\xa0\x76\x84\x0a\x1b\x99\xd4\x96\xf8\x1f\x7b\xf3\xfb\x49\x65\xc1\x3a\x2b\x8b\x47\xe9\x0d\x31\xe1\xf6\xa7\x1b\xcc\x29\x5f\xe6\xbc\xeb\xcf\xfb\xa8\x58\x0e\x3c\xe1\x53\x6e\xf5\x1c\x55\x51\xe6\x27\x38\x8d\xa7\x3a\xc6\x83\xfa\xd5\x75\x5d\x37\x8e\x0b\x12\x98\x43\xc2\x55\x62\x1c\x67\x66\x21\x32\x94\xf2\xad\x30\x08\x5e\xab\x28\x88\xea\xd1\x4d\xef\xba\x21\x81\x9b\xd6\x2e\xe1\xd9\x07\x94\x21\x1d\xef\x9b\x29\x0c\x09\xcd\xce\xe8\x1e\xc1\xaf\x9e\x04\x52\x74\xf8\xca\xb5\xb7\xbf\x2d\x2a\x31\xa3\x9f\x5d\x6e\xad\xdb\x19\x95\xd6\x63\x42\xc5\xda\x92\x33\xb8\xa8\xd7\xde\x6c\xda\x6e\x2d\xe1\xb2\xea\x5c\x10\x85\xc1\xce\x8d\x42\xd2\x97\x3e\x49\x88\x74\x2f\x73\xf7\x68\xc6\x57\x00\x00\x00\xff\xff\xcd\xb5\xec\x4e\xf1\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 753, mode: os.FileMode(436), modTime: time.Unix(1483973425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x6d\x6f\xe3\x36\x12\xc7\xdf\xe7\x53\xf0\x74\x45\xd3\xa2\x1b\xfb\xda\x1e\xee\x45\xd7\x36\xd0\xdb\xed\x62\xf7\x90\xdd\xe6\x92\xec\x01\x87\xc3\x21\xa0\xa5\xb1\xcc\x2e\x4d\xfa\x28\x2a\x89\x61\xe4\xbb\x1f\xa8\x27\xcb\x12\x49\xc9\x8e\x1f\xe4\x2c\xf3\xa2\x1b\xdb\x1c\x6a\x38\xff\xe1\x88\xa4\xf5\x6b\x06\x7f\x7a\xfb\xfb\x9b\xdb\x7f\x5f\xfd\x86\xa6\x72\x46\x47\x67\x03\xf5\x0f\xa2\x98\x85\x43\x0f\x98\x37\x3a\x5b\x2e\x25\xcc\xe6\x14\x4b\x40\xde\x14\x70\x00\xc2\x43\xbd\xa7\xa7\xb3\xc1\x98\x07\x8b\xd1\x19\x42\x08\x0d\x22\x5f\x90\xb9\x4c\x5f\xa8\x9f\x49\xcc\x7c\x49\x38\x43\x01\x50\x90\x70\xcd\x1f\xbe\x1b\xc7\x52\x72\xf6\x0a\xcd\x78\x80\xe9\xf7\x68\x59\xb4\x55\x3f\xf7\x58\x20\x29\xd0\x10\xa5\xad\x7a\x73\x2c\x80\xc9\x4f\x3c\x80\xd2\xaf\xaf\xd7\x4c\xc8\x04\x7d\x27\x45\xcf\xa7\x38\x8a\x3e\xe1\x19\xa0\xe1\x70\x88\xce\xd3\xeb\x05\xe7\xd5\x0b\x24\x4e\x71\x81\xbe\x53\x57\x22\x68\x88\xfe\xf2\x1a\x11\x34\x40\xaa\x87\x29\xa1\x81\xea\x3f\xea\x51\x60\xa1\x9c\xbe\x46\xe4\x87\x1f\x74\x1d\xe4\x9e\x26\x16\x68\xb8\x6e\xfc\x1f\xf2\x5f\xad\x81\xf2\x33\x69\xd5\x93\x8b\x79\xe6\xe5\x94\x04\x01\xb0\x73\xf4\xed\xb7\x69\x5f\x3d\xc6\x03\x58\x0d\xe2\xc3\xa7\xab\xcf\xb7\xda\x21\xe4\x3f\xa9\xd5\x3d\xa6\x31\xa0\x21\x3a\x9f\x60\x1a\xc1\xf9\x6b\x63\xf3\xf5\x38\xa1\x73\x4b\xd3\x4c\x00\xc2\x18\x88\xf7\xb7\x1f\x2f\x55\xf3\xb7\x49\x50\x0d\x46\x4f\xb5\x77\xd7\xdf\x79\x42\x40\x23\xf8\xaa\xe4\x90\x22\xde\x44\x8d\x3c\x67\x37\x13\xe5\x1a\xee\x41\xc8\x6d\x45\x39\x5b\xff\x6d\xd0\x2f\xcf\xe0\x41\x40\xee\x51\xe2\xe2\xd0\xf3\x39\x93\x98\x30\x10\xde\x6a\x76\x97\x2b\x02\xc3\xf7\x63\x9c\x55\x84\xa2\x41\xb9\x83\x3f\xe2\xd9\x98\x4b\xc1\x59\xa9\x83\xa4\xcd\xf4\xc7\xd1\x1b\xce\x26\x24\x8c\x05\x56\xb5\x62\xd0\x9f\xfe\x58\x6d\xf2\x53\xde\x0b\x05\x1c\x78\x45\x7b\x40\x0b\x1e\x0b\xc4\x1f\x18\x1a\x73\x79\x1e\xa1\x88\xc7\xc2\x87\xe8\x15\x9a\x10\x2a\x41\x44\x08\xb3\x00\xe1\xa4\x04\x45\x83\xfe\xf4\xa7\x4a\xbf\x13\x2e\x66\x88\x04\x43\x8f\xdf\x83\x78\x10\x44\x82\x97\xb5\x1e\x7a\x7d\x3f\xb9\x48\xdf\x43\x33\x90\x53\x1e\x0c\xbd\x39\x8f\xa4\x87\x80\xf9\x2a\x63\x86\xde\x2c\xa6\x92\xcc\xb1\x90\x7d\xd5\xcd\x45\x80\x25\xf6\x46\x83\xe4\x45\xe5\x32\x84\xcd\x63\xa9\xf2\x7c\xb6\x76\xa5\xb4\x9b\x28\x1e\xcf\x88\xf4\x50\x92\x35\x43\xef\x06\xdf\x83\x97\x8f\x76\x2c\x19\x1a\x4b\x76\x41\xc3\xe4\x9f\xb9\x20\x33\x2c\x16\x1e\x8a\xe4\x82\xc2\xd0\x0b\x48\x34\xa7\x78\xf1\x0b\x61\x94\x30\xf0\x46\x67\x9a\xd1\x55\x87\x33\x21\x14\x4a\x63\x0a\x41\x9a\xbb\xab\xe6\x4e\x36\x10\xad\xdf\x6f\xf9\x03\xa3\x1c\x07\x4d\xbe\x57\x42\x93\x85\x6b\x73\xc7\x5b\x88\xb1\x93\x71\x7d\x9e\x6f\x3e\xaa\x5a\x9f\xca\x77\x0f\x31\x3c\x53\x9e\x2e\xc6\x5c\xf6\xd2\x41\xb5\x73\xb1\x9a\x53\x83\x7e\x40\xee\x4b\x31\x5b\x2e\xc9\x04\xf5\x3e\x42\x14\xe1\x10\x9e\x9e\xb4\xb3\x0f\x53\x10\x12\x25\xff\xbd\x08\x30\x0b\xd5\x3c\x5e\x2e\x57\x46\x59\x9f\xab\x2e\x81\x05\x6a\x26\xaf\x3a\x9b\xfe\x3c\xba\x7d\x20\x52\x82\x40\xb7\x64\x06\xca\x4f\x35\xa5\x7e\x1e\x69\xaf\x27\xf1\x98\xc2\x85\x80\x68\xce\x59\x44\xee\x6b\x43\x4a\x3e\x5f\x6b\x8c\x52\x93\x48\x0a\x32\x87\x20\x7b\x35\xe6\x22\x00\x01\x81\x2e\xc0\x52\x2d\x42\xea\xef\xa7\x9f\x09\xfd\x07\xe9\x87\xc1\x28\xf2\x05\x00\x4b\x14\x89\x06\x7d\x69\xe8\x26\x6f\x0d\x8f\x3e\x8d\x03\x40\x02\xe6\x94\xb4\x31\x20\x2c\x33\x90\x2d\x1a\xfb\x3c\x66\xb2\xb9\x19\x97\x53\x10\x2d\xba\x33\xb7\x18\xf4\x75\x61\x19\xf4\x0d\x81\x1c\xc8\xd5\xc2\xae\xfa\xb3\x5c\x0a\x95\x44\xe8\x1b\xc2\x02\x78\x7c\x85\xbe\x91\x59\x4a\xa0\x5f\x86\xa8\x97\x96\xe7\x5e\x96\x2e\xbd\x22\x5d\x9e\xea\xb7\x23\xd4\xa8\x96\xb5\x78\xa6\x77\xec\x7c\x6a\xc9\xec\x82\xb9\x33\x51\x2f\xbb\xa5\x16\xb3\x39\x59\x20\x79\x7d\x7b\x04\x8d\x1f\xa6\x23\xa7\x24\x92\xb7\xf0\x28\xc7\xfc\x71\x35\xee\xde\x4d\x92\x51\xea\x56\x1e\x21\x8d\x23\x69\xc2\xdd\x25\x09\xe7\x19\xe2\x80\x52\x35\x1a\xf4\x6d\xf0\x6e\xcc\x39\xbd\x01\x0a\x7e\xc5\xbf\xdf\xd2\x1c\xbe\x4e\x53\x58\xe7\x62\x96\xe5\x77\x59\x96\x1f\xc5\xcb\x0f\xe9\xc4\xb9\x96\x5a\x0f\xb3\x69\x75\x27\xe4\x7e\xbd\x93\xa9\xba\xbf\x4f\x3e\x30\x79\x25\x45\xc9\xbf\x37\x6a\xae\xea\x5c\x4b\x26\xf1\x1e\x9d\x1a\xa4\x4b\xbf\x2c\xed\xd3\x17\xb5\x9b\x12\x61\x13\xee\x21\x75\xef\xbb\x90\x3c\x0c\xd5\x8d\x25\xd9\x65\xe5\xef\x61\x11\x82\x1c\x7a\x7f\xce\xdc\xbf\x28\xdc\xbf\x48\x97\x4b\x77\xcb\x65\x3a\xa1\x9f\x9e\x34\x05\xb7\xfa\x13\x80\xc4\x84\x46\x68\x0a\x02\xec\xbe\xf7\x53\x7f\x2d\xc3\x3f\x40\x70\xb2\xbb\x1e\xe2\xcc\xa7\xc4\xff\x32\xf4\x56\x5b\x52\x39\x25\xd1\x2b\x74\xde\x22\x2c\xe7\xdf\x7b\xa3\x74\x17\xf4\x9c\x41\xe9\x0b\x31\x2a\xdd\x77\xf5\x61\x68\xb8\xa9\xd9\x63\xa4\x5d\x54\x15\x43\xed\xe3\x20\xa8\x2c\xae\x9a\x33\xc0\xb6\x6e\xfa\x04\x0f\x35\x09\xf2\xd5\x92\xa5\xfe\x22\xcd\x7a\xa7\xfe\xf9\xf6\xf7\xc0\xae\xb4\x30\xde\x8b\xeb\xf7\xdc\x41\x3f\x59\x0b\xd9\xd6\x7f\x3b\xb8\x19\x97\x17\x6f\x49\xd1\x40\x13\x1c\x80\x97\xec\x8e\xda\xd4\x0b\xb5\x60\x4b\x7e\x1f\x7a\x17\x3f\x7a\x48\xf0\x74\x59\x8b\x29\x0f\x3d\x84\x05\xc1\x17\x14\x8f\x81\x52\x08\xc6\x8b\x56\x3d\x5e\x48\x22\xa9\x76\xb5\x5e\xf5\xf4\x22\xbf\x4c\x76\x51\xee\xc7\x33\x60\xa6\x04\xae\x9b\xab\xad\xad\xb9\xbd\xde\x26\x3b\x00\x7b\x46\x5d\xf2\x29\x8f\x20\xab\xcc\x01\x89\x66\xa4\xe8\xdc\x1b\x7d\xab\xe2\x12\xbd\x6e\xae\x31\x28\x5d\x99\xaf\xfb\x96\x06\xae\xad\x72\x79\x9c\xdf\xa6\xe5\x7c\x7d\x49\x5f\xbb\xd6\xfa\x36\xa1\x39\x4e\x2a\x9d\x9b\xa2\x34\xfd\x79\xf4\x2e\xf1\xca\x7e\xed\xea\x05\x1a\xb6\x18\x5a\xf3\xe7\x6f\x3b\xf4\xdd\x9a\xb7\x22\xfa\xf6\x96\x4a\xae\x37\x08\x46\x6a\xe9\x68\xaf\x38\x26\xcb\xa4\x22\x6f\x66\x6a\xbe\x43\x69\x5a\xb6\x1f\xbc\x6d\x4b\xa1\x6f\xbf\x45\xa0\xe6\x58\xa5\x3c\x6b\xd8\x2a\x99\xac\x37\x32\x40\x96\x0d\x41\x9a\xd2\xbd\xab\xcc\x1b\xdd\xa2\x31\x9d\x8b\xbd\xdc\x61\xdb\xf2\x51\xeb\xee\x9e\x24\x45\xdb\x46\x3e\x16\x14\x75\x2b\xfa\x9f\xaf\x2f\x5b\x08\x10\x0b\x7a\xf7\x62\x44\x98\xe2\x08\xcd\x20\x20\xf8\x60\x0a\x98\x36\x73\x99\x06\xef\x71\xf4\x51\xf9\x63\x11\x60\x8a\xa3\xbb\xc4\xe7\x17\x11\xfd\x58\xd0\x0e\xc5\xfe\xf3\xf5\x65\x43\xe4\x63\x41\x4f\x3e\xee\x02\xe4\x03\x80\x84\xa0\x2b\x91\xbf\xce\x1d\xb2\x04\xbf\x70\xfa\xe4\xc3\x3f\xc1\xf7\x5c\x10\x09\x48\x4e\x05\x44\x53\x4e\x0f\xa7\x83\xf9\xb0\x26\x53\xe2\x5d\xe6\xdb\x6d\xee\x9a\x45\x91\x7c\x1c\x77\xc5\x38\x4e\x5e\x9a\x22\xc9\xba\xa8\x4d\x31\x4b\xda\x88\x53\x8c\xe4\x05\xa9\x43\x31\x0b\x0f\x24\x87\xfd\x24\x5d\x49\x65\x3e\x47\xcf\x14\x50\xde\x16\x27\x3c\xcb\x65\x4d\xce\x4b\xcc\xc2\x56\x67\x87\x6b\x7e\xed\x6f\x67\xd2\x6e\xb7\x51\x3b\x60\xd1\x37\xb2\xee\x7c\xd1\xda\x46\xb6\xf7\x2f\x12\xa5\xdf\x64\xbb\xfd\xac\xde\xc0\xed\x67\x5b\x1a\xa8\x12\x31\x86\xc3\x2d\x28\xad\xdb\xa9\x34\xad\x7b\x97\xca\x23\x4b\xa1\xbe\x4f\x9b\x25\x8e\x9f\x7c\x85\x9e\x60\x1f\x50\xf2\xdd\x01\xa2\xe4\x0b\x50\x32\xe5\xfc\x50\x77\xd0\x1d\x94\xec\x4c\x0b\x35\x8a\x5e\x32\x8a\xbb\xd5\x28\x6c\xa5\x3c\x93\xfa\x9d\xb2\xfb\x55\xd9\x5d\x16\x66\x9d\xa9\xf0\xe8\x59\x9a\x8e\x69\x2c\x04\x04\x27\xaf\x6a\x36\x8e\x2d\x74\xfd\x7b\x6a\xf9\xe2\x94\x55\x05\xfc\x01\xf0\xe9\x4f\xd8\x7c\x20\x5b\x68\xfb\x3e\x33\x7d\x71\xe2\xfe\xc1\x17\x27\xaf\xeb\x1f\x7c\xb1\x85\xa4\xff\xe0\x8b\x97\xa4\xa6\x8a\x5a\xa7\x96\x35\xea\xf3\xe6\x55\x4d\x22\xf6\xa9\x2f\x6a\x28\x66\xc1\x0c\x8b\x2f\x9d\x8a\xff\x65\xe6\x54\x9b\x95\x65\xda\xf2\xf4\x75\xe0\x21\xef\x96\x06\x3c\xe4\x2d\xe2\xcf\x43\xde\x95\xd8\x1f\x73\x9b\x7f\x89\x59\x18\xe3\x10\xdc\x46\xdf\x68\xe0\x36\xfa\x2d\x0d\x82\xd1\x8c\x30\x14\x01\x53\x93\xae\xe9\x81\x60\x53\x17\xcf\x39\xa3\x7d\x47\x39\x96\x7f\xfb\xab\xf6\x9c\x36\x4f\xf4\xde\x47\xc2\x6e\x72\x17\x2d\x75\x82\xe6\xed\x67\x84\xdd\x15\x63\xea\x4a\xc9\x40\x5b\x2b\x84\x1f\xbb\xaf\x10\x7e\xdc\x4c\x21\xfc\xd8\x3d\x85\x8e\x52\xd4\x7f\xf5\xa5\x3b\xb4\xb5\x19\xb8\x5a\xde\xd2\xa0\xf8\xd6\xed\x60\x35\xc2\x9f\x82\xff\x65\x7d\x61\x97\xa6\x73\xfe\x15\x9b\xae\x14\xa4\x4f\x03\xe7\xdf\xab\x75\x65\xee\xa3\xe7\x7e\x09\xdd\x81\xa0\xe7\xdf\x39\x5b\xa2\x9e\x7b\x7b\xfa\x61\xe7\x94\xf2\x87\x2e\x04\x3d\x71\xc4\x16\xf2\xa4\xc1\xc9\x07\xdc\xe7\x94\x42\xce\xb4\x1e\x75\xef\x98\x05\xfe\xcd\xca\x21\x4b\xf4\x4b\x6e\x77\x45\x82\x83\x2e\x33\x36\x7e\x76\x7a\xc2\xb9\x7c\xde\x33\xe6\x05\xfb\x02\x13\x1c\x53\x69\x78\xda\xfc\x0d\xe5\x51\x2b\x9e\xc5\xe8\xbf\xe1\x23\xcd\xdb\x26\xce\xb4\xf8\xbc\x84\x99\xe6\x45\xf4\x6b\xc1\x4c\x5f\x04\x08\x5a\x3c\x09\xa6\x61\x4f\x0a\x41\x0f\x05\x82\xe6\xce\x1c\x00\x04\xcd\x2f\xa5\x07\x41\x57\x8e\x1c\x0c\x04\xad\x3d\x7b\x55\x78\x58\x81\x18\x57\xbe\x9d\x24\xc4\x58\xb8\xef\x20\xc6\x32\xc4\x68\x09\xcb\x4b\x83\x18\x8b\xa1\x3a\x88\xb1\x7d\x8b\xbd\x02\x88\xdb\xdc\x04\xda\x00\x88\xb6\xb9\xbe\x1d\x80\x68\xe9\xd1\x01\x88\x3b\x04\x10\x5b\xc4\xd9\x01\x88\xee\xec\x6f\x65\x76\xc2\x67\x7f\xc7\x45\xe0\x8a\x65\x9e\x11\x40\x5c\x2d\xf8\x1c\x80\x58\xed\x61\xd7\xd1\xd7\x02\x88\x35\x01\x1c\x80\xb8\x32\xdf\x42\x81\x0a\x8a\x55\xd5\xa0\x0e\x20\xd6\x04\x70\x00\xe2\xfe\x62\xbf\x06\x20\x6a\x23\xef\x00\xc4\x3d\x44\x5e\x03\x20\xd6\x82\xef\x00\xc4\x6a\x3f\x5b\xe8\x60\x3e\x68\x69\x06\x10\x6b\x8a\x38\x00\xd1\xdc\xd1\x3e\xb4\xb1\x01\x88\xe6\xe9\xf2\x82\xd4\xe9\x34\x80\x58\x53\xa0\x0a\x20\x56\xe5\x74\x00\xa2\x03\x10\xdb\x19\xb8\xfd\x6c\x4b\x83\xa3\x02\x88\xd5\xf9\xad\x07\x10\x6b\x65\xc2\x01\x88\xfa\xae\x8e\x51\xb2\xdb\x02\x88\x06\xa9\x1d\x80\xd8\xd8\xd9\xb1\x55\xb5\x03\x88\x36\x5d\x1d\x80\xd8\xd0\xdb\xb1\xa5\x6d\x00\x10\x6d\xda\x3a\x00\xd1\xd2\xd1\xb1\x75\x35\x03\x88\x36\x49\x1d\x80\xb8\xdf\x65\xcd\x3a\x80\x68\x12\xd0\x01\x88\xfb\x5b\x56\x56\x01\x44\xf3\xca\xd2\x01\x88\x9b\x18\xa0\xf6\x1a\xac\x01\x88\xc6\xf8\x3b\x00\xd1\x01\x88\xed\x0c\xdc\x46\xbf\xa5\x41\xa7\x00\x44\xdd\xc1\x9e\x05\x40\xd4\x1e\x14\x3a\x00\x51\xd7\xc5\xfe\x15\xd2\x02\x88\x16\x85\x1c\x80\x88\x1c\x80\xd8\xca\xc0\xd5\xf2\x96\x06\xc7\x04\x10\x8b\xc2\x60\x02\x10\x57\xa5\xc0\x01\x88\x25\xeb\x9d\x06\xbd\x0e\x20\xd6\xa2\xee\x00\xc4\x9d\x07\xbd\x02\x20\xd6\x43\xee\x00\xc4\xdd\xee\x1d\x6d\x00\x62\x2d\xfa\x0e\x40\x74\x00\xe2\x46\x00\xe2\x0d\x60\xe1\x4f\x4f\x98\x3f\xfc\x5f\x0c\xa2\xd5\x1f\xac\x14\x10\xc5\x34\x85\x60\xbe\x12\x4e\x31\x4a\xb4\xd5\x01\x2a\xb9\xea\x87\x82\x14\xa3\xec\x7a\xfb\x67\x14\xd3\x2b\xf5\xfe\x99\x66\x05\xaa\x7b\x90\xe5\xcb\x5e\xb9\xc4\x68\xf5\xc8\x62\xe6\xcf\x75\x92\x7c\xb7\x8b\x39\x68\x5c\x4a\x33\xf3\x4e\x05\xd0\x43\x9e\x87\x3c\x01\xbe\xda\x27\x22\x6f\x46\x1e\x55\xb0\xbc\x39\x9f\xc7\x14\x8b\xc3\xc2\x94\x99\xeb\x15\x94\xb2\xf0\xfa\x24\x49\xca\xdc\x7b\x07\x52\x96\x41\x4a\x73\x54\x5e\x1a\x47\x99\x8f\xd4\x61\x94\xbb\x6c\xb1\x57\xd0\x72\xe3\xbb\x58\x1b\xca\xd2\x52\x07\xb6\x83\x2c\xcd\x1d\x3a\xc6\x72\x87\x8c\x65\x73\x98\x1d\x62\xe9\x4e\x37\x57\x66\x27\x7c\xba\x79\x5c\xc8\x2f\x5b\xfc\x19\x01\xcb\x62\x19\xe8\xf8\xca\x6a\x0f\xbb\x0d\xbd\x96\xae\xac\x46\xdf\xc1\x95\x2b\xf3\x2d\xc2\x5f\xc1\xcc\xd6\x05\xa8\xa3\x95\xd5\xe8\x3b\xb2\x72\x5f\x81\x5f\xe3\x2a\x75\x61\x77\x58\xe5\xce\xc3\xae\x81\x2a\xab\x91\x77\x4c\x65\xb5\x9f\x2d\x44\x30\x9d\xb7\x34\x13\x95\x55\x39\x1c\x50\x69\xee\x68\xf7\xc2\xd8\x70\x4a\xe3\x44\x79\x41\xd2\x74\x9a\xa6\xac\x0a\x50\x85\x29\xd7\xa5\x74\x28\xa5\x43\x29\xdb\x19\xb8\x7d\x6b\x4b\x83\xa3\xa2\x94\xeb\xb3\x5b\x0f\x52\x56\x2b\x84\xe3\x28\xf5\x5d\x1d\xa1\x58\xb7\xc5\x28\xb5\x32\x3b\x88\xb2\xb1\xb3\x23\x4b\x6a\x67\x28\xcd\xa2\x3a\x82\xb2\xa1\xb7\x23\xeb\xda\x00\x50\x9a\x85\x75\xf8\xa4\xa5\xa3\x23\x8b\x6a\xa6\x27\xcd\x7a\x3a\x76\x72\x9f\xeb\x98\x75\x72\xd2\xa0\x9d\x03\x27\xf7\xb5\x88\xac\x62\x93\xc6\x75\xa4\xa3\x26\x37\x31\x40\x6d\x05\x58\x63\x26\x4d\xc1\x77\xc8\xa4\x43\x26\xdb\x19\xb8\x0d\x7d\x4b\x83\x4e\x21\x93\xf5\xe3\x3b\x0b\x30\xa9\x3b\x0b\x74\xbc\xa4\xae\x8b\x7d\xcb\xa3\xa5\x25\xcd\xf2\x38\x58\x12\x39\x58\xb2\x95\x81\xab\xe2\x2d\x0d\x8e\x09\x4b\x66\x55\xc1\x84\x4a\x16\x75\xc0\x91\x92\x25\xeb\x1d\x46\xbc\xce\x49\x56\x43\xee\x30\xc9\x1d\x47\xbc\x02\x49\xd6\xe2\xed\x18\xc9\x5d\xee\x14\x6d\x84\x64\x35\xf4\x0e\x90\x74\x80\xe4\x46\x80\xe4\x15\xc5\x3e\xa0\x4f\x5c\x92\x09\xf1\x71\x7d\x3d\x76\x42\xa8\x24\x4e\xaa\x52\x04\x74\xd2\x0c\x7b\xc4\x91\x15\x6c\xdc\x21\xb6\xf8\x3c\xcc\xa7\x54\x84\xab\x78\x48\x59\xb3\x5e\x22\x63\xef\x57\x15\x81\x1b\xa0\x93\x55\x81\x60\xe5\x56\xf3\xa4\x55\x12\xa7\x3b\x15\xa7\xbd\x02\x77\xe5\x52\xd6\xc2\xf7\xcf\x4a\x11\xab\xdf\x89\x66\xdb\xb9\xbc\x4b\x82\x47\xcd\x9e\x0f\x4c\x82\xc0\x9a\xed\x8b\x9b\x2e\x6b\xef\x76\x60\xba\x94\xa4\x2a\xcf\x0f\x52\x7a\xfb\x88\x13\xa2\xec\x5d\x36\x03\xca\x9e\x75\x28\xe5\x2f\x79\xe8\x52\xbd\xdb\xa9\x7e\xc9\xc3\x72\x8a\x53\x1e\x1e\x33\xb5\x95\x37\x59\x4a\x2b\x4f\x3a\x94\xca\x37\x20\xee\xab\x18\xdb\x09\x65\x73\xf3\x99\x50\xc2\x3a\xf0\xa8\xc5\xff\xe1\x61\xce\x45\x8b\x56\x94\x87\x28\xf9\x43\xf0\x27\x30\x2f\xda\x3f\x27\x10\x25\x69\xd0\x53\x2f\x4a\x0f\x00\xe4\xe9\x9b\x26\x49\xef\x13\x9e\x81\xf5\xbb\xfe\xe7\xa2\xee\x9b\xba\xab\x74\x35\xbb\xfb\x9e\x47\xf2\x78\xee\xb2\x78\x36\x06\x51\x71\x58\xa5\x98\xd9\xe1\x2b\x2e\xba\xe6\x30\xe5\xe1\x5d\x92\xed\x66\xaf\x2f\x79\x78\xa9\x5a\x6c\xe9\xf9\x0e\x0a\x5a\xe9\xd7\x41\x3f\x35\x1b\xf4\xa7\x72\x46\x47\x67\xff\x0f\x00\x00\xff\xff\xb7\x2e\x4e\x57\x07\xc2\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 49671, mode: os.FileMode(436), modTime: time.Unix(1483975854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5b\xaf\xd3\x46\x10\x7e\x3f\xbf\x62\xba\x45\x6a\x2b\xe1\x58\x80\xd4\x07\xb4\xb1\x44\x01\xb5\x48\x07\x8a\x28\x54\xea\xe3\xd8\x9e\xd8\xcb\x59\xef\xb8\xbb\x9b\x1c\xa5\x56\xfe\x7b\xb5\x76\x92\x93\xc4\x76\x6e\xd0\x92\x87\xc4\xf1\xdc\xbe\x99\x9d\x9b\x2d\xbf\x7b\xf5\xfb\xcb\x8f\x7f\xbd\x7f\x0d\xa5\xaf\x74\x72\x23\xc3\x0f\x68\x34\xc5\x54\x90\x11\xc9\x4d\xd3\x78\xaa\x6a\x8d\x9e\x40\x94\x84\x39\x59\x01\x93\xd5\xea\x46\xa6\x9c\x2f\x93\x1b\x00\x00\x99\xab\x05\x64\x1a\x9d\x9b\x8a\x8c\x8d\x47\x65\xc8\x8a\x8e\x16\x3e\xbb\x2a\x0c\x2e\x52\x5c\xab\xd8\x32\xec\x2a\xf8\x3c\xaf\x52\xf6\x96\xcd\x8e\x82\x4e\x89\x9a\xc1\xe4\x93\x23\xfb\x0e\x2b\x5a\xad\xf6\x88\xb2\x7c\x92\x34\xcd\x0e\xf5\x07\x07\x29\x7b\x19\x97\x4f\x0e\xb5\x90\x76\x43\xd2\x6f\x97\x63\xfc\x26\xef\xb1\x3f\xdd\x80\xd5\x84\xb9\x48\x70\xee\xb9\x42\xaf\x32\xd4\x7a\x09\x19\x6b\x4d\x99\x07\x34\x39\xa4\x96\x31\xcf\xd0\x85\x7f\x4b\xb8\x53\x26\x77\xc0\x33\x50\x66\xc6\x36\x48\xb0\x81\x19\x5b\x58\xf2\x5c\xc6\xe5\xd3\x21\x87\x7f\x61\x3f\xe4\x2f\x42\x69\x69\x36\x15\xa5\xf7\xb5\x7b\x1e\xc7\xfe\x5e\x79\x4f\x76\x92\x71\x15\x37\xcd\x83\x94\xd8\x20\x4d\xbd\x81\xd4\x9b\x48\x17\xed\x8f\xe3\x4c\xa1\x8e\x54\xc6\xdd\xed\xb5\xbc\x48\xa4\xab\xd1\x6c\x84\x66\x08\x33\xdc\xd0\xc2\x25\x66\x5e\x2d\x48\x24\x32\x0e\x6c\x89\x8c\xf1\x9c\xf0\x1e\x82\xc5\xba\x76\x93\x1d\xc4\x5f\x19\x64\x8d\xce\x9d\x42\xd9\x3f\xd4\x7e\x44\x89\x7c\x4e\xd9\xdd\x7f\x88\x74\x6b\x63\x1c\x6b\x0f\x57\xc6\xc6\xb1\xa6\x49\x4e\x0b\xd2\x5c\x93\x75\x93\x82\xb9\xd0\xd4\x9e\x3d\xd6\xca\x85\xaf\x78\xa1\x9c\x62\xb3\x26\x85\xbb\x2d\xf9\xef\x39\x7b\x74\xe7\x7a\xd1\x09\x0f\x3a\xd1\x91\xce\x49\x89\x9e\x03\x85\xf2\xe5\x3c\x6d\xe1\xa8\x7b\xf4\x78\x87\x71\x15\x8a\xef\x6c\x54\xad\xfc\x30\xaa\x96\x74\x0a\x95\x8c\x73\xb5\x48\x76\xba\xcf\x5c\x6f\xd4\x18\x5c\x80\xc1\x45\x54\x2b\xad\x5d\x7b\xf5\x79\xee\xbc\x9a\x29\xca\xf7\xda\x91\xd4\x0a\x2c\x6b\x9a\x8a\xda\x92\x23\xe3\xdb\x5a\xde\x7a\xb0\xb5\x8e\x90\xa3\xc7\xc8\x73\x51\x04\x66\x8f\xa9\x58\x47\xe3\xfb\x92\x2b\x12\xc9\x6f\x5c\x51\x00\x27\x63\xad\x76\x0d\x34\x8d\x45\x53\x10\x3c\xba\xa3\xe5\x63\x78\xb4\x40\x0d\xcf\xa7\x30\x79\xd9\xf5\x16\xc5\xe6\x2d\xd6\x7b\x19\x3c\x82\xe8\x28\x84\xa6\x09\xea\x57\x2b\x91\x6c\xae\x86\xa1\xec\x57\x8b\x8c\xe7\x3a\x19\xee\xdd\x1e\xd3\x28\x0c\x00\x32\xfe\xa0\x7b\xb7\x5c\x2a\x9f\x8a\xd6\xed\x5d\xfe\x1a\x4d\xc8\xa3\x9c\x40\x19\xd8\x04\x6e\x4f\xf6\xd0\x4a\x90\xd0\xd0\x7e\x47\x79\x88\x92\x1d\x10\x18\x14\x8a\xc2\x00\x53\xa6\x18\xe1\x6f\x65\xca\x67\xfb\x22\x5e\x79\xdd\x1d\x65\x17\xb5\x58\x73\x11\x8b\xe4\xb5\xb5\x6c\xe1\x96\x8b\x2e\x64\xe5\xb3\x11\x08\x5d\xae\x0d\x91\xba\xfe\x7e\xcb\xc5\x41\x27\x3a\xee\x41\x98\xba\x22\x91\xb5\xa5\x44\x66\x9c\x53\x18\x7b\xad\x0e\x19\xb7\x7f\x65\xdc\x92\x8e\x99\x1d\x68\xd1\xa7\xec\x8d\x03\xa4\x2a\x79\xc7\xbe\x54\xa6\x00\xcf\xe0\x4a\xbe\x97\x31\x55\x57\x04\xa3\xdf\x92\x8f\x88\x8c\xa5\x43\x18\xac\xff\x67\x32\x1c\x1f\x16\xc9\xc7\x75\xab\x7f\x28\x5b\x77\x75\xba\x5c\x7c\x34\x5d\x7e\x8d\x77\x8c\x03\xf5\xa1\xa8\xc7\x88\x70\x4d\x47\x1a\xb0\xb1\xdf\x58\x46\x98\x36\xb1\x6d\x9a\x60\xe4\xb0\x3b\x1d\x37\x10\x9f\xb2\x30\x96\x67\x0f\x1a\x8e\xc5\xe1\x68\xed\xc0\xa5\xe5\x70\x0a\xcf\x58\xee\x7f\xd3\x92\xe8\xb2\xea\x4d\x85\x05\xbd\x30\xa8\x97\x4e\xb9\x57\xe8\x8f\xc6\x64\xa4\x88\x7e\xed\x56\x88\x3f\xdb\x45\x05\x5e\xbc\x7f\x03\x1f\xc8\xcd\xb5\x87\x1f\x9b\x66\xc8\xc0\x4f\xe3\x65\x03\x67\x9d\xcd\x85\x38\x4e\x9a\xbb\xf4\xe0\xe0\xfa\x2a\x6e\xc3\xf1\xe9\xc3\xed\x99\xa3\xc2\xf2\xfd\x11\x95\x87\xdc\x19\xeb\xa8\xca\xa3\x9f\x4f\x88\xc0\x7e\x71\x76\x98\xfe\xe0\xb9\xcd\xc2\x73\x46\x22\x55\x55\x80\xb3\xd9\x03\xad\xc5\xbb\x9d\xf5\xaa\x2a\x22\x4b\xae\x66\xd3\x2e\xe7\x8f\x01\xb5\x9f\x8a\x96\x11\x30\x1c\xf4\x3f\x94\x43\xba\x84\xde\x71\x88\xfe\x4e\xd9\x83\x35\x1e\xf0\x2f\x75\x78\x6f\xd0\xee\x65\x65\x97\x25\x07\x83\xf7\x4b\x60\x5e\x3d\xb4\x2f\x69\x3a\x5f\xa7\xe1\x0c\xdc\xba\x62\x3e\x6c\x97\xc2\xed\x22\x3a\xb8\x18\x0e\xad\x83\xb8\xe5\xec\x46\x6c\x54\x58\x95\x8b\xde\xe4\xe8\x3f\x8d\x0c\x01\x3f\xdc\x6f\x1f\x1e\x0f\xd6\xd7\x32\xee\x5e\x76\xc8\xb8\x7b\x49\xf2\x6f\x00\x00\x00\xff\xff\x4f\x95\x49\x87\x35\x11\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4405, mode: os.FileMode(436), modTime: time.Unix(1483973866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x3d\x6f\xf2\x30\x10\xc7\xf7\x7c\x8a\x7b\xbc\x3c\x13\x44\x30\x1b\x2f\xb4\x1b\x6a\x3b\x74\xe9\xe8\xc4\xd7\xd8\xad\xe3\x8b\x6c\x03\x8d\x22\xbe\x7b\x15\x1c\x20\x72\x93\x21\xbe\xd3\xff\x7e\xf7\xa6\xe3\xff\x9e\x5e\xf7\xef\x1f\x6f\xcf\xa0\x63\x6b\x45\xc1\xc7\x07\xac\x74\xcd\x8e\xa1\x63\xa2\x18\x86\x88\x6d\x67\x65\x44\x60\x1a\xa5\x42\xcf\x60\x7d\xb9\x14\xbc\x22\xd5\x8b\x02\x00\x80\x2b\x73\x82\xda\xca\x10\x76\xac\x26\x17\xa5\x71\xe8\x59\xd2\xc6\x6f\x9e\xc2\xc9\x53\x25\xa7\x14\x37\x7d\xce\x7f\x1d\xdb\x8a\xa2\x27\x37\xe3\xaf\x31\x7a\x23\x0e\xd4\x04\x5e\xea\x4d\xae\x6c\x6f\xb0\x45\xa9\x98\xd8\x6b\xac\xbf\xa1\xa7\xa3\x07\x3a\x3b\xa8\x28\xfe\x0f\x60\x13\xbb\x7d\xb0\xbc\x54\xe6\x24\x16\x9b\xe8\xa4\x43\x0b\xd7\xff\xaa\xf3\xa6\x95\xbe\xcf\xdb\xc9\xa3\x57\xe3\x3a\xb2\xa0\x34\xbb\xf9\x84\xf5\x81\x9a\xd9\xbc\xf7\x24\x9d\x47\x31\x0c\x49\xe5\xe5\xe8\x2d\xf0\x68\x03\x2e\xc1\x7a\x33\x1f\x1b\x22\xfe\xc4\x55\x8d\x2e\xa2\x4f\xf6\xbd\xf1\x17\x8a\xda\xb8\x06\x22\x41\xd0\x74\xfe\xbb\xc1\xa9\x8e\x53\x59\x99\x7c\x43\x0f\x77\x32\x79\x99\x8e\x80\x97\xe9\x78\x7e\x03\x00\x00\xff\xff\x9e\x00\x1e\x12\x4d\x02\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 589, mode: os.FileMode(436), modTime: time.Unix(1483974845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\xc1\x6e\xdb\x30\x0c\x86\xef\x79\x0a\x42\x3b\xec\xe4\xea\x05\x1c\x5d\x76\x6d\x7b\x19\xf6\x00\x8c\x45\xa5\xc4\x54\x2a\x93\x64\xa3\x83\x91\x77\x1f\x6c\xd9\x99\xe3\x39\xc5\x86\x01\x05\x72\x4a\xf4\xe7\xe7\x4f\xea\xa3\xd2\xf7\x96\x1c\x0b\x81\x12\xec\x0e\x18\xd5\xf9\xbc\xab\x05\x3b\x68\x3c\xa6\xb4\x9f\x54\x28\x1f\x95\x25\x87\xad\xcf\xf3\x91\xa5\xa3\x98\x68\x3e\x3a\x7e\x23\x5b\xe5\x70\x52\x66\x07\x00\x50\x5b\xbe\xe4\x34\x41\x32\xb2\x50\xac\x9c\x6f\xd9\x4e\x8e\xb5\x6b\x0a\x7a\x21\xb4\x14\x17\x9e\xd1\x77\x68\x73\x0e\xb2\xb2\xe6\x70\x3c\x7a\x82\x26\x78\x8f\xa7\x44\x56\x81\xc5\x8c\x93\x3c\xb4\x2d\xfa\x2c\x63\x3c\x52\xde\xab\x4f\xa5\xfa\x89\xa4\x4d\x0a\x30\x32\x56\xf4\x76\x42\xb1\x64\xf7\xca\xa1\x4f\xb4\x6a\x3e\x0e\x90\x4e\x78\x69\xcf\x4d\x90\x6a\xe0\x65\x6a\x3d\xe8\x1f\x69\xaf\x75\x41\x71\xad\xf6\x3d\x3b\x78\xf8\x96\x28\x3e\xe3\x2b\x9d\xcf\xd7\x25\xb8\xe2\x76\x88\x28\x56\xc1\x4b\x24\xb7\x57\x5a\x99\xbe\x5f\x94\x7e\x4e\x70\x08\xb9\xd6\xb8\xee\x40\x3e\xfd\x73\xf2\xd3\xcf\x1b\x59\x62\x17\x51\xb5\xb6\xdc\xbd\xfb\x28\xe6\x55\xc2\xef\x9d\xb2\x9d\x7f\x2d\x9b\x5c\x61\x6a\xfd\x22\x62\x7e\xa4\x82\xdd\xc6\x6e\x47\x78\xf4\x03\x1e\x9e\x47\xd7\x80\x01\xd4\x97\x20\x8e\x8f\x6a\x75\xe1\x31\xda\xf3\x22\xba\xe2\x4c\xaf\x80\x4d\xe6\x6e\xeb\xdd\x6c\x62\xbb\x91\xb2\x5d\x7e\x45\xea\x26\xfc\xca\xb3\x7c\xbf\x80\x6f\xc6\xe1\xb5\x32\xe5\x16\x7f\x2c\xa0\x40\xf7\x6c\x76\x7f\x07\xe3\x31\xdc\x2b\x09\x1f\x06\x0c\x8f\xe1\xff\x19\x7c\xcd\x98\xdb\x74\xa7\x18\xd2\x38\xbc\x56\xa6\xdc\xe2\x1d\x18\xd7\x4a\xeb\xcd\xd6\xbf\x74\xfa\x5a\x6b\xc1\xce\xec\xe6\x99\x7e\x05\x00\x00\xff\xff\x32\xc4\x33\xee\x4f\x06\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1615, mode: os.FileMode(436), modTime: time.Unix(1483975512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x4d\x6b\xe3\x30\x10\xbd\xe7\x57\xcc\xea\xee\x88\xb6\xb7\xc5\x36\x2c\xdd\x0f\xca\xb2\xec\x42\x7b\xe9\x69\x19\x4b\x13\x5b\x1b\x59\x12\xd2\x38\x25\x84\xfe\xf7\xc5\x1f\x69\x93\xd4\x85\x1e\xda\xf8\x60\x23\x69\xe6\x3d\xbd\x37\xb2\xa4\xfc\xd3\xd7\xdf\xd7\x77\xf7\x7f\xbe\x41\xc3\xad\x2d\x17\x79\xff\x01\x8b\xae\x2e\x04\x39\x51\x2e\x76\x3b\xa6\x36\x58\x64\x02\xd1\x10\x6a\x8a\x02\x96\x8f\x8f\x8b\xbc\xf2\x7a\x5b\x2e\x00\x00\x72\x6d\x36\xa0\x2c\xa6\x54\x08\xe5\x1d\xa3\x71\x14\xc5\x38\xd6\x3f\x87\x10\x0e\x37\x15\x4e\x10\xfb\xf1\x7c\xe5\x63\x0b\xa8\xd8\x78\x57\x08\x99\x88\xbb\x20\x05\xb4\xc4\x8d\xd7\x85\x08\x3e\xb1\x00\x72\x8a\xb7\x81\x0a\xd1\x76\x96\x4d\xc0\xc8\xb2\x4f\xcb\x34\x32\x1e\x70\x9d\xce\xe7\x5f\xd7\x56\x9e\xa3\x77\x27\x31\x43\x5c\x73\x51\xde\x38\xc3\x06\x2d\xdc\xf6\xa4\xb9\x6c\x2e\xe6\xc2\x2e\xf7\x68\x96\x50\x8b\xf2\xc6\x85\x8e\x21\xf9\x96\x60\x83\xb6\xa3\x04\x15\xad\x7c\x24\xe8\x92\x71\x35\x70\x63\x12\x54\x9e\x73\xd9\x5c\xce\xa0\x99\x21\x7b\xd4\x92\xba\xaa\x35\x2c\xf6\xf0\x15\x3b\xa8\xd8\x65\xb6\x1e\x3e\x21\x9a\x16\xe3\x56\x8c\x2c\x85\xb8\xc5\x0d\x9d\x4a\x95\xda\x6c\xca\xc5\x71\x5f\x73\x55\xde\x3d\x18\x66\x8a\xb9\x6c\xae\x8e\x13\x76\x3b\xb3\x82\xe5\x2f\x4a\x09\x6b\x3a\xa8\xc1\xa9\x6f\x68\x29\x32\x0c\xef\x4c\xa3\xab\xfb\x82\xee\x76\xcf\x89\x13\xf1\x31\x34\x39\xfd\x46\x48\xe3\x56\x7e\xae\x22\x08\x4d\xa4\x55\x21\x1a\xe6\x90\x3e\x4b\x89\x21\xa4\x25\x8f\x62\x96\xca\xb7\x02\x18\x63\x4d\x5c\x88\xbf\x95\x45\xb7\x9e\xc1\xe8\x9f\x7b\xdf\x81\x42\x07\xaa\x21\xb5\x96\x2a\x52\xbf\xf6\x26\x4f\x00\x43\xb0\x46\x61\xbf\xda\x5e\x4e\x40\xe2\xac\xc1\x47\x5d\x8c\x95\xa5\xbd\xaa\xb1\x31\xbc\xb3\xc4\xd1\x04\xd2\x53\xab\xf2\x51\x53\x7c\x6a\x46\x4a\xc1\xbb\x64\x5e\xd4\x70\xc4\x8c\xf3\x4a\x72\xd6\xe5\xb5\x77\xa9\x6b\x29\xc2\x4f\xda\xe6\x92\xf5\xeb\x91\xb3\x03\x70\xba\xea\x02\xa6\xf4\xe0\xa3\x16\xe0\xb0\xa5\x42\x4c\xfe\x66\x6a\xe2\xc9\xd6\xb4\x7d\xc5\xd8\x79\xfa\x5c\xce\x4d\xff\x6d\x9a\x6e\x49\x45\xe2\xb3\xc8\x4a\x03\xd5\x47\x2b\xfb\xa2\x14\xa5\x04\x77\x7e\x4d\xee\x23\x65\xe1\xc0\x93\x71\xcf\x73\x4e\x4d\x67\xa8\xd8\xa1\xb4\xf7\xa9\x5a\x2e\x87\x9f\x70\x66\xa7\xfc\xe1\x7d\x6d\x09\xae\xad\xef\xf4\xcb\xed\xf2\xfc\xff\x7a\x24\x4d\x6e\x38\x92\xbe\x1b\x4b\xef\xe1\xf2\xca\x58\xda\x3b\x5c\xab\x5e\x67\xa6\x9e\x58\xb2\x61\xf4\x9d\xcc\x7d\xee\xe8\x8f\xe6\xe9\x72\x30\x6e\xa0\xb9\x1c\xef\x0b\xb9\x1c\xef\x19\xff\x03\x00\x00\xff\xff\x85\x17\x49\x2e\x78\x08\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2168, mode: os.FileMode(436), modTime: time.Unix(1483975797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x38\xdf\x57\xa3\x3d\x0e\xaa\x81\x21\xdd\x3a\x0c\x0b\x16\x20\xd9\x61\x47\xd9\x62\x12\xad\x8a\x64\x88\xb4\x87\xa0\xe8\xbf\x0f\xb2\x6c\xc4\x4b\xe3\x75\x69\x96\x9d\x9c\x4b\x20\x3f\xf2\x3d\x4a\x8f\x86\x45\xf1\xe6\xee\xeb\x74\xf9\x7d\xfe\x01\x36\xbc\x35\xd9\x44\x84\x3f\x30\xd2\xae\x6f\x13\xb4\x49\x36\x79\x7c\x64\xdc\x96\x46\x32\x42\xb2\x41\xa9\xd0\x27\x70\xf5\xf4\x34\x11\xb9\x53\xbb\x6c\x02\x00\x20\x94\xae\xa1\x30\x92\xe8\x36\x29\x9c\x65\xa9\x2d\xfa\x24\x62\xe1\xd7\xa7\xb0\xb2\xce\x65\x4b\xd1\xe1\xfd\xfc\x1f\xd5\x36\x77\xec\x9d\xed\xe5\x37\x31\x9b\xeb\x6c\xee\x5d\x81\x44\xb0\x60\xc9\x15\x89\x74\x73\x7d\x18\x73\xd3\xd1\x18\x94\x2a\xc9\xa6\x1b\x2c\x1e\xa0\x6c\xd3\xa8\x49\x43\x02\x69\x15\xb0\x7c\x40\xd8\xa2\xa4\xca\x23\x81\x5e\x81\xb4\xbb\x10\x99\x1b\xdc\x06\xea\x9b\x3d\xb5\x48\x95\xae\xb3\xa3\xd5\xb2\xcc\x0d\xbe\xf5\x48\xa5\xb3\xa4\x6b\x3c\x2c\xba\xc1\x7f\x0b\x86\x98\x42\xec\x75\x89\xaa\x5d\xe5\xce\x2b\xf4\xa8\x0e\xd2\x23\x45\x38\xf4\xe7\xcf\x23\xe6\x8f\x03\x11\x54\xdd\x81\x89\x94\x07\x18\xba\xc0\xee\x44\x87\xe2\x44\x7a\x4c\x4a\xa4\x03\xc5\x09\xde\x37\xc7\xc9\x45\x2f\x7f\x6a\x66\xf4\x70\xa7\x3d\x16\x0c\x33\x24\x92\x6b\x84\x2f\x9a\x18\x2d\xfa\x97\x37\x33\x08\x42\xd3\x8b\x7a\x05\x57\x71\xbf\x57\xad\x54\xa4\x9e\xed\x08\xcd\x2a\x22\xbd\xe6\x3c\xaa\x42\xa5\xb4\x40\xbc\x33\x18\x3a\xde\x38\xff\x2e\x37\x15\x26\xd9\xfb\x82\x75\x8d\x22\x0d\xf8\x4b\x75\xa0\x21\x3c\x5d\xa7\xe9\x92\x05\xbb\xf2\x2f\x45\xac\xfa\x83\xc6\xa9\x86\xc3\x29\xfe\x7d\x23\xf4\x97\x77\x2d\xa8\xd0\x68\x5a\x87\x9c\x6b\xda\x1c\xbd\x76\x4a\x17\xf0\xd9\xe5\x17\xf0\x6c\x34\xaa\x43\x5e\x6b\xd4\xd4\xd9\x95\x5e\xc3\x47\x6d\x10\x66\xce\x6a\x76\x5e\xdb\xf5\xbf\xb4\xaa\x65\x8d\x42\xa3\x61\x1d\x72\xee\x9b\x35\xf5\xa8\xd0\xb2\x96\xe6\xb2\xbe\xb5\x7a\x41\x6e\xb4\xed\xf5\xb6\xdd\x3b\xb7\x36\x08\x53\xe3\x2a\xf5\xdf\xbc\xbb\x6f\xe4\x46\xeb\xce\xb3\xee\xd3\x72\x39\xbf\xc8\xc5\x63\x81\xbe\x1e\xbf\x61\x7b\xe4\xf8\x48\xf0\xfc\xea\x2f\xd2\x66\xcc\x19\x9e\xa8\x2a\x93\x4d\x7a\x60\x58\xf6\xc2\x44\x1a\x29\x45\x1a\x47\xd4\x5f\x01\x00\x00\xff\xff\xc6\xa0\x91\x3d\xb3\x0e\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3763, mode: os.FileMode(436), modTime: time.Unix(1483975964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

