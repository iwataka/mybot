// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xdd\x8a\xe3\x30\x0c\x85\xef\xf3\x14\x86\xbd\x76\x28\x64\x61\x97\x14\xfa\x2e\x8a\xad\xb8\xde\xb8\x92\x91\xd5\xbf\x1d\xe6\xdd\x87\xf4\x27\xb8\x74\x08\x93\x8b\xe0\x8b\xf3\x1d\x1d\x89\x33\xb0\xbf\x9a\x8f\xc6\x3c\xbe\x0c\xde\x47\x0a\x56\x39\xf7\xe6\xcf\x26\x5f\xb6\xcd\x67\xd3\xb4\xff\x8e\x87\x81\x55\x98\x2a\xe9\x00\x6e\x0a\xc2\x47\xf2\xd6\x71\x62\xe9\x8d\x0a\x50\xc9\x20\x48\xba\x5d\x64\x8a\x17\xb5\x90\x62\xa0\xde\x38\x24\x45\xb9\x5b\x3a\x26\x85\x48\x28\x95\xe5\x01\x2e\xf6\x1c\xbd\xee\x7b\xf3\x77\xf3\x1c\xee\xe3\xa9\x9a\x0f\xa6\x64\xa0\x76\x84\x0a\x1b\x99\xd4\x96\xf8\x1f\x7b\xf3\xfb\x49\x65\xc1\x3a\x2b\x8b\x47\xe9\x0d\x31\xe1\xf6\xa7\x1b\xcc\x29\x5f\xe6\xbc\xeb\xcf\xfb\xa8\x58\x0e\x3c\xe1\x53\x6e\xf5\x1c\x55\x51\xe6\x27\x38\x8d\xa7\x3a\xc6\x83\xfa\xd5\x75\x5d\x37\x8e\x0b\x12\x98\x43\xc2\x55\x62\x1c\x67\x66\x21\x32\x94\xf2\xad\x30\x08\x5e\xab\x28\x88\xea\xd1\x4d\xef\xba\x21\x81\x9b\xd6\x2e\xe1\xd9\x07\x94\x21\x1d\xef\x9b\x29\x0c\x09\xcd\xce\xe8\x1e\xc1\xaf\x9e\x04\x52\x74\xf8\xca\xb5\xb7\xbf\x2d\x2a\x31\xa3\x9f\x5d\x6e\xad\xdb\x19\x95\xd6\x63\x42\xc5\xda\x92\x33\xb8\xa8\xd7\xde\x6c\xda\x6e\x2d\xe1\xb2\xea\x5c\x10\x85\xc1\xce\x8d\x42\xd2\x97\x3e\x49\x88\x74\x2f\x73\xf7\x68\xc6\x57\x00\x00\x00\xff\xff\xcd\xb5\xec\x4e\xf1\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 753, mode: os.FileMode(436), modTime: time.Unix(1484568986, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x6d\x6f\xe3\x36\x12\xc7\xdf\xe7\x53\xf0\x74\x45\xd3\xa2\x1b\xfb\xda\x1e\xee\x45\xd7\x36\xb0\xb7\xdb\x45\xf7\x90\xdd\xe6\x92\xec\x01\x87\xc3\x21\xa0\xa5\xb1\xcd\x2e\x45\xfa\x28\x2a\x0f\x30\xf2\xdd\x0f\xd4\x93\x65\x89\xa4\x64\xc7\x0f\xb2\x97\x7e\xd1\x4d\x2c\x0e\x35\x9c\x3f\x39\x1a\xd2\xfe\xa5\x8b\x45\x00\x13\xc2\x00\x79\x3e\x67\x13\x32\xf5\x9e\x9f\xcf\x06\x7f\x7a\xf7\xfb\xdb\xdb\x7f\x5f\xfd\x8a\x66\x32\xa4\xa3\xb3\x81\xfa\x07\x51\xcc\xa6\x43\x0f\x98\x37\x3a\x5b\x2c\x24\x84\x73\x8a\x25\x20\x6f\x06\x38\x00\xe1\xa1\x9e\x32\x1c\xf3\xe0\x69\x74\x86\x10\x42\x83\xc8\x17\x64\x2e\xd3\x5f\xd4\x6b\x12\x33\x5f\x12\xce\x50\x00\x14\x24\x5c\xf3\x87\xef\xc6\xb1\x94\x9c\xbd\x42\x21\x0f\x30\xfd\x1e\x2d\x8a\xb6\xea\x75\x8f\x05\x92\x02\x0d\x51\xda\xaa\x37\xc7\x02\x98\xfc\xc4\x03\x28\xfd\xf8\x7a\xc5\x84\x4c\xd0\x77\x52\xf4\x7c\x8a\xa3\xe8\x13\x0e\x01\x0d\x87\x43\x74\x9e\xde\x2f\x38\xaf\xde\x20\x71\x8a\x0b\xf4\x9d\xba\x13\x41\x43\xf4\x97\xd7\x88\xa0\x01\x52\x3d\xcc\x08\x0d\x54\xff\x51\x8f\x02\x9b\xca\xd9\x6b\x44\x7e\xf8\x41\xd7\x41\xee\x69\x62\x81\x86\xab\xc6\xff\x21\xff\xd5\x1a\x28\x3f\x93\x56\x3d\xf9\x34\xcf\xbc\x9c\x91\x20\x00\x76\x8e\xbe\xfd\x36\xed\xab\xc7\x78\x00\xcb\x41\x7c\xf8\x74\xf5\xf9\x56\x3b\x84\xfc\x95\x5a\xdd\x63\x1a\x03\x1a\xa2\xf3\x09\xa6\x11\x9c\xbf\x36\x36\x5f\x8d\x13\x3a\xb7\x34\xcd\x04\x20\x8c\x81\xf8\xed\xf6\xe3\xa5\x6a\xfe\x2e\x09\xaa\xc1\xe8\xb9\xf6\xee\xea\x3b\xcf\x08\x68\x04\x5f\x95\x1c\x52\xc4\xeb\xa8\x91\xcf\xd9\xf5\x44\xb9\x86\x7b\x10\x72\x53\x51\xce\x56\x7f\x1a\xf4\xcb\x2b\x78\x10\x90\x7b\x94\xb8\x38\x54\x89\x42\x62\xc2\x40\x78\xcb\xd5\x5d\xce\x08\x0c\xdf\x8f\x71\x96\x11\x8a\x06\xe5\x0e\xfe\x88\xc3\x31\x97\x82\xb3\x52\x07\x49\x9b\xd9\x8f\xa3\xb7\x49\x16\x8a\x05\x56\xb9\x62\xd0\x9f\xfd\x58\x6d\xf2\x53\xde\x0b\x05\x1c\x78\x45\x7b\x40\x4f\x3c\x16\x88\x3f\x30\x34\xe6\xf2\x3c\x42\x11\x8f\x85\x0f\xd1\x2b\x34\x21\x54\x82\x88\x10\x66\x01\xc2\x49\x0a\x8a\x06\xfd\xd9\x4f\x95\x7e\x27\x5c\x84\x88\x04\x43\x8f\xdf\x83\x78\x10\x44\x82\x97\xb5\x1e\x7a\xfd\x34\x35\xf6\x3d\x14\x82\x9c\xf1\x60\xe8\xcd\x79\x24\x3d\x04\xcc\x57\x33\x66\xe8\x85\x31\x95\x64\x8e\x85\xec\xab\x6e\x2e\x02\x2c\xb1\x37\x1a\x24\xbf\x54\x6e\x43\xd8\x3c\x96\x6a\x9e\x87\x2b\x77\x4a\xbb\x89\xe2\x71\x48\xa4\x87\x92\x59\x33\xf4\x6e\xf0\x3d\x78\xf9\x68\xc7\x92\xa1\xb1\x64\x17\x74\x9a\xfc\x33\x17\x24\xc4\xe2\xc9\x43\x91\x7c\xa2\x30\xf4\x02\x12\xcd\x29\x7e\xfa\x85\x30\x4a\x18\x78\xa3\x33\xcd\xe8\xaa\xc3\x99\x10\x0a\xa5\x31\x4d\x41\x9a\xbb\xab\xce\x9d\x6c\x20\x5a\xbf\xdf\xf1\x07\x46\x39\x0e\x9a\x7c\xaf\x84\x26\x0b\xd7\xfa\x8e\xb7\x10\x63\x2b\xe3\xfa\x3c\x5f\x7f\x54\xb5\x3e\x95\xef\x1e\x62\x38\x54\x9e\x3e\x8d\xb9\xec\x65\xcf\xdd\x56\x2e\x56\xe7\xd4\xa0\x1f\x90\xfb\x52\xcc\x16\x0b\x32\x41\xbd\x8f\x10\x45\x78\x0a\xcf\xcf\xda\xd5\x87\x29\x08\x89\x92\xff\x5e\x04\x98\x4d\xd5\x3a\x5e\x2c\x96\x46\x59\x9f\xcb\x2e\x81\x05\x6a\x25\x2f\x3b\x9b\xfd\x3c\xba\x7d\x20\x52\x82\x40\xb7\x24\x04\xe5\xa7\x5a\x52\x3f\x8f\xb4\xf7\x93\x78\x4c\xe1\x42\x40\x34\xe7\x2c\x22\xf7\xb5\x21\x25\xd7\x57\x1a\xa3\xd4\x24\x92\x82\xcc\x21\xc8\x7e\x1b\x73\x11\x80\x80\x40\x17\x60\xa9\x8a\x90\xfa\xfb\xe9\x35\xa1\xbf\x90\x5e\x0c\x46\x91\x2f\x00\x58\xa2\x48\x34\xe8\x4b\x43\x37\x79\x6b\x78\xf4\x69\x1c\x00\x12\x30\xa7\xa4\x8d\x01\x61\x99\x81\x6c\xd1\xd8\xe7\x31\x93\xcd\xcd\xb8\x9c\x81\x68\xd1\x9d\xb9\xc5\xa0\xaf\x0b\xcb\xa0\x6f\x08\xe4\x40\x2e\x0b\xbb\xea\x6b\xb1\x10\x6a\x12\xa1\x6f\x08\x0b\xe0\xf1\x15\xfa\x46\x66\x53\x02\xfd\x32\x44\xbd\x34\x3d\xf7\xb2\xe9\xd2\x2b\xa6\xcb\x73\xfd\x71\x84\x1a\xd5\xb2\x26\xcf\xf4\x89\x9d\x2f\x2d\x99\xdd\x30\x77\x26\xea\x65\x8f\xd4\x62\x35\x27\x05\x92\xd7\xb7\x47\xd0\x78\x31\x1d\x39\x25\x91\xbc\x85\x47\x39\xe6\x8f\xcb\x71\xf7\x6e\x92\x19\xa5\x1e\xe5\x11\xd2\x38\x92\x4e\xb8\xbb\x64\xc2\x79\x86\x38\xa0\x54\x8d\x06\x7d\x1b\xbc\x1b\x73\x4e\x6f\x80\x82\x5f\xf1\xef\xd7\x74\x0e\x5f\xa7\x53\x58\xe7\x62\x36\xcb\xef\xb2\x59\x7e\x10\x2f\x3f\xa4\x0b\xe7\x5a\x6a\x3d\xcc\x96\xd5\x9d\x90\xbb\xf5\x4e\xa6\xea\xfe\x3e\xf9\xc0\xe4\x95\x14\x25\xff\xde\xaa\xb5\xaa\x73\x2d\x59\xc4\x3b\x74\x6a\x90\x96\x7e\xd9\xb4\x4f\x7f\xa9\x3d\x94\x08\x9b\x70\x0f\xa9\x67\xdf\x85\xe4\xd3\xa9\x7a\xb0\x24\xbb\xac\xfc\x3d\x2c\xa6\x20\x87\xde\x9f\x33\xf7\x2f\x0a\xf7\x2f\xd2\x72\xe9\x6e\xb1\x48\x17\xf4\xf3\xb3\x26\xe1\x56\x5f\x01\x48\x4c\x68\x84\x66\x20\xc0\xee\x7b\x3f\xf5\xd7\x32\xfc\x3d\x04\x27\x7b\xea\x21\xce\x7c\x4a\xfc\x2f\x43\x6f\xb9\x25\x95\x33\x12\xbd\x42\xe7\x2d\xc2\x72\xfe\xbd\x37\x4a\x77\x41\x2f\x19\x94\x3e\x11\xa3\xd2\x73\x57\x1f\x86\x86\x87\x9a\x3d\x46\xda\xa2\xaa\x18\x6a\x1f\x07\x41\xa5\xb8\x6a\x9e\x01\xb6\xba\xe9\x13\x3c\xd4\x24\xc8\xab\x25\x4b\xfe\x45\x9a\x7a\xa7\x7e\x7d\xf3\x67\x60\x57\x5a\x18\x9f\xc5\xf5\x67\xee\xa0\x9f\xd4\x42\xb6\xfa\x6f\x0b\x0f\xe3\x72\xf1\x96\x24\x0d\x34\xc1\x01\x78\xc9\xee\xa8\x4d\xbe\x50\x05\x5b\xf2\xf3\xd0\xbb\xf8\xd1\x43\x82\xa7\x65\x2d\xa6\x7c\xea\x21\x2c\x08\xbe\xa0\x78\x0c\x94\x42\x30\x7e\x6a\xd5\xe3\x85\x24\x92\x6a\xab\xf5\xaa\xa7\x17\xf9\x6d\xb2\x9b\x72\x3f\x0e\x81\x99\x26\x70\xdd\x5c\x6d\x6d\xcd\xed\xf5\x36\xd9\x01\xd8\x0b\xf2\x92\x4f\x79\x04\x59\x66\x0e\x48\x14\x92\xa2\x73\x6f\xf4\xad\x8a\x4b\xf4\xba\x39\xc7\xa0\xb4\x32\x5f\xf5\x2d\x0d\x5c\x5b\xe5\xf2\x38\xbf\x4b\xd3\xf9\x6a\x49\x5f\xbb\xd7\xea\x36\xa1\x39\x4e\x6a\x3a\x37\x45\x69\xf6\xf3\xe8\x7d\xe2\x95\xfd\xde\xd5\x1b\x34\x6c\x31\xb4\xe6\x2f\xdf\x76\xe8\xbb\x35\x6f\x45\xf4\xed\x2d\x99\x5c\x6f\x10\x8c\x54\xe9\x68\xcf\x38\x26\xcb\x24\x23\xaf\x67\x6a\x7e\x42\x69\x5a\xb6\x1f\xbc\x6d\x4b\xa1\x6f\xbf\x41\xa0\xe6\x58\x4d\x79\xd6\xb0\x55\x32\x59\xaf\x65\x80\x2c\x1b\x82\x74\x4a\xf7\xae\x32\x6f\x74\x45\x63\xba\x16\x7b\xb9\xc3\xb6\xf2\x51\xeb\xee\x8e\x24\x45\x9b\x46\x3e\x16\x14\x75\x2b\xfa\x9f\xaf\x2f\x5b\x08\x10\x0b\x7a\x77\x32\x22\xcc\x70\x84\x42\x08\x08\xde\x9b\x02\xa6\xcd\x5c\xa6\xc1\x6f\x38\xfa\xa8\xfc\xb1\x08\x30\xc3\xd1\x5d\xe2\xf3\x49\x44\x3f\x16\xb4\x43\xb1\xff\x7c\x7d\xd9\x10\xf9\x58\xd0\xa3\x8f\xbb\x00\xf9\x00\x20\x21\xe8\x4a\xe4\xaf\x73\x87\x2c\xc1\x2f\x9c\x3e\xfa\xf0\x4f\xf0\x3d\x17\x44\x02\x92\x33\x01\xd1\x8c\xd3\xfd\xe9\x60\x3e\xac\xc9\x94\x78\x9f\xf9\x76\x9b\xbb\x66\x51\x24\x1f\xc7\x5d\x31\x8e\xa3\x97\xa6\x98\x64\x5d\xd4\xa6\x58\x25\x6d\xc4\x29\x46\x72\x42\xea\x50\xcc\xa6\x7b\x92\xc3\x7e\x92\xae\xa4\x32\x9f\xa3\x67\x0a\x28\x6f\x8b\x13\x9e\xc5\xa2\x26\xe7\x25\x66\xd3\x56\x67\x87\x2b\x7e\xed\x6e\x67\xd2\x6e\xb7\x51\x3b\x60\xd1\x37\xb2\xee\x7c\xd1\xca\x46\xb6\xf7\x2f\x12\xa5\x9f\x64\xbb\xfd\xac\xde\xc0\xed\x67\x5b\x1a\xa8\x14\x31\x86\xfd\x15\x94\xd6\xed\x54\x3a\xad\x7b\x97\xca\x23\x4b\xa2\xbe\x4f\x9b\x25\x8e\x1f\x7d\x86\x9e\x60\x1f\x50\xf2\xd9\x01\xa2\xe4\x0b\x50\x32\xe3\x7c\x5f\x4f\xd0\x2d\xa4\xec\x4c\x0b\x35\x8a\x5e\x32\x8a\xbb\xe5\x28\x6c\xa9\x3c\x93\xfa\xbd\xb2\x7b\xa3\xec\x2e\x0b\xb3\xce\x64\x78\xf4\x22\x4d\xc7\x34\x16\x02\x82\xa3\x57\x35\x1b\xc7\x06\xba\xfe\x3d\xb5\x3c\x39\x65\x55\x02\x7f\x00\x7c\xfc\x0b\x36\x1f\xc8\x06\xda\xfe\x96\x99\x9e\x9c\xb8\x7f\xf0\xa7\xa3\xd7\xf5\x0f\xfe\xb4\x81\xa4\xff\xe0\x4f\xa7\xa4\xa6\x8a\x5a\xa7\xca\x1a\x75\xbd\xb9\xaa\x49\xc4\x3e\xf6\xa2\x86\x62\x16\x84\x58\x7c\xe9\x54\xfc\x2f\x33\xa7\xda\x54\x96\x69\xcb\xe3\xd7\x81\x4f\x79\xb7\x34\xe0\x53\xde\x22\xfe\x7c\xca\xbb\x12\xfb\x43\x6e\xf3\x2f\x31\x9b\xc6\x78\x0a\x6e\xa3\x6f\x34\x70\x1b\xfd\x96\x06\xc1\x28\x24\x0c\x45\xc0\xd4\xa2\x6b\xfa\x42\xb0\xa9\x8b\x97\x9c\xd1\xbe\xa7\x1c\xcb\xbf\xfd\x55\x7b\x4e\x9b\x4f\xf4\xde\x47\xc2\x6e\x72\x17\x2d\x79\x82\xe6\xed\x43\xc2\xee\x8a\x31\x75\x25\x65\xa0\x8d\x15\xc2\x8f\xdd\x57\x08\x3f\xae\xa7\x10\x7e\xec\x9e\x42\x07\x49\xea\x6f\x7c\xe9\x0e\x6d\x6d\x06\x2e\x97\xb7\x34\x28\x3e\x75\xdb\x5b\x8e\xf0\x67\xe0\x7f\x59\x2d\xec\xd2\xe9\x9c\x7f\xc4\xa6\x4b\x05\xe9\xb7\x81\xf3\xcf\xd5\xba\xb2\xf6\xd1\x4b\x3f\x84\xee\x40\xd0\xf3\xcf\x9c\x2d\x51\xcf\xbd\x3d\xfe\xb0\x73\x4a\xf9\x43\x17\x82\x9e\x38\x62\x0b\x79\xd2\xe0\xe8\x03\xee\x73\x4a\x21\x67\x5a\x0f\xba\x77\xcc\x02\xff\x76\xe9\x90\x25\xfa\x25\xb7\xbb\x22\xc1\x5e\xcb\x8c\xb5\xbf\x3b\x3d\xe1\x5c\xbe\xec\x3b\xe6\x05\xfb\x02\x13\x1c\x53\x69\xf8\xb6\xf9\x5b\xca\xa3\x56\x3c\x8b\xd1\x7f\xc3\x25\xcd\xdb\x26\xce\xb4\xb8\x5e\xc2\x4c\xf3\x24\xfa\xb5\x60\xa6\x27\x01\x82\x16\xdf\x04\xd3\xb0\x27\x85\xa0\xfb\x02\x41\x73\x67\xf6\x00\x82\xe6\xb7\xd2\x83\xa0\x4b\x47\xf6\x06\x82\xd6\xbe\x7b\x55\x78\x58\x81\x18\x97\xbe\x1d\x25\xc4\x58\xb8\xef\x20\xc6\x32\xc4\x68\x09\xcb\xa9\x41\x8c\xc5\x50\x1d\xc4\xd8\xbe\xc5\x4e\x01\xc4\x4d\x1e\x02\x6d\x00\x44\xdb\x5a\xdf\x0c\x40\xb4\xf4\xe8\x00\xc4\x2d\x02\x88\x2d\xe2\xec\x00\x44\x77\xf6\xb7\x34\x3b\xe2\xb3\xbf\xc3\x22\x70\x45\x99\x67\x04\x10\x97\x05\x9f\x03\x10\xab\x3d\x6c\x3b\xfa\x5a\x00\xb1\x26\x80\x03\x10\x97\xe6\x1b\x28\x50\x41\xb1\xaa\x1a\xd4\x01\xc4\x9a\x00\x0e\x40\xdc\x5d\xec\x57\x00\x44\x6d\xe4\x1d\x80\xb8\x83\xc8\x6b\x00\xc4\x5a\xf0\x1d\x80\x58\xed\x67\x03\x1d\xcc\x07\x2d\xcd\x00\x62\x4d\x11\x07\x20\x9a\x3b\xda\x85\x36\x36\x00\xd1\xbc\x5c\x4e\x48\x9d\x4e\x03\x88\x35\x05\xaa\x00\x62\x55\x4e\x07\x20\x3a\x00\xb1\x9d\x81\xdb\xcf\xb6\x34\x38\x28\x80\x58\x5d\xdf\x7a\x00\xb1\x96\x26\x1c\x80\xa8\xef\xea\x10\x29\xbb\x2d\x80\x68\x90\xda\x01\x88\x8d\x9d\x1d\x5a\x55\x3b\x80\x68\xd3\xd5\x01\x88\x0d\xbd\x1d\x5a\xda\x06\x00\xd1\xa6\xad\x03\x10\x2d\x1d\x1d\x5a\x57\x33\x80\x68\x93\xd4\x01\x88\xbb\x2d\x6b\x56\x01\x44\x93\x80\x0e\x40\xdc\x5d\x59\x59\x05\x10\xcd\x95\xa5\x03\x10\xd7\x31\x40\xed\x35\x58\x01\x10\x8d\xf1\x77\x00\xa2\x03\x10\xdb\x19\xb8\x8d\x7e\x4b\x83\x4e\x01\x88\xba\x83\x3d\x0b\x80\xa8\x3d\x28\x74\x00\xa2\xae\x8b\xdd\x2b\xa4\x05\x10\x2d\x0a\x39\x00\x11\x39\x00\xb1\x95\x81\xcb\xe5\x2d\x0d\x0e\x09\x20\x16\x89\xc1\x04\x20\x2e\x53\x81\x03\x10\x4b\xd6\x5b\x0d\x7a\x1d\x40\xac\x45\xdd\x01\x88\x5b\x0f\x7a\x05\x40\xac\x87\xdc\x01\x88\xdb\xdd\x3b\xda\x00\xc4\x5a\xf4\x1d\x80\xe8\x00\xc4\xb5\x00\xc4\x1b\xc0\xc2\x9f\x1d\x31\x7f\xf8\xbf\x18\x44\xab\xff\x61\xa5\x80\x28\xa6\x29\x04\xf3\x95\x70\x8a\x51\xa2\xad\x0e\x50\xc9\x55\xdf\x17\xa4\x18\x65\xf7\xdb\x3d\xa3\x98\xde\xa9\xf7\xcf\x74\x56\xa0\xba\x07\xd9\x7c\xd9\x29\x97\x18\x2d\xbf\xb2\x98\xf9\x73\x9d\x4c\xbe\xdb\xa7\x39\x68\x5c\x4a\x67\xe6\x9d\x0a\xa0\x87\x3c\x0f\x79\x02\x7c\xb5\x4f\x44\x5e\x48\x1e\x55\xb0\xbc\x39\x9f\xc7\x14\x8b\xfd\xc2\x94\x99\xeb\x15\x94\xb2\xf0\xfa\x28\x49\xca\xdc\x7b\x07\x52\x96\x41\x4a\x73\x54\x4e\x8d\xa3\xcc\x47\xea\x30\xca\x6d\xb6\xd8\x29\x68\xb9\xf6\x53\xac\x0d\x65\x69\xc9\x03\x9b\x41\x96\xe6\x0e\x1d\x63\xb9\x45\xc6\xb2\x39\xcc\x0e\xb1\x74\xa7\x9b\x4b\xb3\x23\x3e\xdd\x3c\x2c\xe4\x97\x15\x7f\x46\xc0\xb2\x28\x03\x1d\x5f\x59\xed\x61\xbb\xa1\xd7\xd2\x95\xd5\xe8\x3b\xb8\x72\x69\xbe\x41\xf8\x2b\x98\xd9\xaa\x00\x75\xb4\xb2\x1a\x7d\x47\x56\xee\x2a\xf0\x2b\x5c\xa5\x2e\xec\x0e\xab\xdc\x7a\xd8\x35\x50\x65\x35\xf2\x8e\xa9\xac\xf6\xb3\x81\x08\xa6\xf3\x96\x66\xa2\xb2\x2a\x87\x03\x2a\xcd\x1d\x6d\x5f\x18\x1b\x4e\x69\x5c\x28\x27\x24\x4d\xa7\x69\xca\xaa\x00\x55\x98\x72\x55\x4a\x87\x52\x3a\x94\xb2\x9d\x81\xdb\xb7\xb6\x34\x38\x28\x4a\xb9\xba\xba\xf5\x20\x65\x35\x43\x38\x8e\x52\xdf\xd5\x01\x92\x75\x5b\x8c\x52\x2b\xb3\x83\x28\x1b\x3b\x3b\xb0\xa4\x76\x86\xd2\x2c\xaa\x23\x28\x1b\x7a\x3b\xb0\xae\x0d\x00\xa5\x59\x58\x87\x4f\x5a\x3a\x3a\xb0\xa8\x66\x7a\xd2\xac\xa7\x63\x27\x77\x59\xc7\xac\x92\x93\x06\xed\x1c\x38\xb9\xab\x22\xb2\x8a\x4d\x1a\xeb\x48\x47\x4d\xae\x63\x80\xda\x0a\xb0\xc2\x4c\x9a\x82\xef\x90\x49\x87\x4c\xb6\x33\x70\x1b\xfa\x96\x06\x9d\x42\x26\xeb\xc7\x77\x16\x60\x52\x77\x16\xe8\x78\x49\x5d\x17\xbb\x96\x47\x4b\x4b\x9a\xe5\x71\xb0\x24\x72\xb0\x64\x2b\x03\x97\xc5\x5b\x1a\x1c\x12\x96\xcc\xb2\x82\x09\x95\x2c\xf2\x80\x23\x25\x4b\xd6\x5b\x8c\x78\x9d\x93\xac\x86\xdc\x61\x92\x5b\x8e\x78\x05\x92\xac\xc5\xdb\x31\x92\xdb\xdc\x29\xda\x08\xc9\x6a\xe8\x1d\x20\xe9\x00\xc9\x56\x80\xe4\x9b\xab\x0f\x68\xc2\x05\xca\x60\x83\xa3\xe5\x23\x23\x1e\x0b\x1f\x9a\xbf\xd5\x97\x6c\x25\x20\x8a\xf0\x14\x90\x84\x70\x4e\x71\xd3\xa3\x2b\x39\x23\x25\x21\x44\x12\x87\xf3\x35\x6c\x0e\x03\x43\xe2\x39\xd1\x31\x24\x6f\xae\x3e\xec\x8d\x82\xc4\x73\xb2\x0b\x02\x72\xfd\x83\xff\xc4\x91\x74\x62\x24\xdf\xa0\x2c\x9d\xee\xe3\x39\xe9\xdd\x24\x57\x3e\x5f\x5f\x5a\xcf\xf0\x5f\x8a\xb0\x6d\xe6\x75\x36\x45\xef\xf2\xe9\x56\xf5\xfd\x63\x7a\xfd\x36\xbb\xdc\xc1\x11\x14\x4b\xc6\x38\x86\xdb\xbc\xc5\x5e\x46\xb1\x5d\x94\x50\x0d\xf1\xf4\x31\x42\x35\x4a\x87\x10\xb6\x6f\xb1\x4d\x40\xb0\xfc\xd7\x0b\xae\x28\xf6\x01\x7d\xe2\x92\x4c\x88\x8f\xeb\x87\x25\x47\xf4\x9c\xc6\xc9\x96\x21\x02\x3a\x69\x0e\x74\x1c\x59\xff\xea\xc0\x16\x1f\xa3\x2f\x5b\x3c\xa5\x1d\x52\xf5\xb9\x5b\xd6\xac\x97\xc8\xd8\x7b\xa3\x22\x70\x03\x74\xb2\xac\xde\x59\xb9\xd5\x3c\x69\x95\xc4\xe9\x4e\xc5\x69\xa7\x34\x7c\x79\x9f\xd1\xc2\xf7\xcf\x4a\x11\xab\xdf\x89\x66\x9b\xb9\xbc\xed\xd5\xf3\x81\x49\x10\x58\x73\xb6\xe8\x96\xcb\xca\xbb\x1d\x58\x2e\x25\xa9\xca\xeb\x83\x94\xde\x3e\xe0\x82\x28\x7b\x97\xad\x80\xb2\x67\x1d\x9a\xf2\x97\x7c\xea\xa6\xfa\xb2\x19\x25\x0c\x58\x1c\x1e\xe7\x9a\xb8\xe4\xd3\xf2\x5a\xa0\x7c\x7a\xc8\x35\xa0\xbc\xc9\xe6\xbe\xf2\xe4\x05\x73\xbe\x95\x13\xf6\x4d\x07\x8b\xc3\xb1\xaa\xd3\xd3\x6d\x87\xf2\x27\x53\xba\xb4\xc5\x28\x3b\x7e\x99\x5e\xdd\x70\x7f\xb1\x85\x45\x5a\xfa\x71\xd0\x4f\xcd\x06\xfd\x99\x0c\xe9\xe8\x2c\xaf\xe9\xff\x1f\x00\x00\xff\xff\xad\x7e\x4c\x00\xc9\xc5\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 50633, mode: os.FileMode(436), modTime: time.Unix(1484586736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x3e\x14\xc5\xdf\xfb\x57\x58\x7e\xfd\x7e\x1b\xaf\x3f\x46\xbb\xa9\xa9\xc4\x60\x94\xc2\xf8\x31\x28\x20\xf6\xe6\x3a\x37\x89\x43\x6c\x07\xdf\x9b\xa6\x59\xd5\xff\x7d\x6a\xca\x28\x42\x43\xea\x5b\xce\xb5\x7c\x72\x3e\x3e\xba\xab\x55\x04\xb1\xb6\xc0\x78\x0a\x32\x02\xcf\xd7\xeb\xd6\x68\xf3\x39\x6e\x31\xc6\xd8\xc8\x00\x49\xa6\x52\xe9\x11\x28\xe4\x77\xb3\x93\xf6\x90\xbf\x3d\xb2\xd2\x40\xc8\x17\x1a\xaa\xc2\x79\xe2\x4c\x39\x4b\x60\x29\xe4\x95\x8e\x28\x0d\x23\x58\x68\x05\xed\x46\xfc\xcf\xb4\xd5\xa4\x65\xde\x46\x25\x73\x08\x3b\x7c\xdc\xda\x3a\x91\xa6\x1c\xc6\x17\xf5\xdc\xd1\x48\x6c\xc5\xcb\x49\xae\xed\x13\xf3\x90\x87\x1c\xa9\xce\x01\x53\x00\xe2\x2c\xf5\x10\x87\x3c\x25\x2a\xf0\xab\x10\x46\x2e\x55\x64\x83\xb9\x73\x84\xe4\x65\xb1\x11\xca\x19\xf1\x3a\x10\xbd\xa0\x17\x0c\x84\x42\xdc\xcd\x02\xa3\x6d\xa0\x10\x39\xd3\x96\x20\xf1\x9a\xea\x90\x63\x2a\x7b\xc3\x7e\xfb\xdb\xfd\xa3\xd6\xb7\xd3\x13\x38\xef\x44\x13\x73\x76\x73\xf8\x54\xab\xf2\xf4\xf0\xf4\x26\xe9\x75\xaf\xcc\x9d\xaa\xaa\x81\xb3\xbd\x9b\xc7\x28\xe9\xdf\xcb\xff\xae\xcd\xed\x0c\x7f\x8b\xf3\x83\xe1\x62\x1e\x7d\xcf\xd2\x7e\xc9\x99\xf2\x0e\xd1\x79\x9d\x68\x1b\x72\x69\x9d\xad\x8d\x2b\xf1\xef\xc3\xed\x03\xa5\x22\x9b\x61\xa0\x72\x57\x46\x71\x2e\x3d\x34\x44\x32\x93\x4b\x91\xeb\x39\x8a\xd8\x59\x6a\xcb\x0a\xd0\x19\x10\xfd\xe0\x20\xe8\x35\x78\x6f\xc7\xaf\x84\x7b\xfc\x55\x48\x44\x20\x6c\x3c\x54\x89\xe4\xcc\xcb\xcd\xed\x55\x54\x5e\x17\xc4\xd0\xab\x5d\xc0\x4d\x96\x20\x71\x2e\xc9\x41\x16\x1a\xdf\xe5\xcb\x9e\x4b\xf0\xb5\xe8\x04\x9d\x6e\xd0\x7f\x51\x4d\xa0\x0c\xf9\x78\x24\xb6\x86\xe3\x8f\xdd\xf7\xed\x34\x7b\x5f\x69\xf6\xcf\x46\x67\xea\xf3\xf4\xa7\x9e\x7f\xea\x0e\x9e\x17\x75\x76\x7b\x11\x9f\x66\x57\x17\xf2\xc7\x53\x5c\x3e\xdc\x2f\x7f\x2d\xef\xae\xed\xd1\xd9\xe1\x20\xef\x9a\xa3\x87\xcb\x69\x31\xf9\x62\x26\x47\xc7\xc3\x6a\x72\x39\x55\xd7\xc7\x83\xd9\x52\x7e\xdc\xe8\x8e\xe5\x63\x98\x22\x97\x14\x3b\x6f\x02\xaa\x34\x11\xf8\x86\xa4\xd2\x51\x02\x84\x4d\xe0\xd7\xfd\x2a\x29\xde\xec\xd7\xce\x74\x24\xb6\xbb\xb8\x5a\x81\x8d\xd6\xeb\xd6\x9f\x00\x00\x00\xff\xff\x0f\xae\x36\x4f\xaf\x03\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 943, mode: os.FileMode(436), modTime: time.Unix(1484470487, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x8e\xdb\x36\x10\xbe\xef\x53\x4c\xd9\x1c\x5a\x20\xb2\x90\x04\xe8\x21\x90\x05\xa4\x49\xd0\x06\x48\xd2\x20\x4d\x0b\xf4\x38\x12\xc7\x12\xb3\x14\x47\x25\x69\x6f\x5d\xc1\xef\x5e\x50\xb2\xbd\x96\x2d\xc9\x6b\x27\x6d\x7d\xb0\x65\xcd\xdf\xc7\xe1\xcc\x37\x94\x9a\x46\xd2\x42\x19\x02\xa1\x8c\xa4\xbf\xc4\x66\x73\x93\x7c\xf3\xea\x97\x97\x9f\xfe\xf8\xf0\x1a\x4a\x5f\xe9\xf4\x26\x09\x3f\xa0\xd1\x14\x73\x41\x46\xa4\x37\x4d\xe3\xa9\xaa\x35\x7a\x02\x51\x12\x4a\xb2\x02\x66\xc1\x30\x63\xb9\x4e\x6f\x00\x00\x12\xa9\x56\x90\x6b\x74\x6e\x2e\x72\x36\x1e\x95\x21\x2b\x3a\x59\xf8\x1c\xba\x30\xb8\xca\x70\xeb\x62\xaf\x70\xe8\xe0\xf3\xb2\xca\xd8\x5b\x36\x07\x0e\x5a\x9d\xf2\x49\xfa\x6e\x9d\xb1\x4f\xe2\xf2\xc9\xb1\xe8\xe9\xce\x5a\x13\x4a\x91\xe2\xd2\x73\x85\x5e\xe5\xa8\xf5\x1a\x72\xd6\x9a\x72\x0f\x68\x24\x64\x96\x51\xe6\xe8\xc2\xbf\x35\xdc\x2a\x23\x1d\xf0\x02\x94\x59\xb0\x0d\x16\x6c\x60\xc1\x16\xd6\xbc\x4c\xe2\xf2\x69\x3f\x4c\xd3\xa8\x05\xcc\x7e\x64\xff\x1e\x2b\xda\x6c\xfa\x10\x10\x4a\x4b\x8b\xb9\x28\xbd\xaf\xdd\xf3\x38\xf6\x77\xca\x7b\xb2\xb3\x9c\xab\xb8\x69\xee\xad\xc4\x0e\x69\xe6\x0d\x64\xde\x44\xba\x68\x7f\x1c\xe7\x0a\x75\xa4\x72\xee\x6e\x6f\xed\x45\x9a\xb8\x1a\xcd\xce\x68\x81\xb0\xc0\x9d\x2c\x5c\x62\xee\xd5\x8a\x44\x9a\xc4\x41\x2d\x4d\x62\x3c\xc6\x4c\xda\x9d\x05\x8b\x75\xed\x66\x07\x88\xbf\x32\xc8\x1a\x9d\x3b\x87\xd2\xc8\xf3\x19\x25\xf2\x92\xf2\xdb\x7f\x11\xe9\x3e\xc6\x38\xd6\x13\x5c\x39\x1b\xc7\x9a\x66\x92\x56\xa4\xb9\x26\xeb\x66\x05\x73\xa1\xa9\xdd\x7b\xac\x95\x0b\x5f\xf1\x4a\x39\xc5\x66\x2b\x0a\x77\x5b\xf1\x9f\x4b\xf6\xe8\x1e\xba\x8a\xce\x78\x70\x11\x9d\xe8\x21\x25\x71\xb2\x80\x42\xf9\x72\x99\xb5\x70\xd4\x1d\x7a\xbc\xc5\xb8\x0a\x8d\xf6\x60\x54\xad\xfd\x30\xaa\x56\x74\x0e\x55\x12\x4b\xb5\x4a\x0f\xe8\x60\xa9\x77\x6e\x0c\xae\xc0\xe0\x2a\xaa\x95\xd6\xae\xbd\xfa\xbc\x74\x5e\x2d\x14\xc9\x1e\x3f\x24\x5a\x81\x65\x4d\x73\x51\x5b\x72\x64\x7c\xdb\xcb\xfb\x15\xec\xa3\x23\x48\xf4\x18\x79\x2e\x8a\xa0\xec\x31\x13\xdb\x6c\x7c\x5b\x72\x45\x22\xfd\x99\x2b\x0a\xe0\x92\x58\xab\xc3\x00\x4d\x63\xd1\x14\x04\x8f\x6e\x69\xfd\x18\x1e\xad\x50\xc3\xf3\x39\xcc\x5e\x76\xdc\xa2\xd8\xbc\xc3\xba\x57\xc1\x23\x88\x26\x21\x34\x4d\x70\xbf\xd9\x88\x74\x77\x35\x0c\xa5\xdf\x2d\x49\xbc\xd4\xe9\x30\x99\x7a\xcc\xa2\xc0\xc8\x64\xfc\x31\x9d\x06\x2d\x25\xe7\xa2\x5d\xf6\xa1\x7e\x8d\x26\xd4\x91\x24\x50\x06\x76\x89\xeb\xd9\x1e\x47\x09\x16\x1a\xda\xef\x48\x86\x2c\xd9\x01\x83\x41\xa3\x28\x4c\x14\x65\x8a\x11\xfd\xd6\xa6\x7c\xd6\x37\xf1\xca\xeb\x6e\x2b\xbb\xac\xc5\x9a\x8b\x58\xa4\xaf\xad\x65\x0b\x6f\xb9\xe8\x52\x56\x3e\x1b\x81\xd0\xd5\xda\x90\xa8\xe3\xf7\xb7\x5c\x1c\x31\xd1\xf4\x0a\xc2\x18\x14\x69\x52\x5b\x4a\x93\x9c\x25\xa5\x4d\xd3\xf9\x48\xe2\xf6\x6f\x12\xb7\xa2\xa9\xb0\x03\x14\x7d\x2e\xde\x38\x40\xaa\xd2\xf7\xec\x4b\x65\x0a\xf0\x0c\xae\xe4\xbb\x24\xa6\xea\x8a\x64\x9c\x52\xf2\x84\xc9\x58\x39\x84\xc1\xfa\x5f\x16\xc3\xf4\xb0\x48\x3f\x6d\xa9\xfe\xbe\x6d\xdd\xd5\xe5\x72\xf1\xd6\x74\xf5\x35\xce\x18\x47\xee\x43\x53\x8f\x09\xe1\x1a\x46\x1a\x88\xd1\x27\x96\x11\xa5\x5d\x6e\x9b\x26\x04\x39\x66\xa7\xe9\x00\xf1\xb9\x08\x63\x75\x76\xef\x61\x2a\x0f\x93\xbd\x03\x97\xb6\xc3\x39\x3c\x63\xb5\xff\xbf\xb6\x44\x57\x55\x6f\x2a\x2c\xe8\x85\x41\xbd\x76\xca\xbd\x42\x3f\x99\x93\x91\x26\xfa\xa9\x3b\x42\xfc\xde\x1e\x54\xe0\xc5\x87\x37\xf0\x91\xdc\x52\x7b\xf8\xae\x69\x86\x02\x7c\x3f\xde\x36\xf0\xa0\xbd\xb9\x10\xc7\xd9\x70\x97\x6e\x1c\x5c\xdf\xc5\x6d\x3a\x7e\xfb\xf8\xf6\x81\xa3\xc2\xf2\xdd\x84\xcb\x63\xed\x9c\x75\x54\xc9\xe8\x87\x33\x26\xd0\x6f\xce\x0e\xd3\xaf\xbc\xb4\x79\x78\xce\x48\x13\x55\x15\xe0\x6c\x7e\x2f\x6b\xf1\xee\x67\xbd\xaa\x8a\xc8\x92\xab\xd9\xb4\x87\xf3\xc7\x80\xda\xcf\x45\xab\x08\x18\x36\xfa\x6f\x92\x90\xad\xe1\x64\x3b\xc4\xe9\x99\xf2\x04\xd6\x78\xc2\xbf\x74\xc1\xbd\x41\xdb\xab\xca\xae\x4a\x8e\x06\xef\x97\xc0\xbc\x7a\x68\x5f\x42\x3a\x5f\x87\x70\x06\x6e\x5d\x31\x1f\xf6\x87\xc2\xfd\x41\x74\xf0\x60\x38\x74\x1c\xc4\xbd\x66\x37\x62\xa3\xc2\x2a\x29\x4e\x26\xc7\xe9\xd3\xc8\x10\xf0\xe3\xf3\xed\xfd\xe3\xc1\xf6\x3a\x89\xbb\xb7\x0f\x49\xdc\xbd\xb5\xd8\x99\xfc\x13\x00\x00\xff\xff\x9b\xbd\xff\xb2\xe1\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4321, mode: os.FileMode(436), modTime: time.Unix(1484568987, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x3d\x6f\xc2\x30\x10\x86\xf7\xfc\x8a\xab\x97\x4e\x10\xc1\x6c\xbc\xd0\x6e\xa8\xed\xd0\xa5\xa3\x13\x1f\xb1\x5b\xe7\x2e\x72\x0c\x14\x45\xfc\xf7\x2a\x98\x8f\xc8\x25\x43\x6c\xeb\xbd\xe7\xbd\x0f\xdd\x30\x18\xdc\x3a\x42\x10\x9e\x1b\x71\x3a\x15\xf2\xe9\xe5\x7d\xfd\xf9\xf5\xf1\x0a\x36\xb6\x5e\x15\x72\x3c\xc0\x6b\x6a\x56\x02\x49\xa8\x62\x18\x22\xb6\x9d\xd7\x11\x41\x58\xd4\x06\x83\x80\xf9\x08\x56\x6c\x8e\xaa\x00\x00\x90\xc6\xed\xa1\xf6\xba\xef\x57\xa2\x66\x8a\xda\x11\x06\x91\xb4\xf1\x9b\x5a\x90\xde\x57\xfa\x62\x71\xd5\xa7\xfc\xf7\xae\xad\x38\x06\xa6\x09\x7f\x8e\xb1\x0b\xb5\xe1\xa6\x97\xa5\x5d\xe4\xca\xf2\x0a\x7b\xd4\x46\xa8\xb5\xc5\xfa\x07\x8e\xbc\x0b\xc0\x07\x82\x8a\xe3\x73\x0f\x3e\xb1\xcb\x3b\x2b\x4b\xe3\xf6\xea\x61\x11\x9d\x26\xf4\x70\xfe\xcf\xba\xe0\x5a\x1d\x8e\x79\x39\x79\xf4\x6c\x1c\x47\x16\x94\x7a\x77\x5b\x98\x6f\xb8\x99\xf4\x7b\x33\xe9\x02\xaa\x61\x48\xaa\x2c\xc7\xd7\x03\x1e\x7d\x8f\x8f\x60\xbb\x98\xb6\x0d\x11\x7f\xe3\xac\x46\x8a\x18\xd2\xfd\x56\xf8\x1b\x47\xeb\xa8\x81\xc8\xd0\x5b\x3e\xfc\x9f\xe0\x25\x0f\x99\x2c\x4d\x3e\xa1\xfb\xf3\x72\x95\x65\x5a\x02\x59\xa6\xe5\xb9\x9a\xfc\x05\x00\x00\xff\xff\xbc\x4b\x6b\x86\x66\x02\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 614, mode: os.FileMode(436), modTime: time.Unix(1484568987, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\xcf\x6e\x9c\x30\x10\xc6\xef\x3c\xc5\xc8\x3d\x53\xbf\x00\x70\xe9\x35\xc9\xa5\x4f\x30\xe0\x31\x19\xd5\x19\x53\xdb\xa0\x54\x28\xef\x5e\xf1\x6f\x43\x58\xb4\x5a\xa9\x52\xa5\x3d\x81\x3f\xbe\x99\xf9\xfc\xb3\x19\x47\x43\x96\x85\x40\x09\x0e\x35\x06\xf5\xf1\x91\x15\x82\x03\x34\x0e\x63\x2c\x57\x15\x96\x47\x6e\xc8\x62\xef\xd2\xb6\x64\x19\x28\x44\xda\x96\x96\xdf\xc9\xe4\xc9\x77\xaa\xca\x00\x00\x0a\xc3\x97\x3e\x8d\x97\x84\x2c\x14\x72\xeb\x7a\x36\xab\xe3\xe8\x5a\x1b\xbd\x12\x1a\x0a\x3b\xcf\xec\xab\xfb\x94\xbc\x1c\xac\xc9\xb7\xad\x23\x68\xbc\x73\xd8\x45\x32\x0a\x0c\x26\x5c\xe5\x69\xec\xa2\x6f\x32\x86\x96\x52\xa9\xbe\x2d\xd5\xcf\x24\x7d\x54\x80\x81\x31\xa7\xf7\x0e\xc5\x90\x29\x95\x45\x17\xe9\x30\x7c\x0e\x10\x3b\xbc\x8c\xe7\xc6\x4b\x3e\xf1\xaa\x0a\x3d\xe9\xff\xd3\x5e\xe8\x05\xc5\x41\xc5\x03\x9a\x3a\xa0\x18\x05\xaf\x81\x6c\xa9\xb4\xaa\x9e\xff\xd4\x3e\x15\x1a\x77\xe8\xb5\xe1\xe1\xe6\x49\x6c\xfc\xe0\x13\x24\x9b\xed\xeb\x82\xef\x90\xa2\x77\xbb\x16\xdb\xcd\x10\x1c\x4e\x80\x8e\x23\x5b\xa0\xdf\xf0\xfd\x65\x76\xbd\xe0\x1b\x81\xfa\xe1\xc5\x72\x3b\x5d\xc3\x2b\x42\x8e\x77\xad\x73\x4e\xf4\x06\xd8\x24\x1e\xce\x0e\x6b\x1c\xc9\x45\xba\xaf\xcb\x79\xb9\x98\x93\xea\x2b\xd0\xb9\x63\xf9\x75\x81\xdc\xcc\xe1\xb5\xaa\x96\x5d\x7c\x81\xfd\x09\xdd\x71\x95\xdd\x07\xe3\xc9\x3f\x2a\x09\xe7\x27\x0c\x4f\xfe\xdf\x19\xfc\x4c\x98\xfa\xf8\xa0\x18\xe2\x1c\x5e\xab\x6a\xd9\xc5\x0d\x18\x5f\x95\xde\x9d\xfe\xa5\xeb\x6b\xa1\x05\x87\x2a\xdb\x32\xfd\x0d\x00\x00\xff\xff\x0c\x54\x48\x91\xc4\x05\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1476, mode: os.FileMode(436), modTime: time.Unix(1484472834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x41\x8f\xda\x3e\x10\xc5\xef\x7c\x8a\xf9\xe7\xfe\xdf\x68\xf7\x58\x79\x23\x55\xd0\x6e\x55\x15\x15\x09\x7a\xe8\xd1\x89\x07\x70\xd7\xd8\x91\x67\x92\x0a\xa1\xfd\xee\x95\xe3\x44\xa4\x2c\x74\xcb\xc2\xf6\x94\xbd\xac\xc2\x9b\x79\x6f\xec\x9f\x11\xf1\x6e\xa7\x70\xa9\x2d\x42\x42\x2c\xb9\xa2\xe4\xe9\x69\x24\xfe\x9b\x7c\x1d\x2f\xbe\xcf\x3e\xc0\x9a\x37\x26\x1b\x89\xf0\x0f\x8c\xb4\xab\xfb\x04\x6d\x92\x8d\x76\x3b\xc6\x4d\x69\x24\x23\x24\x6b\x94\x0a\x7d\x02\x37\xa1\x31\x77\x6a\x9b\x8d\x00\x00\x84\xd2\x35\x14\x46\x12\xdd\x27\x85\xb3\x2c\xb5\x45\x9f\x44\x2d\xfc\xf5\x2d\xac\xac\x73\xd9\x5a\x74\x7a\xbf\xff\x47\xb5\xc9\x1d\x7b\x67\x7b\xfd\x4d\xcd\xfa\x36\x9b\x79\x57\x20\x11\xcc\x9b\xe9\x45\xba\xbe\x3d\xac\xb9\xeb\x6c\x0c\x4a\x95\x64\xe3\x35\x16\x8f\x50\xb6\x6d\x71\xd1\x48\x20\xad\x02\x96\x8f\x08\x1b\x94\x54\x79\x24\xd0\x4b\x90\x76\x1b\x2a\x73\x83\x9b\x60\x7d\xb7\xb7\x16\xa9\xd2\x75\x76\x74\x5a\x96\xb9\xc1\xff\x3d\x52\xe9\x2c\xe9\x1a\x0f\x87\x6e\xf4\xdf\x8a\x21\xb6\x10\x7b\x5d\xa2\x6a\x9f\x72\xe7\x15\x7a\x54\x07\xed\xd1\x22\x6c\xfa\xf3\xcf\xa3\xe6\x8f\x0b\x51\x54\xdd\x86\x89\x94\x4f\x38\x74\x85\xdd\x8e\x9e\xaa\x13\xe9\xb1\x28\x91\x9e\x18\x4e\xf0\xfe\x70\x9c\x3d\xf4\xe2\xa7\x66\x46\x0f\x13\xed\xb1\x60\x98\x22\x91\x5c\x21\x7c\xd1\xc4\x68\xd1\xbf\xbc\x98\x93\x22\x34\x67\x51\x2f\xe1\xa6\xcd\x88\x9e\x93\x69\x5c\x7e\xef\x44\x1e\xb5\xa6\x52\x5a\x20\xde\x1a\x0c\xc7\xdc\x38\xff\x2e\x37\x15\x26\xd9\xfb\x82\x75\x8d\x22\x0d\xfa\x4b\xe1\x68\x08\xcf\xcf\x69\x8e\xc6\x9c\x5d\xf9\x97\x21\x56\xfd\x21\xe3\x5c\xca\x70\x0e\xb4\x6f\x84\xfe\x0d\x51\x05\x7b\x1a\x68\x75\xca\xa5\xb4\x66\xe8\xb5\x53\xba\x80\xcf\x2e\xbf\x0a\xac\x88\xa6\x63\x36\x80\xea\x94\xd7\x82\x1a\x3b\xbb\xd4\x2b\xf8\xa8\x0d\xc2\xd4\x59\xcd\xce\x6b\xbb\xba\x26\xaa\xd6\x35\x06\x0d\xc0\x3a\xe5\xd2\x6f\xd6\xd8\xa3\x42\xcb\x5a\x9a\xb7\xe5\xd6\xe6\x85\xb8\x01\xdb\xeb\xb1\x3d\x38\xb7\x32\x08\x63\xe3\x2a\xf5\xcf\xd8\x3d\x34\x71\x03\xba\xcb\xd0\x7d\x5a\x2c\x66\xd7\x7d\xe3\x68\x29\xcd\xd1\xd7\xc3\x6f\xd8\x5e\x39\x7e\x01\x78\xfe\xa2\x2f\xd2\xe6\x52\x73\xfa\xfe\x54\x99\x6c\xd4\x13\xc3\x63\xaf\x4c\xa4\xd1\x52\xa4\xf1\x42\xda\xcd\xfc\x2b\x00\x00\xff\xff\x26\xae\xe4\xfa\xbd\x0e\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3773, mode: os.FileMode(436), modTime: time.Unix(1484568988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

