// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x5d\x6f\x23\xb7\xd5\xc7\xef\xf7\x53\xf0\x99\x27\x88\x13\x24\x1e\xb5\x49\xd1\x8b\xac\x24\x20\xdd\xcd\x62\xb7\xd0\x6e\x5c\xdb\x5b\xa0\x28\x0a\x81\xd2\x1c\x8d\x98\xa5\x48\x95\x43\xc9\x36\x0c\x7f\xf7\x82\xf3\xa6\x79\x21\x39\x23\x59\x2f\x23\x2f\x7d\x91\xb5\x24\x1e\xce\xe1\xf9\x1f\x9e\x21\xa9\xf9\xc5\xfd\xff\x7b\xfb\xfb\x9b\xdb\x7f\x5d\xfd\x86\xe6\x72\x41\x87\xaf\xfa\xea\x1f\x44\x31\x0b\x07\x1e\x30\x6f\xf8\xea\xf1\x51\xc2\x62\x49\xb1\x04\xe4\xcd\x01\x07\x20\x3c\xe4\x3f\x3d\xbd\xea\x4f\x78\xf0\x30\x7c\x85\x10\x42\xfd\x68\x2a\xc8\x52\x26\x2f\xd4\xcf\x6c\xc5\xa6\x92\x70\x86\x02\xa0\x20\xe1\x9a\xdf\x7d\x37\x59\x49\xc9\xd9\x8f\x68\xc1\x03\x4c\xbf\x47\x8f\x79\x5b\xf5\xb3\xc6\x02\x49\x81\x06\x28\x69\xe5\x2f\xb1\x00\x26\x3f\xf1\x00\x0a\xbf\xbe\x2e\x99\x90\x19\xfa\x4e\x0a\x7f\x4a\x71\x14\x7d\xc2\x0b\x40\x83\xc1\x00\x5d\x24\xd7\x0b\x2e\xaa\x17\x88\x9d\xe2\x02\x7d\xa7\xae\x44\xd0\x00\xfd\xe9\x35\x22\xa8\x8f\x54\x0f\x73\x42\x03\xd5\x7f\xe4\x53\x60\xa1\x9c\xbf\x46\xe4\x87\x1f\x74\x1d\x64\x9e\xc6\x16\x68\x50\x36\xfe\x37\xf9\x8f\xd6\x40\xf9\x19\xb7\xf2\xe5\xc3\x32\xf5\x72\x4e\x82\x00\xd8\x05\xfa\xf6\xdb\xa4\x2f\x9f\xf1\x00\x36\x83\xf8\xf0\xe9\xea\xf3\xad\x76\x08\xd9\x4f\x62\xb5\xc6\x74\x05\x68\x80\x2e\x66\x98\x46\x70\xf1\xda\xd8\xbc\x1c\x27\x74\x61\x69\x9a\x0a\x40\x18\x03\xf1\xfe\xf6\xe3\x48\x35\x7f\x1b\x07\xd5\x60\xf4\x54\x7b\xb7\xfc\xce\x13\x02\x1a\xc1\x57\x25\x87\x14\xab\x6d\xd4\xc8\x72\x76\x3b\x51\xae\x61\x0d\x42\xee\x2a\xca\xab\xf2\x6f\xfd\x5e\x71\x06\xf7\x03\xb2\x46\xb1\x8b\x03\x6f\xca\x99\xc4\x84\x81\xf0\x36\xb3\xbb\x58\x11\x18\x5e\x4f\x70\x5a\x11\xf2\x06\xfd\xf9\x4f\xc3\x37\x9c\xcd\x48\xd8\xef\xcd\x7f\x2a\x1a\x92\x19\xf2\x3f\x42\x14\xe1\x10\x9e\x36\x4e\x14\x2f\x88\x29\x08\x89\xe2\xff\x5e\x06\x98\x85\xea\xca\x8f\x8f\x1b\xa3\x7e\x2f\x20\xeb\x62\x97\xc0\x82\xd2\xb5\x67\x5c\x2c\x10\x09\x06\x1e\x5f\x83\xb8\x13\x44\x82\x87\x70\x5c\x8d\x06\x5e\x6f\x1a\x7b\xd5\xf3\xd0\x02\xe4\x9c\x07\x03\x6f\xc9\x23\xe9\x21\x60\x53\x95\x0e\x03\x6f\xb1\xa2\x92\x2c\xb1\x90\x3d\xd5\xcd\x65\x80\x25\xf6\x86\xfd\xf8\xc5\xe6\x9a\x7d\xc2\x96\x2b\xa9\x12\x78\x51\xba\x4a\xd2\x45\xb4\x9a\x2c\x88\xf4\x50\x9c\x0e\x03\xef\x06\xaf\xc1\xcb\x06\x37\x91\x0c\x4d\x24\xbb\xa4\x61\xfc\xcf\x52\x90\x05\x16\x0f\x1e\x8a\xe4\x03\x85\x81\x17\x90\x68\x49\xf1\xc3\x2f\x84\x51\xc2\xc0\x1b\x56\x47\x55\x1d\xc6\x8c\x50\x28\x8c\x25\x04\x69\xee\xaa\x28\x7f\x3a\x00\xad\xbf\x6f\xf9\x1d\xa3\x1c\x07\x4d\x3e\x17\xc2\x91\x86\x67\x3b\x67\x5b\x04\xfe\xd9\x63\xf9\xbc\xdc\x6e\x24\xb5\xfe\x94\xcf\x1e\x62\x78\xa1\x3c\x7c\x98\x70\xe9\x27\x83\x69\x76\xad\x1e\x94\xf9\xcf\xc3\xdb\x3b\x22\x25\x08\x74\x4b\x16\xa0\xda\x47\xfd\xde\xfc\xe7\xa1\x76\x1a\x48\x3c\xa1\x70\x29\x20\x5a\x72\x16\x91\x75\x6d\xd4\xf1\xe7\xa5\xc6\x28\x31\x89\xa4\x20\x4b\x08\xd2\x57\x13\x2e\x02\x10\x10\x54\xcc\x93\x2e\xd4\xdd\xbc\xfe\x7e\xf2\x99\xd0\x7f\x90\x7c\x18\x0c\xa3\xa9\x00\x60\x71\x64\xa2\x7e\x4f\x1a\xba\xc9\x5a\xc3\xfd\x94\xae\x02\x40\x02\x96\x94\xb4\x31\x20\x2c\x35\x90\x2d\x1a\x4f\xf9\x8a\xc9\xe6\x66\x5c\xce\x41\xb4\xe8\xce\xdc\xa2\xdf\xd3\x85\xa5\xdf\x33\x04\xb2\x2f\x37\x2b\xa4\xea\xcf\xe3\xa3\x50\xb5\x0d\x7d\x43\x58\x00\xf7\x3f\xa2\x6f\x64\x9a\x12\xe8\x97\x01\xf2\x93\xda\xe9\xa7\xe9\xe2\xe7\xe9\xf2\x54\xaf\xeb\xa8\x51\x2d\x6b\xb1\x4a\x6e\x7d\x59\x8a\xcb\xf4\x82\x99\x33\x91\x9f\xde\x9b\xf2\x19\x15\xaf\x34\xbc\x9e\x3d\x82\xc6\x0f\x93\x91\x53\x12\xc9\x5b\xb8\x97\x13\x7e\xbf\x19\xb7\x7f\x13\x67\x94\xba\x27\x46\x48\xe3\x48\x92\x70\xe3\x38\xe1\x3c\x43\x1c\x50\xa2\x46\x83\xbe\x0d\xde\x4d\x38\xa7\x37\x40\x61\x5a\xf1\xef\xb7\x24\x87\xaf\x93\x14\xd6\xb9\x98\x66\xf9\x38\xcd\xf2\x93\x78\xf9\x21\x99\x38\xd7\x52\xeb\x61\x3a\xad\xc6\x42\x1e\xd6\x3b\x99\xa8\xfb\xfb\xec\x03\x93\x57\x52\x14\xfc\x7b\xa3\xe6\xaa\xce\xb5\x78\x12\x1f\xd0\xa9\x7e\xb2\x86\x4a\xd3\x3e\x79\x51\xbb\x31\x10\x36\xe3\x1e\x52\xf7\x9e\x4b\xc9\xc3\x50\x15\xf8\x78\xbb\x92\xbd\x87\x45\x08\x72\xe0\xfd\x7f\xea\xfe\x65\xee\xfe\xe5\x8c\x50\x09\x62\xfc\xf8\x98\x4c\xe8\xa7\x27\x4d\xc1\xad\xfe\x04\x20\x31\xa1\x11\x9a\x83\x00\xbb\xef\xbd\xc4\x5f\xcb\xf0\x8f\x10\x9c\x74\x31\x86\x38\x9b\x52\x32\xfd\x32\xf0\x36\x7b\x3b\x39\x27\xd1\x8f\xe8\xa2\x45\x58\x2e\xbe\xf7\x86\xc9\x76\xe2\x39\x83\xd2\x17\x62\x54\x58\x0e\xea\xc3\xd0\x70\x53\xb3\xc7\x48\xbb\xa8\xc9\x87\xda\xc3\x41\x50\x59\xdc\x34\x67\x80\x6d\xed\xf2\x09\xee\x6a\x12\x64\x2b\x16\x4b\xfd\x45\x85\xb5\x87\xf9\xf3\xdd\xef\x81\x5d\x69\x61\xbc\x17\xd7\xef\xb9\xfd\x5e\xbc\x16\x2a\xae\xcd\xe2\x2d\x44\x61\x0f\xb1\x87\x9b\x71\x71\xf1\x16\x17\x0d\x34\xc3\x01\x78\xf1\x4e\xa4\x4d\xbd\x50\x0b\xb6\xf8\xf7\x81\x77\xf9\x67\x0f\x09\x9e\x2c\x2f\x31\xe5\xa1\x87\xb0\x20\xf8\x92\xe2\x09\x50\x0a\xc1\xe4\xa1\x55\x8f\x97\x92\x48\x5a\x5d\x37\x6a\x3d\xbd\xcc\x2e\x93\x5e\x94\x4f\x57\x0b\x60\xa6\x04\xae\x9b\xab\x3d\xa2\xb9\xbd\xde\x26\x3d\x49\x7a\x46\x5d\x9a\x52\x1e\x41\x5a\x99\x03\x12\x2d\x48\xde\xb9\x37\xfc\x56\xc5\x25\x7a\xdd\x5c\x63\x50\xb2\x32\x2f\xfb\x96\x04\xae\xad\x72\x59\x9c\xdf\x26\xe5\xbc\xbc\xa4\xaf\x5d\xab\xbc\x7b\x6d\x8e\x93\x4a\xe7\xa6\x28\xcd\x7f\x1e\xbe\x8b\xbd\xb2\x5f\xbb\x7a\x81\x86\x2d\x86\xd6\xfc\xf9\xdb\x0e\x7d\xb7\xe6\xad\x88\xbe\xbd\xa5\x92\xeb\x0d\x82\xa1\x5a\x3a\xda\x2b\x8e\xc9\x32\xae\xc8\xdb\x99\x9a\xef\x50\x9a\x96\xed\x07\x6f\xdb\x52\xe8\xdb\xef\x10\xa8\x25\x56\x29\xcf\x1a\xb6\x4a\x26\xeb\xad\x0c\x90\x65\x43\x90\xa4\xb4\x7f\x95\x7a\xa3\x5b\x34\x26\x73\xd1\xcf\x1c\xb6\x2d\x1f\xb5\xee\x1e\x48\x52\xb4\x6b\xe4\x57\x82\xa2\x6e\x45\xff\xf3\xf5\xa8\x85\x00\x2b\x41\xc7\x2f\x46\x84\x39\x8e\xd0\x02\x02\x82\x8f\xa6\x80\x69\x33\x97\x6a\xf0\x1e\x47\x1f\x95\x3f\x16\x01\xe6\x38\x1a\xc7\x3e\xbf\x88\xe8\xaf\x04\xed\x50\xec\x3f\x5f\x8f\x1a\x22\xbf\x12\xf4\xec\xe3\x2e\x40\xde\x01\x48\x08\xba\x12\xf9\xeb\xcc\x21\x4b\xf0\x73\xa7\xcf\x3e\xfc\x33\xbc\xe6\x82\x48\x40\x72\x2e\x20\x9a\x73\x7a\x3c\x1d\xcc\x87\x35\xa9\x12\xef\x52\xdf\x6e\x33\xd7\x2c\x8a\x64\xe3\x18\xe7\xe3\x38\x7b\x69\xf2\x24\xeb\xa2\x36\xf9\x2c\x69\x23\x4e\x3e\x92\x17\xa4\x0e\xc5\x2c\x3c\x92\x1c\xf6\x93\x74\x25\x95\xf9\x1c\x3d\x55\x40\x79\x9b\x9f\xf0\x3c\x3e\xd6\xe4\x1c\x61\x16\xb6\x3a\x3b\x2c\xf9\x75\xb8\x9d\x49\xbb\xdd\x46\xed\x80\x45\xdf\xc8\xba\xf3\x45\xa5\x8d\xac\xff\x4f\x12\x11\xce\xdc\x7e\xd6\x68\xe0\xf6\xb3\x2d\x0d\x54\x89\x98\xc0\xf1\x16\x94\xd6\xed\x54\x92\xd6\xfe\x48\x79\x64\x29\xd4\xeb\xa4\x59\xec\xf8\xd9\x57\xe8\x19\x9e\x02\x8a\xbf\x3b\x40\x94\x7c\x01\x4a\xe6\x9c\x1f\xeb\x0e\xba\x87\x92\x9d\x6a\xa1\x46\xe1\xc7\xa3\x18\x6f\x46\x61\x2b\xe5\xa9\xd4\xef\x94\xdd\xaf\xca\x6e\x94\x9b\x75\xa6\xc2\xa3\x67\x69\x3a\xa1\x2b\x21\x20\x38\x7b\x55\xd3\x71\xec\xa0\xeb\xdf\x12\xcb\x17\xa7\xac\x2a\xe0\x77\x80\xcf\x7f\xc2\x66\x03\xd9\x41\xdb\xf7\xa9\xe9\x8b\x13\xf7\x0f\xfe\x70\xf6\xba\xfe\xc1\x1f\x76\x90\xf4\xef\xfc\xe1\x25\xa9\xa9\xa2\xd6\xa9\x65\x8d\xfa\xbc\x79\x55\x13\x8b\x7d\xee\x8b\x1a\x8a\x59\xb0\xc0\xe2\x4b\xa7\xe2\x3f\x4a\x9d\x6a\xb3\xb2\x4c\x5a\x9e\xbf\x0e\x3c\xe4\xdd\xd2\x80\x87\xbc\x45\xfc\x79\xc8\xbb\x12\xfb\x53\x6e\xf3\x47\x98\x85\x2b\x1c\x82\xdb\xe8\x1b\x0d\xdc\x46\xbf\xa5\x41\x30\x5c\x10\x86\x22\x60\x6a\xd2\x35\x3d\x10\x6c\xea\xe2\x39\x67\xb4\xef\x28\xc7\xf2\xaf\x7f\xd1\x9e\xd3\x66\x89\xee\x7f\x24\xec\x26\x73\xd1\x52\x27\x68\xd6\x7e\x41\xd8\x38\x1f\x53\x57\x4a\x06\xda\x59\x21\x7c\xdf\x7d\x85\xf0\xfd\x76\x0a\xe1\xfb\xee\x29\x74\x92\xa2\xfe\x6b\xfc\x70\xa4\xab\xe5\x46\x03\x57\xcb\x5b\x1a\xe4\xdf\xba\x1d\xad\x46\x4c\xe7\x30\xfd\x52\x5e\xd8\x25\xe9\x9c\x7d\xc5\xa6\x2b\x05\xc9\xd3\xc0\xd9\xf7\x6a\x5d\x99\xfb\xe8\xb9\x5f\x42\x77\x20\xe8\xd9\x77\xce\x96\xa8\x67\xde\x9e\x7f\xd8\x39\xa5\xfc\xae\x0b\x41\x8f\x1d\xb1\x85\x3c\x6e\x70\xf6\x01\x9f\x72\x4a\x21\x1e\xd1\xa9\x9f\xb2\x4b\x03\xff\x66\xe3\x90\x25\xfa\x05\xb7\xbb\x22\xc1\x51\x97\x19\x5b\x3f\x3b\x3d\xe3\x5c\x3e\xef\x19\xf3\x9c\x7d\x81\x19\x5e\x51\x69\x78\xda\xfc\x0d\xe5\x51\x2b\x9e\xc5\xe8\xbf\xe1\x23\xcd\xdb\x8d\xf8\x73\x01\x33\xcd\x8a\xe8\xd7\x82\x99\xbe\x08\x10\x34\x7f\x12\x4c\xc3\x9e\xe4\x82\x1e\x0b\x04\xcd\x9c\x39\x02\x08\x9a\x5d\x4a\x0f\x82\x6e\x1c\x39\x1a\x08\x5a\x7b\xf6\x2a\xf7\xb0\x02\x31\x6e\x7c\x3b\x4b\x88\x31\x77\xdf\x41\x8c\x45\x88\xd1\x12\x96\x97\x06\x31\xe6\x43\x75\x10\x63\xfb\x16\x07\x05\x10\x77\xb9\x09\xb4\x01\x10\x6d\x73\x7d\x37\x00\xd1\xd2\xa3\x03\x10\xf7\x08\x20\xb6\x88\xb3\x03\x10\xdd\xd9\xdf\xc6\xec\x8c\xcf\xfe\x4e\x8b\xc0\xe5\xcb\x3c\x23\x80\xb8\x59\xf0\x39\x00\xb1\xda\xc3\xbe\xa3\xaf\x05\x10\x6b\x02\x38\x00\x71\x63\xbe\x83\x02\x15\x14\xab\xaa\x41\x1d\x40\xac\x09\xe0\x00\xc4\xc3\xc5\xbe\x04\x20\x6a\x23\xef\x00\xc4\x03\x44\x5e\x03\x20\xd6\x82\xef\x00\xc4\x6a\x3f\x3b\xe8\x60\x3e\x68\x69\x06\x10\x6b\x8a\x38\x00\xd1\xdc\xd1\x21\xb4\xb1\x01\x88\xe6\xe9\xf2\x82\xd4\xe9\x34\x80\x58\x53\xa0\x0a\x20\x56\xe5\x74\x00\xa2\x03\x10\xdb\x19\xb8\xfd\x6c\x4b\x83\x93\x02\x88\xd5\xf9\xad\x07\x10\x6b\x65\xc2\x01\x88\xfa\xae\x4e\x51\xb2\xdb\x02\x88\x06\xa9\x1d\x80\xd8\xd8\xd9\xa9\x55\xb5\x03\x88\x36\x5d\x1d\x80\xd8\xd0\xdb\xa9\xa5\x6d\x00\x10\x6d\xda\x3a\x00\xd1\xd2\xd1\xa9\x75\x35\x03\x88\x36\x49\x1d\x80\x78\xd8\x65\x4d\x19\x40\x34\x09\xe8\x00\xc4\xc3\x2d\x2b\xab\x00\xa2\x79\x65\xe9\x00\xc4\x6d\x0c\x50\x7b\x0d\x4a\x00\xa2\x31\xfe\x0e\x40\x74\x00\x62\x3b\x03\xb7\xd1\x6f\x69\xd0\x29\x00\x51\x77\xb0\x67\x01\x10\xb5\x07\x85\x0e\x40\xd4\x75\x71\x78\x85\xb4\x00\xa2\x45\x21\x07\x20\x22\x07\x20\xb6\x32\x70\xb5\xbc\xa5\xc1\x29\x01\xc4\xbc\x30\x98\x00\xc4\x4d\x29\x70\x00\x62\xc1\x7a\xaf\x41\xaf\x03\x88\xb5\xa8\x3b\x00\x71\xef\x41\xaf\x00\x88\xf5\x90\x3b\x00\x71\xbf\x7b\x47\x1b\x80\x58\x8b\xbe\x03\x10\x1d\x80\xb8\x15\x80\x78\x03\x58\x4c\xe7\x67\xcc\x1f\xfe\x77\x05\xa2\xd5\x1f\xac\x14\x10\xad\x68\x02\xc1\x7c\x25\x9c\x62\x14\x6b\xab\x03\x54\x32\xd5\x8f\x05\x29\x46\xe9\xf5\x0e\xcf\x28\x26\x57\xf2\xff\x91\x64\x05\xaa\x7b\x90\xe6\xcb\x41\xb9\xc4\x68\xf3\xc8\x62\xea\xcf\x75\x9c\x7c\xb7\x0f\x4b\xd0\xb8\x94\x64\xe6\x58\x05\xd0\x43\x9e\x87\x3c\x01\x53\xb5\x4f\x44\xde\x82\xdc\xab\x60\x79\x4b\xbe\x5c\x51\x2c\x8e\x0b\x53\xa6\xae\x57\x50\xca\xdc\xeb\xb3\x24\x29\x33\xef\x1d\x48\x59\x04\x29\xcd\x51\x79\x69\x1c\x65\x36\x52\x87\x51\xee\xb3\xc5\x41\x41\xcb\xad\xef\x62\x6d\x28\x4b\x4b\x1d\xd8\x0d\xb2\x34\x77\xe8\x18\xcb\x3d\x32\x96\xcd\x61\x76\x88\xa5\x3b\xdd\xdc\x98\x9d\xf1\xe9\xe6\x69\x21\xbf\x74\xf1\x67\x04\x2c\xf3\x65\xa0\xe3\x2b\xab\x3d\xec\x37\xf4\x5a\xba\xb2\x1a\x7d\x07\x57\x6e\xcc\x77\x08\x7f\x05\x33\x2b\x0b\x50\x47\x2b\xab\xd1\x77\x64\xe5\xa1\x02\x5f\xe2\x2a\x75\x61\x77\x58\xe5\xde\xc3\xae\x81\x2a\xab\x91\x77\x4c\x65\xb5\x9f\x1d\x44\x30\x9d\xb7\x34\x13\x95\x55\x39\x1c\x50\x69\xee\x68\xff\xc2\xd8\x70\x4a\xe3\x44\x79\x41\xd2\x74\x9a\xa6\xac\x0a\x50\x85\x29\xcb\x52\x3a\x94\xd2\xa1\x94\xed\x0c\xdc\xbe\xb5\xa5\xc1\x49\x51\xca\xf2\xec\xd6\x83\x94\xd5\x0a\xe1\x38\x4a\x7d\x57\x27\x28\xd6\x6d\x31\x4a\xad\xcc\x0e\xa2\x6c\xec\xec\xc4\x92\xda\x19\x4a\xb3\xa8\x8e\xa0\x6c\xe8\xed\xc4\xba\x36\x00\x94\x66\x61\x1d\x3e\x69\xe9\xe8\xc4\xa2\x9a\xe9\x49\xb3\x9e\x8e\x9d\x3c\xe4\x3a\xa6\x4c\x4e\x1a\xb4\x73\xe0\xe4\xa1\x16\x91\x55\x6c\xd2\xb8\x8e\x74\xd4\xe4\x36\x06\xa8\xad\x00\x25\x66\xd2\x14\x7c\x87\x4c\x3a\x64\xb2\x9d\x81\xdb\xd0\xb7\x34\xe8\x14\x32\x59\x3f\xbe\xb3\x00\x93\xba\xb3\x40\xc7\x4b\xea\xba\x38\xb4\x3c\x5a\x5a\xd2\x2c\x8f\x83\x25\x91\x83\x25\x5b\x19\xb8\x2a\xde\xd2\xe0\x94\xb0\x64\x5a\x15\x4c\xa8\x64\x5e\x07\x1c\x29\x59\xb0\xde\x63\xc4\xeb\x9c\x64\x35\xe4\x0e\x93\xdc\x73\xc4\x2b\x90\x64\x2d\xde\x8e\x91\xdc\xe7\x4e\xd1\x46\x48\x56\x43\xef\x00\x49\x07\x48\x6e\x05\x48\x5e\x51\x3c\x05\xf4\x89\x4b\x32\x23\x53\x5c\x5f\x8f\x9d\x11\x2a\x89\xe3\xaa\x14\x01\x9d\x35\xc3\x1e\xab\xc8\x0a\x36\xee\x11\x5b\x7c\x1e\xe6\x53\x28\xc2\x55\x3c\xa4\xa8\x99\x1f\xcb\xe8\xff\xaa\x22\x70\x03\x74\xb6\x29\x10\xac\xd8\x6a\x19\xb7\x8a\xe3\x34\x56\x71\x3a\x28\x70\x57\x2c\x65\x2d\x7c\xff\xac\x14\xb1\xfa\x1d\x6b\xb6\x9b\xcb\xfb\x24\x78\xd4\xec\xf9\xc0\x24\x08\xac\xd9\xbe\xb8\xe9\x52\x7a\xb7\x03\xd3\xa5\x20\x55\x71\x7e\x90\xc2\xdb\x27\x9c\x10\x45\xef\xd2\x19\x50\xf4\xac\x43\x29\x3f\xe2\xa1\x4b\xf5\x6e\xa7\xfa\x88\x87\xc5\x14\xa7\x3c\x3c\x65\x6a\x2b\x6f\xd2\x94\x56\x9e\x74\x28\x95\x6f\x40\xac\xab\x18\xdb\x19\x65\x73\xf3\x99\x50\xcc\x3a\xf0\xa8\xc5\xff\xe1\x61\xc9\x45\x8b\x56\x94\x87\x28\xfe\x43\xf0\x67\x30\x2f\xda\x3f\x27\x10\xc5\x69\xe0\xab\x17\x85\x07\x00\xb2\xf4\x4d\x92\xc4\xff\x84\x17\x60\xfd\xae\xff\xb9\xa8\xfb\xb6\xee\x2a\x5d\xcd\xee\xbe\xe7\x91\x3c\x9d\xbb\x6c\xb5\x98\x80\xa8\x38\xac\x52\xcc\xec\xf0\x15\x17\x5d\x73\x98\xf2\x70\x1c\x67\xbb\xd9\xeb\x11\x0f\x47\xaa\xc5\x8e\x9e\xef\xa1\xa0\x15\x7e\xed\xf7\x12\xb3\x7e\x6f\x2e\x17\x74\xf8\xea\x7f\x01\x00\x00\xff\xff\xd8\x61\x3a\xc3\x50\xc1\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 49488, mode: os.FileMode(436), modTime: time.Unix(1483933123, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483903181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483903195, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x53\xdf\x1b\xc3\x1e\x8b\xd6\x50\xb2\xed\x96\xd2\xd0\x40\xd2\x43\x8f\xb2\x35\x71\x04\x5a\xc9\xcc\x4c\x5c\xc2\xb2\xff\xbd\xd8\xb2\x89\xdb\x4d\xba\xcd\xa6\xe9\xc9\xb9\x04\xe5\x8d\xde\xd3\xf0\x29\xd8\xa3\xde\xdc\x7d\x9d\xaf\xbf\x2f\x3f\xc0\x56\x1e\x5c\x9e\xa8\xf6\x0b\x9c\xf6\xd5\x6d\x8a\x3e\xcd\x93\xc7\x47\xc1\x87\xda\x69\x41\x48\xb7\xa8\x0d\x52\x0a\xb3\xa7\xa7\x44\x15\xc1\xec\xf3\x04\x00\x40\x19\xdb\x40\xe9\x34\xf3\x6d\x5a\x06\x2f\xda\x7a\xa4\x34\x6a\xed\x67\x6c\xe1\x75\x53\xe8\xde\x62\xd0\xd5\xf6\x26\x5f\x52\x28\x91\x19\x56\xa2\x65\xc7\x2a\xdb\xde\x1c\xf6\x8f\xfd\x45\x17\x0e\xdf\x12\x72\x1d\x3c\xdb\x06\x47\x31\x5d\x69\xa7\xff\x52\x0c\x71\x0b\x0b\xd9\x1a\x4d\xbf\x2a\x02\x19\x24\x34\xbf\x6d\x8f\x16\x6d\x9b\xcf\x7f\x8f\x1a\x1d\x17\xa2\x68\x86\x36\x54\x26\x27\x1c\x86\xc2\xa1\xcf\x53\x75\x2a\x3b\x16\xa5\xb2\x13\x87\x53\x72\xc0\x71\xf6\xa1\xd7\x3f\xac\x08\x12\xdc\x59\xc2\x52\x60\x81\xcc\xba\x42\xf8\x62\x59\xd0\x23\xbd\xdc\xcc\x49\x11\x3a\xfa\x76\x03\xb3\xd8\xef\xac\x8f\x8a\xd6\x8b\x3d\xa3\xdb\x44\x65\x74\x1d\x8e\xa6\x70\xad\x3d\xb0\xec\x1d\xb6\x77\xcc\x05\x7a\x57\xb8\x1d\xa6\xf9\xfb\x52\x6c\x83\x2a\x6b\xf5\x97\xce\x81\x8e\xf1\xfc\x9c\xee\x96\xac\x24\xd4\x7f\x19\xe2\xcd\x1f\x32\xce\x05\x0e\xe7\xf0\xfb\xc6\x48\xd7\xa7\xd6\xa6\xf0\x04\x6d\x50\x2e\x85\xb6\x44\xb2\xc1\xd8\x12\x3e\x87\xe2\x0a\xcc\x26\x50\x83\xf2\x5a\x50\xf3\xe0\x37\xb6\x82\x8f\xd6\x21\x2c\x82\xb7\x12\xc8\xfa\xea\x5f\xa2\xea\x5d\x63\xd0\x04\x6c\x50\x2e\xfd\x67\xcd\x09\x0d\x7a\xb1\xda\x5d\x97\x5b\x9f\xd7\xc6\x4d\xd8\x5e\x8f\xed\x3e\x84\xca\x21\xcc\x5d\xd8\x99\xff\xc6\xee\xbe\x8b\x9b\xd0\x5d\x86\xee\xd3\x7a\xbd\xbc\xca\x8b\xc7\x0a\xa9\x99\x9e\x61\x07\xe5\xf8\x48\xf0\xfc\xd5\x5f\x65\xdd\x98\x33\x1a\xa1\x32\x63\x9b\xd1\x72\xe7\xf2\x64\x24\xb6\xcb\x51\x99\xca\xa2\xa5\xca\xe2\x50\xf8\x33\x00\x00\xff\xff\x90\xc8\x2c\xa6\x25\x0e\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3621, mode: os.FileMode(436), modTime: time.Unix(1483902029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

