// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x5d\x6f\xe3\x36\xd6\xc7\xef\xe7\x53\xf0\xd1\x53\x34\x2d\xda\xc8\xdd\xce\x62\x2f\x3a\xb6\x81\x76\xd2\xc1\xcc\x22\x33\xcd\x26\x99\x05\x16\x8b\x85\x41\x5b\xb4\xcc\x0e\x4d\x7a\x29\xda\x49\x10\xe4\xbb\x2f\x48\x4a\xb2\x5e\x48\x4a\x76\xfc\x22\x67\x98\x8b\x4e\x12\xf1\x50\x87\xe7\x4f\x1e\x1d\xd2\xfa\xa5\xfd\xff\xbb\xf8\xe3\xed\xed\xbf\xae\x7e\x07\x33\x31\x27\xc3\x57\x7d\xf9\x0f\x20\x90\xc6\x83\x00\xd1\x60\xf8\xea\xf1\x51\xa0\xf9\x82\x40\x81\x40\x30\x43\x30\x42\x3c\x00\xe1\xd3\xd3\xab\xfe\x98\x45\x0f\xc3\x57\x00\x00\xd0\x4f\x26\x1c\x2f\x84\xfe\x41\x7e\x4d\x97\x74\x22\x30\xa3\x20\x42\x04\x09\x74\xcd\xee\xbe\x1b\x2f\x85\x60\xf4\x47\x30\x67\x11\x24\xdf\x83\xc7\xbc\xad\xfc\x5a\x41\x0e\x04\x07\x03\xa0\x5b\x85\x0b\xc8\x11\x15\x9f\x58\x84\x0a\xdf\xbe\x29\x99\xe0\x29\xf8\x4e\xf0\x70\x42\x60\x92\x7c\x82\x73\x04\x06\x83\x01\x38\xd3\xf7\x8b\xce\xaa\x37\x50\x4e\x31\x0e\xbe\x93\x77\xc2\x60\x00\x7e\x7a\x03\x30\xe8\x03\xd9\xc3\x0c\x93\x48\xf6\x9f\x84\x04\xd1\x58\xcc\xde\x00\xfc\xc3\x0f\xa6\x0e\x32\x4f\x95\x05\x18\x94\x8d\xff\x8d\xff\x63\x34\x90\x7e\xaa\x56\xa1\x78\x58\xa4\x5e\xce\x70\x14\x21\x7a\x06\xbe\xfd\x56\xf7\x15\x52\x16\xa1\xf5\x20\x3e\x7c\xba\xfa\x7c\x6b\x1c\x42\xf6\xa5\xad\x56\x90\x2c\x11\x18\x80\xb3\x29\x24\x09\x3a\x7b\x63\x6d\x5e\x8e\x13\x38\x73\x34\x4d\x05\xc0\x94\x22\xfe\xfe\xf6\xe3\xa5\x6c\x7e\xa1\x82\x6a\x31\x7a\xaa\xfd\xb6\xfc\x9b\x27\x80\x48\x82\xbe\x2a\x39\x04\x5f\x6e\xa2\x46\x36\x67\x37\x13\xe5\x1a\xad\x10\x17\xdb\x8a\xf2\xaa\xfc\x5d\xbf\x57\x5c\xc1\xfd\x08\xaf\x80\x72\x71\x10\x4c\x18\x15\x10\x53\xc4\x83\xf5\xea\x2e\x66\x04\x0a\x57\x63\x98\x66\x84\xbc\x41\x7f\xf6\xf3\xf0\x2d\xa3\x53\x1c\xf7\x7b\xb3\x9f\x8b\x86\x78\x0a\xc2\x8f\x28\x49\x60\x8c\x9e\xd6\x4e\x14\x6f\x08\x09\xe2\x02\xa8\xff\x9e\x47\x90\xc6\xf2\xce\x8f\x8f\x6b\xa3\x7e\x2f\xc2\xab\x62\x97\x88\x46\xa5\x7b\x4f\x19\x9f\x03\x1c\x0d\x02\xb6\x42\xfc\x8e\x63\x81\x02\x00\x55\x36\x1a\x04\xbd\x89\xf2\xaa\x17\x80\x39\x12\x33\x16\x0d\x82\x05\x4b\x44\x00\x10\x9d\xc8\xe9\x30\x08\xe6\x4b\x22\xf0\x02\x72\xd1\x93\xdd\x9c\x47\x50\xc0\x60\xd8\x57\x3f\xac\xef\xd9\xc7\x74\xb1\x14\x72\x02\xcf\x4b\x77\xd1\x5d\x24\xcb\xf1\x1c\x8b\x00\xa8\xe9\x30\x08\x6e\xe0\x0a\x05\xd9\xe0\xc6\x82\x82\xb1\xa0\xe7\x24\x56\xff\x2c\x38\x9e\x43\xfe\x10\x80\x44\x3c\x10\x34\x08\x22\x9c\x2c\x08\x7c\xf8\x05\x53\x82\x29\x7a\x33\x87\x3c\xc6\xf4\x9c\xe3\x78\x26\x7e\x79\xfd\xd3\xe2\x3e\x18\x56\xc7\x59\x1d\xd8\x14\x13\x54\x18\x5d\x8c\x84\xa5\xf3\x82\x9c\x85\x21\x19\x47\x70\xc1\xee\x28\x61\x30\xb2\x8d\x22\x42\x53\xb8\x24\xa2\xd0\x63\x16\xb0\xcd\x9c\x6d\x21\xc5\xb3\xc7\xf2\x79\xb1\xd9\x48\x6a\xfd\x49\x9f\x03\x40\xe1\x5c\x7a\xf8\x30\x66\x22\xd4\x83\x69\x76\xad\x1e\x94\xd9\xeb\xe1\xed\x1d\x16\x02\x71\x70\x8b\xe7\x48\xb6\x4f\xfa\xbd\xd9\xeb\xa1\x71\x61\x08\x38\x26\xe8\x9c\xa3\x64\xc1\x68\x82\x57\xb5\x51\xab\xeb\xa5\xc6\x40\x9b\x24\x82\xe3\x05\x8a\xd2\x9f\xc6\x8c\x47\x88\xa3\xa8\x62\xae\xbb\x90\xcf\xf7\xfa\xef\xf5\x35\x6e\xbe\xa0\x2f\x46\xc3\x64\xc2\x11\xa2\x2a\x32\x49\xbf\x27\x2c\xdd\x64\xad\xd1\xfd\x84\x2c\x23\x04\x38\x5a\x10\xdc\xc6\x00\xd3\xd4\x40\xb4\x68\x3c\x61\x4b\x2a\x9a\x9b\x31\x31\x43\xbc\x45\x77\xf6\x16\xfd\x9e\x29\x2c\xfd\x9e\x25\x90\x7d\xb1\xae\x99\xaa\x5f\x8f\x8f\x5c\x66\x3b\xf0\x0d\xa6\x11\xba\xff\x11\x7c\x23\xd2\x29\x01\x7e\x19\x80\x50\x67\xd3\x30\x9d\x2e\x61\x3e\x5d\x9e\xea\x99\x1e\x34\xaa\xe5\x4c\x5f\xfa\x61\x98\x4d\x71\x91\xde\x30\x73\x26\x09\xd3\xa7\x55\xbe\xa2\x54\xed\x11\xf4\xdc\x11\xb4\x5e\xd4\x23\x27\x38\x11\xb7\xe8\x5e\x8c\xd9\xfd\x7a\xdc\xe1\x8d\x9a\x51\xf2\x29\x99\x00\x83\x23\x7a\xc2\x8d\xd4\x84\x0b\x2c\x71\x00\x5a\x8d\x06\x7d\x1b\xbc\x1b\x33\x46\x6e\x10\x41\x93\x8a\x7f\xbf\xeb\x39\x7c\xad\xa7\xb0\xc9\xc5\x74\x96\x8f\xd2\x59\x7e\x14\x2f\x3f\xe8\x85\x73\x2d\x8c\x1e\xa6\xcb\x6a\xc4\xc5\x7e\xbd\x13\x5a\xdd\x3f\xa6\x1f\xa8\xb8\x12\xbc\xe0\xdf\x5b\xb9\x56\x4d\xae\xa9\x45\xbc\x47\xa7\xfa\xba\xaa\x4a\xa7\xbd\xfe\xa1\xf6\x60\xc0\x74\xca\x02\x20\x9f\x3d\xe7\x82\xc5\xb1\x4c\xf0\x6a\x03\x93\xfd\x0e\xf2\x18\x89\x41\xf0\xff\xa9\xfb\xe7\xb9\xfb\xe7\x53\x4c\x04\xe2\xa3\xc7\x47\xbd\xa0\x9f\x9e\x0c\x09\xb7\xfa\x15\x21\x01\x31\x49\xc0\x0c\x71\xe4\xf6\xbd\xa7\xfd\x75\x0c\xff\x00\xc1\x49\xcb\x33\xc0\xe8\x84\xe0\xc9\x97\x41\xb0\xde\xed\x89\x19\x4e\x7e\x04\x67\x2d\xc2\x72\xf6\x7d\x30\xd4\x1b\x8c\xe7\x0c\xca\x9c\x88\x41\xa1\x40\x34\x87\xa1\xe1\xa1\xe6\x8e\x91\xb1\xa8\xc9\x87\xda\x83\x51\x54\x29\x6e\x9a\x67\x80\xab\x76\xf9\x84\xee\x6a\x12\x64\x15\xa4\x23\xff\x82\x42\xed\x61\xbf\xbe\xfd\x33\xb0\x2b\x2d\xac\xcf\xe2\xfa\x33\xb7\xdf\x53\xb5\x50\xb1\x36\x53\x9b\x8a\xc2\xae\x62\x07\x0f\xe3\x62\xf1\xa6\x92\x06\x98\xc2\x08\x05\x6a\x6f\xd2\x26\x5f\xc8\x82\x4d\x7d\x3f\x08\xce\xff\x12\x00\xce\x74\x79\x09\x09\x8b\x03\x00\x39\x86\xe7\x04\x8e\x11\x21\x28\x1a\x3f\xb4\xea\xf1\x5c\x60\x41\xaa\x75\xa3\xd1\xd3\xf3\xec\x36\xe9\x4d\xd9\x64\x39\x47\xd4\x36\x81\xeb\xe6\x72\xd7\x68\x6f\x6f\xb6\x49\xcf\x96\x9e\x91\x97\x26\x84\x25\x28\xcd\xcc\x11\x4e\xe6\x38\xef\x3c\x18\x7e\x2b\xe3\x92\xbc\x69\xce\x31\x40\x57\xe6\x65\xdf\x74\xe0\xda\x2a\x97\xc5\xf9\x42\xa7\xf3\x72\x49\x5f\xbb\x57\x79\x3f\xdb\x1c\x27\x39\x9d\x9b\xa2\x34\x7b\x3d\x7c\xa7\xbc\x72\xdf\xbb\x7a\x83\x86\x2d\x86\xd1\xfc\xf9\xdb\x0e\x73\xb7\xf6\xad\x88\xb9\xbd\x23\x93\x9b\x0d\xa2\xa1\x2c\x1d\xdd\x19\xc7\x66\xa9\x32\xf2\x66\xa6\xf6\x27\x94\xa1\x65\xfb\xc1\xbb\xb6\x14\xe6\xf6\x5b\x04\x6a\x01\xe5\x94\xa7\x0d\x5b\x25\x9b\xf5\x46\x06\xc0\xb1\x21\xd0\x53\x3a\xbc\x4a\xbd\x31\x15\x8d\x7a\x2d\x86\x99\xc3\xae\xf2\xd1\xe8\xee\x9e\x24\x05\xdb\x46\x7e\xc9\x09\xe8\x56\xf4\x3f\x5f\x5f\xb6\x10\x60\xc9\xc9\xe8\xc5\x88\x30\x83\x09\x98\xa3\x08\xc3\x83\x29\x60\xdb\xcc\xa5\x1a\xbc\x87\xc9\x47\xe9\x8f\x43\x80\x19\x4c\x46\xca\xe7\x17\x11\xfd\x25\x27\x1d\x8a\xfd\xe7\xeb\xcb\x86\xc8\x2f\x39\x39\xf9\xb8\x73\x24\xee\x10\x12\x28\xea\x4a\xe4\xaf\x33\x87\x1c\xc1\xcf\x9d\x3e\xf9\xf0\x4f\xe1\x8a\x71\x2c\x10\x10\x33\x8e\x92\x19\x23\x87\xd3\xc1\x7e\x58\x93\x2a\xf1\x2e\xf5\xed\x36\x73\xcd\xa1\x48\x36\x8e\x51\x3e\x8e\x93\x97\x26\x9f\x64\x5d\xd4\x26\x5f\x25\x6d\xc4\xc9\x47\xf2\x82\xd4\x21\x90\xc6\x07\x92\xc3\x7d\x92\x2e\xa5\xb2\x9f\xa3\xa7\x0a\x48\x6f\xf3\x13\x9e\xc7\xc7\x9a\x9c\x97\x90\xc6\xad\xce\x0e\x4b\x7e\xed\x6f\x67\xd2\x6e\xb7\x51\x3b\x60\x31\x37\x72\xee\x7c\x41\x69\x23\x1b\xfe\x13\x27\x98\x51\xbf\x9f\xb5\x1a\xf8\xfd\x6c\x4b\x03\x99\x22\xc6\xe8\x70\x05\xa5\x73\x3b\xa5\xa7\x75\x78\x29\x3d\x72\x24\xea\x95\x6e\xa6\x1c\x3f\xf9\x0c\x3d\x85\x13\x04\xd4\x67\x07\x80\xe0\x2f\x88\xe0\x19\x63\x87\x7a\x82\xee\x20\x65\xa7\x5a\xc8\x51\x84\x6a\x14\xa3\xf5\x28\x5c\xa9\x3c\x95\xfa\x9d\xb4\xfb\x55\xda\x5d\xe6\x66\x9d\xc9\xf0\xe0\x59\x9a\x8e\xc9\x92\x73\x14\x9d\xbc\xaa\xe9\x38\xb6\xd0\xf5\x37\x6d\xf9\xe2\x94\x95\x09\xfc\x0e\xc1\xd3\x5f\xb0\xd9\x40\xb6\xd0\xf6\x7d\x6a\xfa\xe2\xc4\xfd\x93\x3d\x9c\xbc\xae\x7f\xb2\x87\x2d\x24\xfd\x3b\x7b\x78\x49\x6a\xca\xa8\x75\xaa\xac\x91\xd7\x9b\xab\x1a\x25\xf6\xa9\x17\x35\x04\xd2\x68\x0e\xf9\x97\x4e\xc5\xff\x32\x75\xaa\x4d\x65\xa9\x5b\x9e\xbe\x0e\x2c\x66\xdd\xd2\x80\xc5\xac\x45\xfc\x59\xcc\xba\x12\xfb\x63\x6e\xf3\x2f\x21\x8d\x97\x30\x46\x7e\xa3\x6f\x35\xf0\x1b\xfd\x96\x06\xd1\x70\x8e\x29\x48\x10\x95\x8b\xae\xe9\x85\x60\x5b\x17\xcf\x39\xa3\x7d\x47\x18\x14\x7f\xfb\xab\xf1\x9c\x36\x9b\xe8\xe1\x47\x4c\x6f\x32\x17\x1d\x79\x82\x64\xed\xe7\x98\x8e\xf2\x31\x75\x25\x65\x80\xad\x15\x82\xf7\xdd\x57\x08\xde\x6f\xa6\x10\xbc\xef\x9e\x42\x47\x49\xea\xbf\xaa\x97\x23\x7d\x2e\xb7\x1a\xf8\x5c\xde\xd2\x20\xff\xd4\xed\x60\x39\x62\x32\x43\x93\x2f\xe5\xc2\x4e\x4f\xe7\xec\x23\x36\x53\x2a\xd0\x6f\x03\x67\x9f\xab\x75\x65\xed\x83\xe7\x7e\x08\xdd\x81\xa0\x67\x9f\x39\x3b\xa2\x9e\x79\x7b\xfa\x61\x67\x84\xb0\xbb\x2e\x04\x5d\x39\xe2\x0a\xb9\x6a\x70\xf2\x01\x9f\x30\x42\x90\x1a\xd1\xb1\xdf\xb2\x4b\x03\xff\x76\xed\x90\x23\xfa\x05\xb7\xbb\x22\xc1\x41\xcb\x8c\x8d\xdf\x9d\x9e\x32\x26\x9e\xf7\x8e\x79\xce\xbe\xa4\xa8\xa8\xf9\x6d\xf3\xb7\x84\x25\xad\x78\x16\xab\xff\x96\x4b\x86\x5f\x37\x02\xd1\x05\xcc\x34\x4b\xa2\x5f\x0b\x66\xfa\x22\x40\xd0\xfc\x4d\x30\x03\x7b\x92\x0b\x7a\x28\x10\x34\x73\xe6\x00\x20\x68\x76\x2b\x33\x08\xba\x76\xe4\x60\x20\x68\xed\xdd\xab\xdc\xc3\x0a\xc4\xb8\xf6\xed\x24\x21\xc6\xdc\x7d\x0f\x31\x16\x21\x46\x47\x58\x5e\x1a\xc4\x98\x0f\xd5\x43\x8c\xed\x5b\xec\x15\x40\xdc\xe6\x21\xd0\x06\x40\x74\xad\xf5\xed\x00\x44\x47\x8f\x1e\x40\xdc\x21\x80\xd8\x22\xce\x1e\x40\xf4\x67\x7f\x6b\xb3\x13\x3e\xfb\x3b\x2e\x02\x97\x97\x79\x56\x00\x71\x5d\xf0\x79\x00\xb1\xda\xc3\xae\xa3\x6f\x04\x10\x6b\x02\x78\x00\x71\x6d\xbe\x85\x02\x15\x14\xab\xaa\x41\x1d\x40\xac\x09\xe0\x01\xc4\xfd\xc5\xbe\x04\x20\x1a\x23\xef\x01\xc4\x3d\x44\xde\x00\x20\xd6\x82\xef\x01\xc4\x6a\x3f\x5b\xe8\x60\x3f\x68\x69\x06\x10\x6b\x8a\x78\x00\xd1\xde\xd1\x3e\xb4\x71\x01\x88\xf6\xe5\xf2\x82\xd4\xe9\x34\x80\x58\x53\xa0\x0a\x20\x56\xe5\xf4\x00\xa2\x07\x10\xdb\x19\xf8\xfd\x6c\x4b\x83\xa3\x02\x88\xd5\xf5\x6d\x06\x10\x6b\x69\xc2\x03\x88\xe6\xae\x8e\x91\xb2\xdb\x02\x88\x16\xa9\x3d\x80\xd8\xd8\xd9\xb1\x55\x75\x03\x88\x2e\x5d\x3d\x80\xd8\xd0\xdb\xb1\xa5\x6d\x00\x10\x5d\xda\x7a\x00\xd1\xd1\xd1\xb1\x75\xb5\x03\x88\x2e\x49\x3d\x80\xb8\xdf\xb2\xa6\x0c\x20\xda\x04\xf4\x00\xe2\xfe\xca\xca\x2a\x80\x68\xaf\x2c\x3d\x80\xb8\x89\x01\x68\xaf\x41\x09\x40\xb4\xc6\xdf\x03\x88\x1e\x40\x6c\x67\xe0\x37\xfa\x2d\x0d\x3a\x05\x20\x9a\x0e\xf6\x1c\x00\xa2\xf1\xa0\xd0\x03\x88\xa6\x2e\xf6\xaf\x90\x11\x40\x74\x28\xe4\x01\x44\xe0\x01\xc4\x56\x06\x3e\x97\xb7\x34\x38\x26\x80\x98\x27\x06\x1b\x80\xb8\x4e\x05\x1e\x40\x2c\x58\xef\x34\xe8\x75\x00\xb1\x16\x75\x0f\x20\xee\x3c\xe8\x15\x00\xb1\x1e\x72\x0f\x20\xee\x76\xef\xe8\x02\x10\x6b\xd1\xf7\x00\xa2\x07\x10\x37\x02\x10\x6f\x10\xe4\x93\xd9\x09\xf3\x87\xff\x5d\x22\xde\xea\x7f\x58\xc9\x51\xb2\x24\x1a\x82\xf9\x4a\x38\xc5\x44\x69\x6b\x02\x54\x32\xd5\x0f\x05\x29\x26\xe9\xfd\xf6\xcf\x28\xea\x3b\x85\xff\xd0\xb3\x02\xd4\x3d\x48\xe7\xcb\x5e\xb9\xc4\x64\xfd\xca\x62\xea\xcf\xb5\x9a\x7c\xb7\x0f\x0b\x64\x70\x49\xcf\xcc\x91\x0c\x60\x00\x82\x00\x04\x1c\x4d\xe4\x3e\x11\x04\x73\x7c\x2f\x83\x15\x2c\xd8\x62\x49\x20\x3f\x2c\x4c\x99\xba\x5e\x41\x29\x73\xaf\x4f\x92\xa4\xcc\xbc\xf7\x20\x65\x11\xa4\xb4\x47\xe5\xa5\x71\x94\xd9\x48\x3d\x46\xb9\xcb\x16\x7b\x05\x2d\x37\x7e\x8a\xb5\xa1\x2c\x1d\x79\x60\x3b\xc8\xd2\xde\xa1\x67\x2c\x77\xc8\x58\x36\x87\xd9\x23\x96\xfe\x74\x73\x6d\x76\xc2\xa7\x9b\xc7\x85\xfc\xd2\xe2\xcf\x0a\x58\xe6\x65\xa0\xe7\x2b\xab\x3d\xec\x36\xf4\x46\xba\xb2\x1a\x7d\x0f\x57\xae\xcd\xb7\x08\x7f\x05\x33\x2b\x0b\x50\x47\x2b\xab\xd1\xf7\x64\xe5\xbe\x02\x5f\xe2\x2a\x4d\x61\xf7\x58\xe5\xce\xc3\x6e\x80\x2a\xab\x91\xf7\x4c\x65\xb5\x9f\x2d\x44\xb0\x9d\xb7\x34\x13\x95\x55\x39\x3c\x50\x69\xef\x68\xf7\xc2\xb8\x70\x4a\xeb\x42\x79\x41\xd2\x74\x9a\xa6\xac\x0a\x50\x85\x29\xcb\x52\x7a\x94\xd2\xa3\x94\xed\x0c\xfc\xbe\xb5\xa5\xc1\x51\x51\xca\xf2\xea\x36\x83\x94\xd5\x0c\xe1\x39\x4a\x73\x57\x47\x48\xd6\x6d\x31\x4a\xa3\xcc\x1e\xa2\x6c\xec\xec\xc8\x92\xba\x19\x4a\xbb\xa8\x9e\xa0\x6c\xe8\xed\xc8\xba\x36\x00\x94\x76\x61\x3d\x3e\xe9\xe8\xe8\xc8\xa2\xda\xe9\x49\xbb\x9e\x9e\x9d\xdc\x67\x1d\x53\x26\x27\x2d\xda\x79\x70\x72\x5f\x45\x64\x15\x9b\xb4\xd6\x91\x9e\x9a\xdc\xc4\x00\xb4\x15\xa0\xc4\x4c\xda\x82\xef\x91\x49\x8f\x4c\xb6\x33\xf0\x1b\xfa\x96\x06\x9d\x42\x26\xeb\xc7\x77\x0e\x60\xd2\x74\x16\xe8\x79\x49\x53\x17\xfb\x96\xc7\x48\x4b\xda\xe5\xf1\xb0\x24\xf0\xb0\x64\x2b\x03\x9f\xc5\x5b\x1a\x1c\x13\x96\x4c\xb3\x82\x0d\x95\xcc\xf3\x80\x27\x25\x0b\xd6\x3b\x8c\x78\x9d\x93\xac\x86\xdc\x63\x92\x3b\x8e\x78\x05\x92\xac\xc5\xdb\x33\x92\xbb\xdc\x29\xba\x08\xc9\x6a\xe8\x3d\x20\xe9\x01\xc9\x8d\x00\xc9\x2b\x02\x27\x08\x7c\x62\x02\x4f\xf1\x04\xd6\xeb\xb1\x13\x42\x25\xa1\xca\x4a\x09\x22\xd3\x66\xd8\x63\x99\x38\xc1\xc6\x1d\x62\x8b\xcf\xc3\x7c\x0a\x49\xb8\x8a\x87\x14\x35\x0b\x95\x8c\xe1\xaf\x32\x02\x37\x88\x4c\xd7\x09\x82\x16\x5b\x2d\x54\x2b\x15\xa7\x91\x8c\xd3\x5e\x81\xbb\x62\x2a\x6b\xe1\xfb\x67\xa9\x88\xd3\x6f\xa5\xd9\x76\x2e\xef\x92\xe0\x91\xab\xe7\x02\x0a\x38\x86\x09\x3a\xd9\xb5\x12\x71\xbc\x42\xbc\x59\x63\x99\xcb\x40\xc2\x96\x7c\xd2\x82\x2a\xd6\xc7\x94\xda\xf3\x13\x58\x5b\xed\x3f\x51\x8a\xc6\xa1\x0e\x58\xe1\x83\xa2\x6c\x4a\x5f\xfc\x16\x5e\xa8\x6b\xce\x4f\x84\x9e\x0b\x44\x6e\xe4\x2a\x14\x70\xa4\x35\xb3\xf8\x0b\x05\xbc\x51\xd7\x3b\xe3\xb3\x9e\x3a\x23\x35\x75\xcc\x4e\xeb\x83\xf2\x5b\xd9\x60\x4b\xaf\x77\x9d\x04\x3e\x50\x81\x38\x34\x9c\x61\x9c\x52\x1e\x58\xf2\xf4\xa1\xdf\xa4\xf5\x0e\x9f\xae\x20\x2f\xb0\x9d\x7f\x85\xe0\x04\x13\x05\x5e\x4f\x89\x30\x0b\x6d\x61\x3a\xe3\x69\xfe\x24\x2c\x4c\x9e\xf0\x22\x6d\xf9\xf4\xb4\x9e\xf1\xb6\xeb\xaa\x94\xdb\xdf\xa2\x35\xd4\x1b\x45\x4f\x0a\x05\x46\x71\xa8\x47\xac\x28\x8a\xde\xa5\x25\x44\xd1\xb3\x67\xd4\x0c\x2d\x9d\xaa\xbe\x4e\x6d\x72\x2c\xfd\x1b\x03\x45\xc7\x9e\xf1\xe7\x05\x76\x9d\xc7\x2e\x59\x7c\xb2\xf9\xeb\x2b\xa9\xf9\x2f\x59\x5c\x5c\x7b\x84\xc5\xc7\x5c\x73\xd2\x9b\x74\xad\x49\x4f\x3a\x54\x97\xdf\x20\xbe\xaa\x02\xca\x27\x34\x9b\x9b\x4f\xfb\x15\xc5\xc6\x92\x16\x7f\xbb\x67\xc1\x78\x8b\x56\x84\xc5\x80\x60\xea\xfa\x03\x43\x9d\x59\x17\xed\x1f\xc3\x89\x9a\x06\xa1\xfc\xc1\x50\x4c\xea\x49\x12\x7e\x82\xf3\x8e\xd4\xbf\xa9\xbb\x52\x57\xbb\xbb\xef\x59\x22\x8e\xe7\x2e\x5d\xce\xc7\x72\xfb\x53\x72\x58\x4e\x31\xbb\xc3\x57\x8c\x77\xcd\x61\xc2\xe2\x91\x9a\xed\x76\xaf\x2f\x59\x7c\x29\x5b\x1c\x6f\x8f\x51\xf8\xb6\xdf\xd3\x66\xfd\xde\x4c\xcc\xc9\xf0\xd5\xff\x02\x00\x00\xff\xff\x79\xb8\x2c\xe6\x3c\xc7\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 51004, mode: os.FileMode(436), modTime: time.Unix(1483864201, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x51\x6b\xdb\x30\x10\xc7\xdf\xfd\x29\x6e\x7e\x5f\x04\x7d\x1c\xaa\x61\x64\x5b\x61\xac\xb4\x90\xee\xa1\x8f\x72\x74\x49\x0e\x54\xc9\x9c\xce\x2e\xa1\xf4\xbb\x0f\x5b\x1e\xd3\xd6\x24\xf3\x20\x79\x9a\xf3\x12\x94\xbf\xee\x77\xe4\x7e\xd8\x96\xf5\xbb\x4f\x77\xcb\x87\xc7\xfb\xcf\xb0\x93\x27\x57\x15\xba\xff\x02\x67\xfc\xf6\xba\x44\x5f\x56\xc5\xcb\x8b\xe0\x53\xe3\x8c\x20\x94\x3b\x34\x16\xb9\x84\xc5\xeb\x6b\xa1\xeb\x60\xf7\x55\x01\x00\xa0\x2d\x75\xb0\x76\x26\xc6\xeb\x72\x1d\xbc\x18\xf2\xc8\x65\xca\xfa\x4f\x8e\xf0\xa6\xab\xcd\x88\xf8\x99\xeb\xdd\x55\xb5\x12\x23\x6d\xd4\x6a\x77\xf5\xab\x2e\xe7\x8a\xa9\x1d\xbe\x67\x8c\x4d\xf0\x91\x3a\xcc\xf0\xc3\xd6\x21\xff\x6d\x33\xa4\x92\x28\x4c\x0d\xda\x71\x55\x07\xb6\xc8\x68\xff\x28\x4f\x08\x7e\xfb\x63\x0a\x6c\xf5\xf0\x4c\x22\xc8\xf0\x18\x5a\x86\xbb\x67\x0f\xdf\x28\x0a\x7a\x64\xad\xc4\x1e\x2f\x3b\x18\xa4\x91\xd0\x06\x16\xe9\x4f\x2f\x46\x78\x42\xde\xee\x23\xba\x4d\x4a\xb2\x19\xbd\xa1\xc7\xc6\x78\x88\xb2\x77\xd8\x0f\xdd\x05\xfe\x50\xbb\x16\xcb\xea\xe3\x5a\xa8\x43\xad\xfa\xfc\x54\x7f\x74\x11\xff\x8d\x3f\x8c\x6d\x25\xa1\x99\x00\xf7\xf6\x08\xfb\xf0\xbc\xb4\x3a\x34\xfc\x49\x46\xbe\x47\xe4\xcb\xd9\xe8\xe9\x71\x96\x31\x55\xc6\x3d\x32\x05\x4b\x6b\xf8\x1a\xea\x33\xba\x98\x05\xfc\x4d\xc0\x32\xf8\x0d\x6d\xe1\x0b\x39\x84\xdb\xe0\x49\x02\x93\xdf\x9e\x43\xc1\x48\x4b\x0d\x66\x11\x53\xaf\x84\x25\xa3\x45\x2f\x64\xdc\x65\x7c\x8c\x7d\xfa\x36\xb3\x8e\xe3\x33\xbd\x09\x61\xeb\x10\x96\x2e\xb4\xf6\xe2\x4e\x6e\x86\x36\xb3\x92\xd3\x4a\x56\xc8\xdd\x79\x9e\xd4\x89\xf4\xdf\xdf\x93\xb4\x1a\xce\xb6\xd9\xb9\x59\x59\xea\xb2\x65\xeb\xaa\x22\x0b\xfb\x65\xb6\x4d\xab\x74\x92\xd7\x2a\xbd\x01\xfc\x08\x00\x00\xff\xff\x4e\x3d\xb1\x15\x12\x0c\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3090, mode: os.FileMode(436), modTime: time.Unix(1483814045, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

