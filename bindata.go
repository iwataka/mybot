// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/status.tmpl
// assets/tmpl/twitter_setup.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xdd\x8a\xe3\x30\x0c\x85\xef\xf3\x14\x86\xbd\x76\x28\x64\x61\x97\x14\xfa\x2e\x8a\xad\xb8\xde\xb8\x92\x91\xd5\xbf\x1d\xe6\xdd\x87\xf4\x27\xb8\x74\x08\x93\x8b\xe0\x8b\xf3\x1d\x1d\x89\x33\xb0\xbf\x9a\x8f\xc6\x3c\xbe\x0c\xde\x47\x0a\x56\x39\xf7\xe6\xcf\x26\x5f\xb6\xcd\x67\xd3\xb4\xff\x8e\x87\x81\x55\x98\x2a\xe9\x00\x6e\x0a\xc2\x47\xf2\xd6\x71\x62\xe9\x8d\x0a\x50\xc9\x20\x48\xba\x5d\x64\x8a\x17\xb5\x90\x62\xa0\xde\x38\x24\x45\xb9\x5b\x3a\x26\x85\x48\x28\x95\xe5\x01\x2e\xf6\x1c\xbd\xee\x7b\xf3\x77\xf3\x1c\xee\xe3\xa9\x9a\x0f\xa6\x64\xa0\x76\x84\x0a\x1b\x99\xd4\x96\xf8\x1f\x7b\xf3\xfb\x49\x65\xc1\x3a\x2b\x8b\x47\xe9\x0d\x31\xe1\xf6\xa7\x1b\xcc\x29\x5f\xe6\xbc\xeb\xcf\xfb\xa8\x58\x0e\x3c\xe1\x53\x6e\xf5\x1c\x55\x51\xe6\x27\x38\x8d\xa7\x3a\xc6\x83\xfa\xd5\x75\x5d\x37\x8e\x0b\x12\x98\x43\xc2\x55\x62\x1c\x67\x66\x21\x32\x94\xf2\xad\x30\x08\x5e\xab\x28\x88\xea\xd1\x4d\xef\xba\x21\x81\x9b\xd6\x2e\xe1\xd9\x07\x94\x21\x1d\xef\x9b\x29\x0c\x09\xcd\xce\xe8\x1e\xc1\xaf\x9e\x04\x52\x74\xf8\xca\xb5\xb7\xbf\x2d\x2a\x31\xa3\x9f\x5d\x6e\xad\xdb\x19\x95\xd6\x63\x42\xc5\xda\x92\x33\xb8\xa8\xd7\xde\x6c\xda\x6e\x2d\xe1\xb2\xea\x5c\x10\x85\xc1\xce\x8d\x42\xd2\x97\x3e\x49\x88\x74\x2f\x73\xf7\x68\xc6\x57\x00\x00\x00\xff\xff\xcd\xb5\xec\x4e\xf1\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 753, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x94\xc1\x4b\xc3\x30\x14\xc6\xef\xfd\x2b\x42\x60\xa0\x07\x5b\x04\x8f\x59\x2f\x03\x6f\x82\xe8\xee\x92\x26\xaf\x2e\x2c\x26\x25\x79\xb6\x93\xd2\xff\x5d\x4c\x33\xb6\xb9\x75\xeb\xa4\xf6\x96\x97\x2f\xef\x7b\xbf\x2f\x34\x6d\x2b\xa1\x54\x06\x08\xe5\x02\x95\x35\x6f\xc2\x9a\x52\xbd\xd3\xae\x4b\x98\x54\x35\x11\x9a\x7b\x3f\xa7\xc8\x0b\x0d\x77\x0e\x7c\x65\x8d\x57\x35\xd0\x3c\x21\x84\x10\x16\xea\x07\x22\xd2\x4b\x3d\x3a\x55\x81\x8c\xab\xc2\x3a\x09\x0e\x64\x3c\xd6\x1f\x5d\x01\x97\xbb\x75\x5f\x73\x87\x85\xbe\x28\x73\x96\xa1\x3c\xbd\x63\xf8\x07\x0c\xef\xd6\x5c\x7f\x9e\xd8\x66\xd9\xbe\x11\xcb\x7e\x8d\xc2\xb0\xb0\xf2\x6b\xdc\x68\xc4\xd9\xc6\x57\xdc\xcc\xe9\x03\xcd\x97\x8d\x42\x04\x37\x3c\x8f\x03\x6c\x00\x70\x58\x70\x54\xfc\xf9\xda\x56\xac\x40\xac\x0b\xbb\x21\xe9\x13\x57\x26\x8d\x3e\xe9\x4b\xdf\x8e\xdc\x54\x4e\x19\x2c\x09\x9d\xf9\x99\xa7\x24\x7d\x76\x50\xaa\x0d\xa1\x69\x7f\xa7\x29\x46\x7d\xb4\xa7\xb7\x5d\x77\xec\x7e\x21\xa5\x73\x21\xe4\x25\xaf\xad\x53\x78\xe6\x26\xae\x03\x7b\x8c\xfd\x46\x93\x6d\x07\xf8\x07\x34\xab\xb5\x6d\x26\x03\x0b\xdd\xc6\x63\x05\xf9\xf4\x50\xc2\x6a\x0d\xc1\xca\x5f\x4d\xa6\x95\xc7\x25\x6c\xf0\x18\x6e\xb1\xeb\x3a\x9a\x70\x6f\x92\xc9\x31\x77\xff\xe6\x3d\xcd\x5f\x35\x17\xeb\x61\x58\xb1\xe2\xc6\x80\x9e\x22\x8e\xe0\x94\x2e\x62\xc3\x8b\x49\xf8\x20\xdf\xfa\xff\x29\x04\x96\xed\xbd\x58\x2c\x0b\x6f\x6e\x9e\xb0\x4c\xaa\x3a\x4f\xda\x16\x8c\xec\xba\xe4\x3b\x00\x00\xff\xff\xad\xbc\xf8\xb9\xea\x05\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 1514, mode: os.FileMode(436), modTime: time.Unix(1486287425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x98\x5b\x6b\xe3\x3a\x10\xc7\xdf\xf3\x29\x74\x04\x85\x73\x1e\xe2\xc0\xa1\x1c\xce\x83\x63\xe8\x3e\x74\xdb\x25\x65\x43\x2f\xfb\x9a\x28\xd1\xd8\x51\x2b\x4b\x41\x92\x9d\x04\xe3\xef\xbe\xc8\xb7\xf4\x16\x5f\xb2\x36\x34\x6f\x91\x46\x33\xf3\xfb\x7b\xac\x19\x9c\x24\x14\x7c\x26\x00\x61\x9f\x71\x03\x6a\xb1\x96\xc2\x67\x01\x4e\xd3\x91\x4b\x59\x8c\xd6\x9c\x68\x3d\xc5\x86\xac\x38\x8c\x15\xe8\xad\x14\x9a\xc5\x80\xbd\x11\x42\x08\xb9\xd9\xfa\x1b\x23\x94\x9b\x6a\xa3\xd8\x16\x68\xf1\x6f\x25\x15\x05\x05\xb4\x38\x96\x1f\xdd\x00\xa1\xc7\xff\xf9\x9a\x7a\xbb\x90\x2f\x52\xcf\x9d\x18\xda\x75\x47\x90\x10\x4e\xef\xc6\x84\x47\x9f\x6c\xbb\x93\xd7\x29\xb8\x93\x77\x49\xba\x66\x25\xe9\xa1\x5d\xd2\x48\xc9\x9d\xde\x12\x31\xc5\xff\x63\xef\x3b\x08\x50\x84\x9f\xcc\xa7\x93\xb1\xb7\x25\xc6\x80\x12\xfa\xb4\xc5\x87\x45\xfb\x4b\x12\xce\xb4\x79\x84\xbd\x59\xc9\x3d\x72\xee\x08\x13\xce\xbc\x70\x85\xfe\xde\x2a\x26\x8c\x8f\xf0\x85\xbe\xd0\x18\x39\x73\x05\x3e\xdb\x23\xec\xe4\x75\xe1\x94\x31\xf1\x3f\x69\xfa\x31\x64\x83\x90\x75\x3a\x79\x91\xe2\xa8\x47\xa2\xa7\xfb\x59\x6b\xa8\x48\xf1\xc5\x70\x60\x1b\xa2\x51\x08\x94\x91\xce\x54\x2b\x29\xf9\x03\x70\x58\xbf\xe2\xba\x21\xfa\xce\x3a\x6b\x84\xda\x10\xbd\xc8\xc2\x0e\x43\x14\xa9\x9a\xca\xec\xc6\xf3\x74\x3f\x6b\x45\x13\x29\xde\x3f\x8b\x02\xb3\x03\x30\x40\x7b\xa1\xb9\x2f\xbd\x35\x02\x55\x71\xfb\x47\xf2\x49\x2c\x15\x33\x80\xcc\x46\x81\xde\x48\xde\x9d\xcd\xe4\xef\xd2\x4f\xff\x56\x98\xb9\x51\x05\xdd\x75\xe1\xf8\xb1\xf4\xdb\x48\x59\xa6\xb2\xa8\x52\x19\xf0\x09\xf6\xce\x5b\x3d\xcd\xf6\xc0\x55\x32\x43\x12\x73\x22\x82\x8e\x88\x2e\x13\xdb\xc8\x20\x5f\xaa\x70\x8a\x65\x0c\x6a\x67\x1f\x0b\x46\xe6\xb0\x85\x29\xb6\xf8\x18\xd9\x56\x39\xc5\x49\x52\x20\x2e\x2d\xe2\xb2\x42\x5c\x96\x88\x36\xfa\x32\x4d\x31\xca\x9a\xa7\x3d\x90\xab\x35\x23\x22\x48\x53\xfc\x49\x52\x6d\x58\xff\x1a\x8f\xd1\x2f\xa6\x99\x14\xe8\x6a\x7e\x8b\xc6\xe3\x33\xda\x6b\x7e\xfe\xb4\x32\x33\xb2\x82\x9a\x5b\x8b\xd7\x6f\xb7\x6e\x3d\x79\x1a\x4e\x16\xad\xb1\x60\xe2\xdc\x38\x8b\xdd\x7b\xa5\x1c\xd5\xb9\xc4\xde\x35\x59\xd7\x4c\x42\x44\x04\xa0\x10\x67\x2f\xc0\xd9\x46\xca\xae\xaf\x50\x8f\xf5\x55\x28\xe2\x93\x35\x38\x59\x56\x8b\x63\x56\x9f\xd5\x5d\x21\xb7\xc5\x73\xae\xac\xfd\xac\x32\x3f\xbf\x1c\x4f\xbd\x7a\x2b\x1e\x29\x05\xf4\xcb\x09\x55\xe4\xf5\x4e\xaa\x65\x8d\x54\xdf\xf2\x13\x43\x8a\x65\xa7\xe6\x1d\x90\xaf\x57\x56\x65\x62\x1d\x2a\xeb\xa6\x38\x32\xa4\x5e\xcf\xf2\xf0\xe5\xa4\x7a\x96\x87\x0e\x2a\xfd\x90\x87\x21\x05\xb2\xf7\xec\x69\x59\x4c\xed\x6e\xd7\xeb\xdb\x2e\xb6\xbd\xbd\x33\x75\x7b\x6f\xf3\x33\x22\x68\x48\xd4\x4b\x5d\xc7\x6a\xb2\xe8\xde\xb4\x72\x8f\xed\xfb\x56\x6e\x3f\x00\xbd\x0c\x64\x0d\x79\xed\x6e\x67\x6a\x19\xc8\xd6\xc4\x32\x90\xe7\xd3\xda\x31\xc7\x0e\x4a\x11\x09\xe0\xcc\x41\xe7\x5f\xec\x95\x1e\x5a\x7c\x48\x68\x63\xed\x85\x4c\x20\x0d\xc2\xb0\x10\x44\xf7\x57\xa8\x1a\x9e\xaf\xb9\x24\xe6\xbf\xcb\xe3\x00\x5d\x46\x76\xee\x98\x78\x28\xfd\x37\x0a\xcd\xcb\x53\x21\x13\x8b\x2a\xad\xfe\x2b\x2c\x24\xfb\x81\xa9\xc9\xfe\x1c\x6a\xb2\xff\x43\x6a\x77\xf2\xea\x03\x95\x3b\xc9\x3e\xbe\x79\x23\x77\x42\x59\xec\x8d\x92\x04\x04\x4d\xd3\xd1\xef\x00\x00\x00\xff\xff\x43\x20\x2b\x1f\xf3\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5107, mode: os.FileMode(436), modTime: time.Unix(1486393904, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x5d\x6f\xdb\x38\xd6\xbe\xcf\xaf\x38\x2f\xdf\x41\xd3\xc1\xd4\xf6\x74\x8a\xbd\x99\x4a\x06\x8a\x76\x06\x1b\x20\x93\xc9\x26\xe9\xc5\x62\xb1\x08\x68\xe9\xc8\xe6\x0e\x45\x6a\x49\xca\x49\x60\xf8\xbf\x2f\x28\x52\xb2\x2c\xcb\xb2\xf2\xd9\x24\xb5\x2f\x1a\x5b\x3a\x3c\x7c\x78\xbe\x1f\xd9\xe8\x62\x11\x63\xc2\x04\x02\x89\xa4\x48\xd8\x94\x2c\x97\x07\xc1\xff\x7d\xf9\xf3\xf3\xc5\x3f\x4f\x7f\x83\x99\x49\xf9\xf8\x20\xb0\x7f\x80\x53\x31\x0d\x09\x0a\x32\x3e\x58\x2c\x0c\xa6\x19\xa7\x06\x81\xcc\x90\xc6\xa8\x08\x0c\xed\xc2\x89\x8c\x6f\xc6\x07\x00\x00\x81\x8e\x14\xcb\x8c\xfb\x60\x5f\x49\x2e\x22\xc3\xa4\x80\x18\x39\x1a\x3c\x93\x57\x6f\x27\xb9\x31\x52\xbc\x83\x54\xc6\x94\xff\x08\x8b\x4a\xd6\xbe\xe6\x54\x81\x51\x10\x82\x93\x1a\x66\x54\xa1\x30\x27\x32\xc6\xda\xdb\x8f\x6b\x4b\x58\x02\x6f\x8d\x1a\x46\x9c\x6a\x7d\x42\x53\x84\x30\x0c\xe1\xd0\xed\x17\x1f\x36\x37\x28\x40\x49\x05\x6f\xed\x4e\x0c\x42\xf8\xf9\x23\x30\x08\xc0\x6a\x98\x31\x1e\x5b\xfd\x7a\xc8\x51\x4c\xcd\xec\x23\xb0\x9f\x7e\x6a\x53\x50\x22\x2d\x56\x40\xb8\xbe\xf8\x5f\xec\xdf\xad\x0b\x2c\xce\x42\x6a\x68\x6e\x32\x8f\x72\xc6\xe2\x18\xc5\x21\xbc\x79\xe3\x74\x0d\x85\x8c\x71\x75\x88\xa3\x93\xd3\xaf\x17\xad\x47\x28\x5f\x6e\xd5\x9c\xf2\x1c\x21\x84\xc3\x84\x72\x8d\x87\x1f\xb7\x8a\xaf\xdb\x09\x0e\x3b\x44\xbd\x03\x98\x10\xa8\xfe\x7e\xf1\xc7\xb1\x15\xff\x52\x18\x75\xcb\xa2\xe5\xc6\xd5\xf5\x2b\x4b\x40\xae\xf1\xbb\x72\x87\x51\xf9\x6d\xbc\x51\xc6\xec\xed\x9c\x72\x86\x73\x54\xe6\xae\x4e\x39\x58\x7f\x17\x8c\xea\x19\x1c\xc4\x6c\x0e\x05\xc4\xd0\x16\x0a\x43\x99\x40\x45\x56\xd9\x5d\xaf\x08\x82\xce\x27\xd4\x57\x84\x4a\xa0\xae\xe0\x3f\x79\x3a\x91\x46\x49\x51\x53\x50\xc8\xcc\xde\x8f\x3f\x17\x55\x28\x57\xd4\xd6\x8a\x60\x34\x7b\xdf\x14\xf9\xa5\xd4\xc2\x91\xc6\xa4\x92\x47\xb8\x91\xb9\x02\x79\x25\x60\x22\xcd\xa1\x06\x2d\x73\x15\xa1\x7e\x07\x09\xe3\x06\x95\x06\x2a\x62\xa0\x45\x09\xd2\xc1\x68\xf6\x4b\x43\x6f\x22\x55\x0a\x2c\x0e\x89\x9c\xa3\xba\x52\xcc\x20\xf1\xd2\x21\x19\xb9\xd2\x38\x22\x90\xa2\x99\xc9\x38\x24\x99\xd4\x86\x00\x8a\xc8\x46\x4c\x48\xd2\x9c\x1b\x96\x51\x65\x46\x56\xcd\x20\xa6\x86\x92\x71\x50\x7c\x68\x6c\xc3\x44\x96\x1b\x1b\xe7\xe9\xda\x4e\x4e\x8d\xce\x27\x29\x33\x04\x8a\xa8\x09\xc9\x39\x9d\x23\x29\x4f\x3b\x31\x02\x26\x46\x0c\xf8\xb4\xf8\x93\x29\x96\x52\x75\x43\x40\x9b\x1b\x8e\x21\x89\x99\xce\x38\xbd\xf9\x95\x09\xce\x04\x92\xf1\x41\xcb\xe9\x9a\xc7\x49\x18\xc7\xda\x99\xa6\x68\xb6\xab\x6b\xc6\x8e\x3f\x48\x2b\xee\x2f\xf2\x4a\x70\x49\xe3\x5d\xd8\x1b\xa6\xf1\xe6\xba\x3d\xf0\x1e\xce\x78\x90\x73\x7d\xcd\x6e\x7f\xaa\x0d\x9d\x16\x3b\x01\x41\x53\x8b\xf4\x66\x22\xcd\xd0\xf7\xdd\x5e\x10\x9b\x31\x15\x8c\x62\x36\xaf\xd9\x6c\xb1\x60\x09\x0c\xff\x40\xad\xe9\x14\x97\xcb\xd6\xec\xa3\x1c\x95\x81\xe2\xdf\x41\x4c\xc5\xd4\xe6\xf1\x62\xb1\x5a\xe4\x75\xae\x54\xa2\x88\x6d\x26\xaf\x94\xcd\x3e\x8c\x2f\xae\x98\x31\xa8\xe0\x82\xa5\x68\x71\xda\x94\xfa\x30\x6e\xdd\xcf\xd0\x09\xc7\x81\x42\x9d\x49\xa1\xd9\x7c\xe3\x48\xc5\xfd\x35\x61\x70\x4b\xb4\x51\x2c\xc3\xd8\x7f\x9a\x48\x15\xa3\xc2\xb8\xcd\xc0\xc6\x0e\x21\x9b\xd7\xdd\x3d\xd5\x7e\xc3\xdd\x8c\xc7\x3a\x52\x88\xa2\xf0\x88\x0e\x46\x66\x8b\x9a\x52\x1a\xaf\x23\x9e\xc7\x08\x0a\x33\xce\xfa\x2c\x60\xc2\x2f\x30\x3d\x84\x23\x99\x0b\xb3\x5b\x4c\x9a\x19\xaa\x1e\xea\xb6\x4b\x04\xa3\x36\xb3\x04\xa3\x2d\x86\x0c\xcc\x6a\xb0\x6b\xbe\x16\x0b\x65\x83\x08\x7e\x60\x22\xc6\xeb\x77\xf0\x83\xf1\x21\x01\xbf\x86\x30\x74\xe5\x79\xe8\xc3\x65\x58\x85\xcb\x72\xb3\x1d\xc1\x4e\x6f\x75\x16\x4f\xd7\xb1\xcb\xd4\x32\x7e\xc3\x12\x8c\x1e\xfa\x96\x5a\x65\x73\x31\x20\x91\x51\xb7\x05\xb7\xde\x74\x27\xe7\x4c\x9b\x0b\xbc\x36\x13\x79\xbd\x3a\xf7\xf0\xbc\x88\x28\xdb\xca\x35\xb4\x00\x71\x01\x77\x59\x04\x1c\xd9\x62\x07\x70\xde\xd8\xe1\xdf\x1d\xe8\x26\x52\xf2\x73\xe4\x18\x35\xf0\xfd\xe6\x62\xf8\xcc\x85\x70\x1b\x44\x1f\xe5\x97\x3e\xca\xbf\x09\xca\x23\x97\x38\x67\xa6\x15\xa1\x4f\xab\x4b\x65\x1e\x17\x9d\x71\xde\xfd\x33\x39\x12\xe6\xd4\xa8\x1a\xbe\xcf\x36\x57\xdb\xa0\x15\x49\xfc\x88\xa0\x02\x37\xfa\xf9\xb0\x77\x1f\x36\x9a\x12\x13\x89\x24\x60\x7b\xdf\xc0\xc8\xe9\xd4\x36\x96\x82\x65\x95\xd7\xa8\x9a\xa2\x09\xc9\xff\x7b\xf8\x83\x0a\xfe\xc0\x8d\x4b\x97\x8b\x85\x4b\xe8\xe5\xb2\xa5\xe0\x36\x5f\x31\x1a\xca\xb8\x86\x19\x2a\xec\xc6\x3e\x72\x78\x3b\x8e\xff\x04\xc6\xf1\x5d\x0f\xa4\x88\x38\x8b\xfe\x0a\xc9\x8a\x92\x9a\x19\xd3\xef\xe0\xb0\x87\x59\x0e\x7f\x24\x63\xc7\x82\xee\x73\xa8\xf6\x42\x0c\xb5\xbe\xdb\x6e\x86\x1d\x4d\xad\xdb\x46\xad\x43\x55\x75\xd4\x11\x8d\xe3\xc6\x70\xb5\x3b\x02\xba\xe6\xa6\x13\xbc\xda\x70\x41\x39\x2d\x75\xd4\x5f\x68\x99\x77\x36\xef\xdf\xbd\x07\x3e\x17\x89\xad\xbd\x78\xb3\xe7\x06\xa3\x62\x16\xea\x9a\xff\x1e\xa0\x19\xd7\x87\xb7\xa2\x68\x40\x42\x63\x24\x05\x3b\xea\x53\x2f\xec\xc0\x56\xbc\x0f\xc9\xe0\x3d\x01\x25\xdd\x58\x4b\xb9\x9c\x12\xa0\x8a\xd1\x01\xa7\x13\xe4\x1c\xe3\xc9\x4d\x2f\x8d\x03\xc3\x0c\x6f\x9d\xd6\x9b\x48\x07\xe5\x36\x7e\x53\x19\xe5\x29\x8a\x6d\x01\xbc\xb9\xdc\x52\xdb\xed\xf2\xed\x6b\xfc\x03\xb0\x7b\xd4\xa5\x88\x4b\x8d\xbe\x32\xc7\x4c\xa7\xac\x52\x4e\xc6\x6f\xac\x5d\xf4\xc7\xdd\x35\x06\xdc\x64\xbe\x8e\xcd\x19\xae\xaf\xe7\x4a\x3b\x7f\x71\xe5\x7c\x7d\xa4\xdf\xd8\x6b\x9d\x26\xec\xb6\x93\x0d\xe7\x5d\x56\x9a\x7d\x18\xff\x5e\xa0\xea\xde\x1b\x1a\x4f\x1c\xfc\x49\x4a\x26\x75\xc5\xcc\xec\x54\x61\xc2\xea\xf3\x84\xd3\xdb\xd2\xb0\xbb\x5a\x75\x09\xea\x53\xe4\x1f\x47\xdc\x02\x94\x2b\xb0\xdd\xa0\x9c\xde\x5b\x82\xba\xb5\xe5\x13\x29\xcd\xfd\x22\xb4\xea\x9c\x98\xd0\x9c\x9b\x2d\xb1\xfa\xd9\xc6\x71\x9f\x6e\xb8\x15\xff\x96\x5b\x2d\x97\xb7\xb1\xd4\xea\x7e\x8d\xa4\xfe\x4e\xe7\xd2\x52\x85\xef\x85\xa4\xbe\x0a\x1a\x99\x78\xa7\xb5\x75\xae\xca\xa1\x4f\x45\x23\x4b\x30\x4f\x40\x23\xcb\xad\xda\x69\xe4\x0a\xc8\x93\xd1\xc8\x0d\x0a\x54\x21\x6c\x50\xa0\x15\xb6\x17\x49\x81\x2a\xf8\x7b\x0a\x54\xa7\x40\x1d\x66\x79\x6d\x14\xa8\x3a\xea\x9e\x02\xf5\x97\x78\x54\xfa\x72\x97\x26\xd0\x87\xbe\x74\xe5\xfa\xdd\xe8\x4b\x87\xc6\x3d\x7d\x79\x40\xfa\xd2\xc3\xce\xaf\x89\xbe\x54\xbd\xb6\x49\x5f\x2a\x3b\x7c\x03\xfa\x52\x81\x6a\xd2\x97\x5e\xa0\xf6\xf4\xe5\x96\xf4\xe5\x1c\xa9\x8a\x66\x2f\x98\xbd\xfc\x37\x47\xd5\xeb\xcb\x32\x85\x3a\xe7\xae\x85\x7e\x27\x2c\x47\x17\xbe\x6d\x6b\x6f\xa5\xd7\x9f\x8a\xe2\x68\xbf\xdf\xe3\x33\x1c\xb7\xd3\xf0\x1f\x2e\x2a\x60\x13\x81\x8f\x97\x47\x65\x35\x7a\xf5\x95\x93\xc7\x73\x56\x04\xdf\xc5\x4d\x86\x2d\x90\x5c\x64\x5e\x5a\x03\x12\x20\x04\x88\xc2\xc8\x76\x5a\x20\x29\xbb\xb6\xc6\x22\x99\xcc\x72\x4e\xd5\xd3\x52\x31\x0f\xbd\x41\xc4\x2a\xd4\x2f\x92\x87\x95\xe8\xf7\x34\xac\x4e\xc3\xb6\x5b\xe5\xb5\xb1\xb0\xf2\xa4\x7b\x12\xf6\x90\x12\x8f\x4a\xd3\x6e\xdd\xc5\xfa\x70\xb4\x8e\x3a\x70\x37\x8a\xb6\x5d\xe1\x9e\xa1\x3d\x20\x43\xdb\x6d\xe6\xd7\x44\xd0\x7c\x07\x6e\xd2\xb3\xd2\x08\xdf\x80\x9d\x79\x44\x4d\x6e\xd6\x07\xd1\x9e\x9a\xf5\xa4\x66\x9f\x4e\x8f\x8a\x1f\xab\xfb\x32\xf7\x62\x99\x99\xfb\x91\x34\xe4\x8a\xef\xee\x2d\xa9\xfb\x81\x28\x94\x41\xf8\x5c\x29\x15\xcd\x58\x5b\x27\xfa\x74\x7a\xf4\x64\x5c\x8a\x66\xec\x31\x78\x54\x37\x14\x4b\x0e\x5a\x81\x38\x27\x5f\xe6\x8a\x57\x58\x16\x0b\x6b\xa6\xe1\x79\x71\xe7\xeb\xd9\x71\xe7\x6c\x7d\xdf\x41\xd8\x02\xa3\x0a\xe9\x26\xf0\x16\xb0\x3e\xca\x2e\xcb\x28\x23\x10\x49\xae\x43\xf2\xe1\x67\xdb\x73\xaf\x74\x48\xfe\x46\xc6\x1e\xbe\xff\xc9\xf2\x85\x17\x5d\x2e\x83\x51\xb9\xd7\x4b\x19\xeb\xed\x99\x5f\xff\x48\x6f\x4f\xb9\x1f\xe7\x6b\xda\x1f\x6c\x14\xaf\x3f\x27\x3c\xe5\x34\x42\x38\x91\x86\x25\x2c\xa2\x9b\x33\xc5\x0b\xea\x4b\x94\x73\x79\x05\x1a\x79\xb2\xdb\xd0\xb9\xee\x7c\xbe\xf7\x80\xad\xe6\x7e\xa9\xb1\x58\x44\x33\x8c\xfe\x9a\xc8\xeb\x8d\xde\x54\xf7\xd9\xb0\x70\xe3\xf0\x93\xb5\xc0\x39\xf2\x64\x35\xc1\x89\xba\x54\x56\x48\x15\x76\xba\xb4\x76\x7a\xd4\xe7\x4e\xf5\xc7\x77\x3d\xb0\x7f\xb5\x1e\xe9\xc4\x5d\xf8\xec\x6e\x90\x1f\x2b\x7b\x8e\x84\x41\x45\x5b\x46\xf1\x7d\xda\xac\x5d\x7d\x46\x69\x53\x73\x59\x5b\xbe\xb0\xda\xed\x67\x90\x28\x75\xb4\x8d\x0c\xa9\x23\x7d\x46\xa9\x71\x2c\xa7\xfb\x54\x58\x89\x71\x26\x50\xe4\xe9\xcb\xcc\x99\x63\x39\xad\xe7\x08\x97\xd3\x6f\x99\x13\x16\x8d\xcf\x01\x8b\xe4\x1e\x31\xdf\x0b\x44\x37\x71\x12\x79\x3a\xb1\xd3\xba\x63\x23\x16\x8f\xf7\x74\x8d\x2e\xd5\x81\x1f\xbb\xbb\x77\xe4\x4c\x0f\x90\xa4\xb5\xb7\xc1\xc8\x2d\x0b\x46\xee\xbf\x6a\x28\x27\xfb\xff\x05\x00\x00\xff\xff\x56\xa1\x65\x60\xd7\x41\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 16855, mode: os.FileMode(436), modTime: time.Unix(1487245881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x3e\x14\xc5\xdf\xfb\x57\x58\x7e\xfd\x7e\x1b\xaf\x3f\x46\xbb\xa9\xa9\xc4\x60\x94\xc2\xf8\x31\x28\x20\xf6\xe6\x3a\x37\x89\x43\x6c\x07\xdf\x9b\xa6\x59\xd5\xff\x7d\x6a\xca\x28\x42\x43\xea\x5b\xce\xb5\x7c\x72\x3e\x3e\xba\xab\x55\x04\xb1\xb6\xc0\x78\x0a\x32\x02\xcf\xd7\xeb\xd6\x68\xf3\x39\x6e\x31\xc6\xd8\xc8\x00\x49\xa6\x52\xe9\x11\x28\xe4\x77\xb3\x93\xf6\x90\xbf\x3d\xb2\xd2\x40\xc8\x17\x1a\xaa\xc2\x79\xe2\x4c\x39\x4b\x60\x29\xe4\x95\x8e\x28\x0d\x23\x58\x68\x05\xed\x46\xfc\xcf\xb4\xd5\xa4\x65\xde\x46\x25\x73\x08\x3b\x7c\xdc\xda\x3a\x91\xa6\x1c\xc6\x17\xf5\xdc\xd1\x48\x6c\xc5\xcb\x49\xae\xed\x13\xf3\x90\x87\x1c\xa9\xce\x01\x53\x00\xe2\x2c\xf5\x10\x87\x3c\x25\x2a\xf0\xab\x10\x46\x2e\x55\x64\x83\xb9\x73\x84\xe4\x65\xb1\x11\xca\x19\xf1\x3a\x10\xbd\xa0\x17\x0c\x84\x42\xdc\xcd\x02\xa3\x6d\xa0\x10\x39\xd3\x96\x20\xf1\x9a\xea\x90\x63\x2a\x7b\xc3\x7e\xfb\xdb\xfd\xa3\xd6\xb7\xd3\x13\x38\xef\x44\x13\x73\x76\x73\xf8\x54\xab\xf2\xf4\xf0\xf4\x26\xe9\x75\xaf\xcc\x9d\xaa\xaa\x81\xb3\xbd\x9b\xc7\x28\xe9\xdf\xcb\xff\xae\xcd\xed\x0c\x7f\x8b\xf3\x83\xe1\x62\x1e\x7d\xcf\xd2\x7e\xc9\x99\xf2\x0e\xd1\x79\x9d\x68\x1b\x72\x69\x9d\xad\x8d\x2b\xf1\xef\xc3\xed\x03\xa5\x22\x9b\x61\xa0\x72\x57\x46\x71\x2e\x3d\x34\x44\x32\x93\x4b\x91\xeb\x39\x8a\xd8\x59\x6a\xcb\x0a\xd0\x19\x10\xfd\xe0\x20\xe8\x35\x78\x6f\xc7\xaf\x84\x7b\xfc\x55\x48\x44\x20\x6c\x3c\x54\x89\xe4\xcc\xcb\xcd\xed\x55\x54\x5e\x17\xc4\xd0\xab\x5d\xc0\x4d\x96\x20\x71\x2e\xc9\x41\x16\x1a\xdf\xe5\xcb\x9e\x4b\xf0\xb5\xe8\x04\x9d\x6e\xd0\x7f\x51\x4d\xa0\x0c\xf9\x78\x24\xb6\x86\xe3\x8f\xdd\xf7\xed\x34\x7b\x5f\x69\xf6\xcf\x46\x67\xea\xf3\xf4\xa7\x9e\x7f\xea\x0e\x9e\x17\x75\x76\x7b\x11\x9f\x66\x57\x17\xf2\xc7\x53\x5c\x3e\xdc\x2f\x7f\x2d\xef\xae\xed\xd1\xd9\xe1\x20\xef\x9a\xa3\x87\xcb\x69\x31\xf9\x62\x26\x47\xc7\xc3\x6a\x72\x39\x55\xd7\xc7\x83\xd9\x52\x7e\xdc\xe8\x8e\xe5\x63\x98\x22\x97\x14\x3b\x6f\x02\xaa\x34\x11\xf8\x86\xa4\xd2\x51\x02\x84\x4d\xe0\xd7\xfd\x2a\x29\xde\xec\xd7\xce\x74\x24\xb6\xbb\xb8\x5a\x81\x8d\xd6\xeb\xd6\x9f\x00\x00\x00\xff\xff\x0f\xae\x36\x4f\xaf\x03\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 943, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x8e\xdb\x36\x10\xbe\xef\x53\x4c\xd9\x1c\x5a\x20\xb2\x90\x04\xe8\x21\x90\x05\xa4\x49\xd0\x06\x48\xd2\x20\x4d\x0b\xf4\x38\x12\xc7\x12\xb3\x14\x47\x25\x69\x6f\x5d\xc1\xef\x5e\x50\xb2\xbd\x96\x2d\xc9\x6b\x27\x6d\x7d\xb0\x65\xcd\xdf\xc7\xe1\xcc\x37\x94\x9a\x46\xd2\x42\x19\x02\xa1\x8c\xa4\xbf\xc4\x66\x73\x93\x7c\xf3\xea\x97\x97\x9f\xfe\xf8\xf0\x1a\x4a\x5f\xe9\xf4\x26\x09\x3f\xa0\xd1\x14\x73\x41\x46\xa4\x37\x4d\xe3\xa9\xaa\x35\x7a\x02\x51\x12\x4a\xb2\x02\x66\xc1\x30\x63\xb9\x4e\x6f\x00\x00\x12\xa9\x56\x90\x6b\x74\x6e\x2e\x72\x36\x1e\x95\x21\x2b\x3a\x59\xf8\x1c\xba\x30\xb8\xca\x70\xeb\x62\xaf\x70\xe8\xe0\xf3\xb2\xca\xd8\x5b\x36\x07\x0e\x5a\x9d\xf2\x49\xfa\x6e\x9d\xb1\x4f\xe2\xf2\xc9\xb1\xe8\xe9\xce\x5a\x13\x4a\x91\xe2\xd2\x73\x85\x5e\xe5\xa8\xf5\x1a\x72\xd6\x9a\x72\x0f\x68\x24\x64\x96\x51\xe6\xe8\xc2\xbf\x35\xdc\x2a\x23\x1d\xf0\x02\x94\x59\xb0\x0d\x16\x6c\x60\xc1\x16\xd6\xbc\x4c\xe2\xf2\x69\x3f\x4c\xd3\xa8\x05\xcc\x7e\x64\xff\x1e\x2b\xda\x6c\xfa\x10\x10\x4a\x4b\x8b\xb9\x28\xbd\xaf\xdd\xf3\x38\xf6\x77\xca\x7b\xb2\xb3\x9c\xab\xb8\x69\xee\xad\xc4\x0e\x69\xe6\x0d\x64\xde\x44\xba\x68\x7f\x1c\xe7\x0a\x75\xa4\x72\xee\x6e\x6f\xed\x45\x9a\xb8\x1a\xcd\xce\x68\x81\xb0\xc0\x9d\x2c\x5c\x62\xee\xd5\x8a\x44\x9a\xc4\x41\x2d\x4d\x62\x3c\xc6\x4c\xda\x9d\x05\x8b\x75\xed\x66\x07\x88\xbf\x32\xc8\x1a\x9d\x3b\x87\xd2\xc8\xf3\x19\x25\xf2\x92\xf2\xdb\x7f\x11\xe9\x3e\xc6\x38\xd6\x13\x5c\x39\x1b\xc7\x9a\x66\x92\x56\xa4\xb9\x26\xeb\x66\x05\x73\xa1\xa9\xdd\x7b\xac\x95\x0b\x5f\xf1\x4a\x39\xc5\x66\x2b\x0a\x77\x5b\xf1\x9f\x4b\xf6\xe8\x1e\xba\x8a\xce\x78\x70\x11\x9d\xe8\x21\x25\x71\xb2\x80\x42\xf9\x72\x99\xb5\x70\xd4\x1d\x7a\xbc\xc5\xb8\x0a\x8d\xf6\x60\x54\xad\xfd\x30\xaa\x56\x74\x0e\x55\x12\x4b\xb5\x4a\x0f\xe8\x60\xa9\x77\x6e\x0c\xae\xc0\xe0\x2a\xaa\x95\xd6\xae\xbd\xfa\xbc\x74\x5e\x2d\x14\xc9\x1e\x3f\x24\x5a\x81\x65\x4d\x73\x51\x5b\x72\x64\x7c\xdb\xcb\xfb\x15\xec\xa3\x23\x48\xf4\x18\x79\x2e\x8a\xa0\xec\x31\x13\xdb\x6c\x7c\x5b\x72\x45\x22\xfd\x99\x2b\x0a\xe0\x92\x58\xab\xc3\x00\x4d\x63\xd1\x14\x04\x8f\x6e\x69\xfd\x18\x1e\xad\x50\xc3\xf3\x39\xcc\x5e\x76\xdc\xa2\xd8\xbc\xc3\xba\x57\xc1\x23\x88\x26\x21\x34\x4d\x70\xbf\xd9\x88\x74\x77\x35\x0c\xa5\xdf\x2d\x49\xbc\xd4\xe9\x30\x99\x7a\xcc\xa2\xc0\xc8\x64\xfc\x31\x9d\x06\x2d\x25\xe7\xa2\x5d\xf6\xa1\x7e\x8d\x26\xd4\x91\x24\x50\x06\x76\x89\xeb\xd9\x1e\x47\x09\x16\x1a\xda\xef\x48\x86\x2c\xd9\x01\x83\x41\xa3\x28\x4c\x14\x65\x8a\x11\xfd\xd6\xa6\x7c\xd6\x37\xf1\xca\xeb\x6e\x2b\xbb\xac\xc5\x9a\x8b\x58\xa4\xaf\xad\x65\x0b\x6f\xb9\xe8\x52\x56\x3e\x1b\x81\xd0\xd5\xda\x90\xa8\xe3\xf7\xb7\x5c\x1c\x31\xd1\xf4\x0a\xc2\x18\x14\x69\x52\x5b\x4a\x93\x9c\x25\xa5\x4d\xd3\xf9\x48\xe2\xf6\x6f\x12\xb7\xa2\xa9\xb0\x03\x14\x7d\x2e\xde\x38\x40\xaa\xd2\xf7\xec\x4b\x65\x0a\xf0\x0c\xae\xe4\xbb\x24\xa6\xea\x8a\x64\x9c\x52\xf2\x84\xc9\x58\x39\x84\xc1\xfa\x5f\x16\xc3\xf4\xb0\x48\x3f\x6d\xa9\xfe\xbe\x6d\xdd\xd5\xe5\x72\xf1\xd6\x74\xf5\x35\xce\x18\x47\xee\x43\x53\x8f\x09\xe1\x1a\x46\x1a\x88\xd1\x27\x96\x11\xa5\x5d\x6e\x9b\x26\x04\x39\x66\xa7\xe9\x00\xf1\xb9\x08\x63\x75\x76\xef\x61\x2a\x0f\x93\xbd\x03\x97\xb6\xc3\x39\x3c\x63\xb5\xff\xbf\xb6\x44\x57\x55\x6f\x2a\x2c\xe8\x85\x41\xbd\x76\xca\xbd\x42\x3f\x99\x93\x91\x26\xfa\xa9\x3b\x42\xfc\xde\x1e\x54\xe0\xc5\x87\x37\xf0\x91\xdc\x52\x7b\xf8\xae\x69\x86\x02\x7c\x3f\xde\x36\xf0\xa0\xbd\xb9\x10\xc7\xd9\x70\x97\x6e\x1c\x5c\xdf\xc5\x6d\x3a\x7e\xfb\xf8\xf6\x81\xa3\xc2\xf2\xdd\x84\xcb\x63\xed\x9c\x75\x54\xc9\xe8\x87\x33\x26\xd0\x6f\xce\x0e\xd3\xaf\xbc\xb4\x79\x78\xce\x48\x13\x55\x15\xe0\x6c\x7e\x2f\x6b\xf1\xee\x67\xbd\xaa\x8a\xc8\x92\xab\xd9\xb4\x87\xf3\xc7\x80\xda\xcf\x45\xab\x08\x18\x36\xfa\x6f\x92\x90\xad\xe1\x64\x3b\xc4\xe9\x99\xf2\x04\xd6\x78\xc2\xbf\x74\xc1\xbd\x41\xdb\xab\xca\xae\x4a\x8e\x06\xef\x97\xc0\xbc\x7a\x68\x5f\x42\x3a\x5f\x87\x70\x06\x6e\x5d\x31\x1f\xf6\x87\xc2\xfd\x41\x74\xf0\x60\x38\x74\x1c\xc4\xbd\x66\x37\x62\xa3\xc2\x2a\x29\x4e\x26\xc7\xe9\xd3\xc8\x10\xf0\xe3\xf3\xed\xfd\xe3\xc1\xf6\x3a\x89\xbb\xb7\x0f\x49\xdc\xbd\xb5\xd8\x99\xfc\x13\x00\x00\xff\xff\x9b\xbd\xff\xb2\xe1\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4321, mode: os.FileMode(436), modTime: time.Unix(1486313596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x3d\x6f\xc2\x30\x10\x86\xf7\xfc\x8a\xab\x97\x4e\x10\xc1\x6c\xbc\xd0\x6e\xa8\xed\xd0\xa5\xa3\x13\x1f\xb1\x5b\xe7\x2e\x72\x0c\x14\x45\xfc\xf7\x2a\x98\x8f\xc8\x25\x43\x6c\xeb\xbd\xe7\xbd\x0f\xdd\x30\x18\xdc\x3a\x42\x10\x9e\x1b\x71\x3a\x15\xf2\xe9\xe5\x7d\xfd\xf9\xf5\xf1\x0a\x36\xb6\x5e\x15\x72\x3c\xc0\x6b\x6a\x56\x02\x49\xa8\x62\x18\x22\xb6\x9d\xd7\x11\x41\x58\xd4\x06\x83\x80\xf9\x08\x56\x6c\x8e\xaa\x00\x00\x90\xc6\xed\xa1\xf6\xba\xef\x57\xa2\x66\x8a\xda\x11\x06\x91\xb4\xf1\x9b\x5a\x90\xde\x57\xfa\x62\x71\xd5\xa7\xfc\xf7\xae\xad\x38\x06\xa6\x09\x7f\x8e\xb1\x0b\xb5\xe1\xa6\x97\xa5\x5d\xe4\xca\xf2\x0a\x7b\xd4\x46\xa8\xb5\xc5\xfa\x07\x8e\xbc\x0b\xc0\x07\x82\x8a\xe3\x73\x0f\x3e\xb1\xcb\x3b\x2b\x4b\xe3\xf6\xea\x61\x11\x9d\x26\xf4\x70\xfe\xcf\xba\xe0\x5a\x1d\x8e\x79\x39\x79\xf4\x6c\x1c\x47\x16\x94\x7a\x77\x5b\x98\x6f\xb8\x99\xf4\x7b\x33\xe9\x02\xaa\x61\x48\xaa\x2c\xc7\xd7\x03\x1e\x7d\x8f\x8f\x60\xbb\x98\xb6\x0d\x11\x7f\xe3\xac\x46\x8a\x18\xd2\xfd\x56\xf8\x1b\x47\xeb\xa8\x81\xc8\xd0\x5b\x3e\xfc\x9f\xe0\x25\x0f\x99\x2c\x4d\x3e\xa1\xfb\xf3\x72\x95\x65\x5a\x02\x59\xa6\xe5\xb9\x9a\xfc\x05\x00\x00\xff\xff\xbc\x4b\x6b\x86\x66\x02\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 614, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\xcf\x6e\x9c\x30\x10\xc6\xef\x3c\xc5\xc8\x3d\x53\xbf\x00\x70\xe9\x35\xc9\xa5\x4f\x30\xe0\x31\x19\xd5\x19\x53\xdb\xa0\x54\x28\xef\x5e\xf1\x6f\x43\x58\xb4\x5a\xa9\x52\xa5\x3d\x81\x3f\xbe\x99\xf9\xfc\xb3\x19\x47\x43\x96\x85\x40\x09\x0e\x35\x06\xf5\xf1\x91\x15\x82\x03\x34\x0e\x63\x2c\x57\x15\x96\x47\x6e\xc8\x62\xef\xd2\xb6\x64\x19\x28\x44\xda\x96\x96\xdf\xc9\xe4\xc9\x77\xaa\xca\x00\x00\x0a\xc3\x97\x3e\x8d\x97\x84\x2c\x14\x72\xeb\x7a\x36\xab\xe3\xe8\x5a\x1b\xbd\x12\x1a\x0a\x3b\xcf\xec\xab\xfb\x94\xbc\x1c\xac\xc9\xb7\xad\x23\x68\xbc\x73\xd8\x45\x32\x0a\x0c\x26\x5c\xe5\x69\xec\xa2\x6f\x32\x86\x96\x52\xa9\xbe\x2d\xd5\xcf\x24\x7d\x54\x80\x81\x31\xa7\xf7\x0e\xc5\x90\x29\x95\x45\x17\xe9\x30\x7c\x0e\x10\x3b\xbc\x8c\xe7\xc6\x4b\x3e\xf1\xaa\x0a\x3d\xe9\xff\xd3\x5e\xe8\x05\xc5\x41\xc5\x03\x9a\x3a\xa0\x18\x05\xaf\x81\x6c\xa9\xb4\xaa\x9e\xff\xd4\x3e\x15\x1a\x77\xe8\xb5\xe1\xe1\xe6\x49\x6c\xfc\xe0\x13\x24\x9b\xed\xeb\x82\xef\x90\xa2\x77\xbb\x16\xdb\xcd\x10\x1c\x4e\x80\x8e\x23\x5b\xa0\xdf\xf0\xfd\x65\x76\xbd\xe0\x1b\x81\xfa\xe1\xc5\x72\x3b\x5d\xc3\x2b\x42\x8e\x77\xad\x73\x4e\xf4\x06\xd8\x24\x1e\xce\x0e\x6b\x1c\xc9\x45\xba\xaf\xcb\x79\xb9\x98\x93\xea\x2b\xd0\xb9\x63\xf9\x75\x81\xdc\xcc\xe1\xb5\xaa\x96\x5d\x7c\x81\xfd\x09\xdd\x71\x95\xdd\x07\xe3\xc9\x3f\x2a\x09\xe7\x27\x0c\x4f\xfe\xdf\x19\xfc\x4c\x98\xfa\xf8\xa0\x18\xe2\x1c\x5e\xab\x6a\xd9\xc5\x0d\x18\x5f\x95\xde\x9d\xfe\xa5\xeb\x6b\xa1\x05\x87\x2a\xdb\x32\xfd\x0d\x00\x00\xff\xff\x0c\x54\x48\x91\xc4\x05\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1476, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x38\xdd\x57\xa3\x3d\x0e\xaa\x81\xa1\x19\x30\x0c\x2b\x16\x20\xd9\x61\x47\xd9\x62\x1a\xad\xb2\x64\x88\xb4\x87\x20\xe8\xbf\x0f\xb2\x6c\xc4\x4b\xed\x75\xd9\xba\x5b\x7c\x31\xe4\xf7\xf8\x48\xe9\xd1\xa0\x0e\x07\x8d\x5b\xe3\x10\x04\xb1\xe2\x86\xc4\xd3\xd3\x42\xbe\x59\x7e\xb9\xdb\x7c\x5b\x7d\x80\x1d\x57\x36\x5f\xc8\xf8\x02\xab\xdc\xc3\xad\x40\x27\xf2\xc5\xe1\xc0\x58\xd5\x56\x31\x82\xd8\xa1\xd2\x18\x04\x5c\xc5\xc0\xc2\xeb\x7d\xbe\x00\x00\x90\xda\xb4\x50\x5a\x45\x74\x2b\x4a\xef\x58\x19\x87\x41\x24\x2c\x3e\x63\x09\xa7\xda\x42\xf5\x12\x03\x3e\x8e\xff\xde\x54\x85\xe7\xe0\xdd\x28\xbe\xe3\xec\xae\xf3\x55\xf0\x25\x12\xc1\xba\xab\x5e\x66\xbb\xeb\x53\xce\xcd\x20\x63\x51\x69\x91\xdf\xed\xb0\x7c\x84\xba\x0f\x4b\x9b\x46\x02\xe5\x34\xb0\x7a\x44\xa8\x50\x51\x13\x90\xc0\x6c\x41\xb9\x7d\x64\x16\x16\xab\x28\x7d\x73\x94\x96\x99\x36\x6d\x3e\x59\x2d\xab\xc2\xe2\xdb\x80\x54\x7b\x47\xa6\xc5\xd3\xa2\x3b\xfc\x17\x32\xa4\x10\xe2\x60\x6a\xd4\xfd\xaa\xf0\x41\x63\x40\x7d\x12\x9e\x24\xe2\xa1\x3f\xff\x9e\xb0\x30\x0d\x24\x50\x0f\x07\x26\x33\x9e\x51\x18\x88\xc3\x89\xce\xf1\x64\x36\x95\x4a\x66\x33\xc5\x49\x3e\x36\xc7\xd9\x45\x6f\x7e\x18\x66\x0c\xb0\x34\x01\x4b\x86\x7b\x24\x52\x0f\x08\x9f\x0d\x31\x3a\x0c\x2f\x6f\x66\x16\x84\xae\x17\xcd\x16\xae\xfa\x1c\x49\x73\x79\x9f\xb6\x3f\xea\xc8\x49\x69\xaa\x95\x03\xe2\xbd\xc5\xd8\xe6\xd6\x87\x77\x85\x6d\x50\xe4\xef\x4b\x36\x2d\xca\x2c\xe2\x2f\x25\x47\x4b\x78\x7e\x9e\xae\x35\xd6\xec\xeb\x3f\x4c\xe2\xf4\x6f\x72\x9c\xeb\x32\x9c\x63\xda\x57\xc2\xf0\x1f\xad\x8a\xf2\x74\x71\x6b\x40\xfe\xd5\xad\x15\x06\xe3\xb5\x29\xe1\x93\x2f\x5e\xc5\xac\x64\xcd\xe0\xd9\xc5\xa8\x01\xf9\x5b\xa3\x3e\x6e\x36\xab\xd7\xfd\x9d\x7a\x87\xd6\x18\xda\x8b\x41\x47\x64\x7a\xba\x3d\x9f\x62\x32\xeb\x26\xf6\xfc\xe5\xa0\xb1\xf9\x62\x04\xc6\xe5\x88\x26\xb3\x24\x29\xb3\x74\xdb\x1a\x6a\xfe\x19\x00\x00\xff\xff\xd6\x0b\xf2\x3c\x9a\x09\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 2458, mode: os.FileMode(436), modTime: time.Unix(1487091131, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitter_setupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\x31\x6f\xdb\x3c\x10\xdd\xfd\x2b\xee\xbb\xdd\x26\x92\xf1\x03\xa5\x25\xed\x14\x04\x2d\x10\x2f\x9d\x82\x93\x78\xb6\xd8\x50\x24\x41\x9e\x1c\x08\x82\xff\x7b\x21\xc9\x4e\x1c\xc7\x0e\x32\x14\xa8\x07\x4b\xc4\xbb\xf7\xf8\xf8\xee\xc4\x61\x30\xbc\xb1\x9e\x01\xe5\xc5\x8a\x70\x7a\xca\x2c\x5d\xc4\xfd\x7e\xa1\xff\xfb\xf6\xe3\x6e\xfd\xeb\xe7\x77\x68\xa4\x75\xe5\x42\x8f\x0f\x70\xe4\xb7\x05\xb2\xc7\x72\x31\x0c\xc2\x6d\x74\x24\x0c\xd8\x30\x19\x4e\x08\xab\x91\x58\x05\xd3\x97\x0b\x00\x00\x6d\xec\x0e\x6a\x47\x39\x17\x58\x07\x2f\x64\x3d\x27\x9c\xb1\xf1\x77\x2a\xe1\x69\x57\xd1\x41\xe2\x88\x9f\xf2\x7f\x77\x6d\x15\x24\x05\x7f\xc2\x9f\x6a\x9a\x9b\x72\x3d\x9b\x87\xc7\xd1\xbc\x56\xcd\xcd\x79\xc9\xed\x51\xc5\x31\x19\x2c\xd7\x8d\xcd\x60\x33\x48\xc3\xb0\xb1\x29\x0b\x64\xe1\x08\x12\xa0\xcb\x0c\x0f\x7d\x15\x44\xab\xe6\xf6\x4c\x65\x13\x52\x0b\xd6\x14\x38\x67\x04\x54\x8b\x0d\xbe\x40\x35\xad\xd5\x21\x41\x85\xd0\xb2\x34\xc1\x14\x18\x43\x16\x04\xf6\xb5\xf4\x91\x0b\x6c\x3b\x27\x36\x52\x12\x35\x2a\x2d\x0d\x09\x61\xa9\xa7\xc5\xd9\x4e\xd6\xc7\x4e\x60\x04\x5e\x37\x9b\x25\x72\x57\xb5\x56\x10\x76\xe4\x3a\x2e\xf0\x91\x76\x8c\xc7\xa3\x55\xe2\xa1\x12\xbf\x8c\xc9\xb6\x94\xfa\xe9\xdd\x6d\x4f\xd2\xd2\xca\xd8\xdd\x69\xf8\x76\x03\xab\x07\xce\x99\xb6\x7c\x25\x74\x72\x9c\x04\xa6\xff\xa5\x21\xbf\x1d\xbb\x37\x0c\x6f\xa4\x0f\x92\xec\xcd\x17\xa4\xac\xdf\x84\xf3\x36\x12\x34\x89\x37\x05\x36\x22\x31\xff\xaf\x14\xc5\x98\x57\x87\x4c\x57\x75\x68\x11\x84\xd2\x96\xa5\xc0\xa7\xca\x91\x7f\xc6\x72\x1d\xa0\x4e\x4c\xc2\xaa\x6e\xb8\x7e\x86\x3e\x74\x09\xc2\x8b\x87\xe3\x38\x50\x8c\xce\xd6\x34\x76\x09\xb6\x61\x6c\x6f\xc3\x89\xb5\xa2\xab\x99\x9c\x1a\x16\xaa\x1c\x2f\x13\xe7\x18\x7c\xb6\x3b\x3e\x37\x3c\xe1\xef\x8a\x61\xa6\x64\x49\x36\xb2\x39\xac\xaa\x90\x0c\x27\x36\x67\xf4\x59\xe2\xed\x53\xf9\x88\xa5\xcb\xc0\x0c\x9a\xf2\x2e\xf8\xdc\xb5\x9c\xe0\x9e\x7b\xad\xc4\x7c\x5e\x7d\x15\x84\x4f\xe7\x2d\x52\xce\x2f\x21\x19\x04\x4f\x2d\x17\xef\x6f\x89\x55\x7d\xb0\xf0\xf4\xcc\xfd\xeb\x4c\x0e\xc3\xea\x68\xed\x9e\xfb\xfd\xfe\xc2\xb9\x5f\xf7\xbd\x6a\x5b\xab\x6b\xc7\xff\x7a\x2e\x8f\x5c\x27\x96\x7f\x1d\x4d\x9e\x5c\x5c\x4a\x67\xf6\xf7\x57\x03\xd2\xea\xc2\x44\x69\x35\x0d\xe2\xc5\x99\x3f\xbc\x6a\x35\xd3\xb4\x9a\xef\xfa\xe3\x77\xfc\x27\x00\x00\xff\xff\x29\xfb\xad\xe7\x1f\x06\x00\x00")

func assetsTmplTwitter_setupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitter_setupTmpl,
		"assets/tmpl/twitter_setup.tmpl",
	)
}

func assetsTmplTwitter_setupTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitter_setupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter_setup.tmpl", size: 1567, mode: os.FileMode(436), modTime: time.Unix(1486295961, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
	"assets/tmpl/twitter_setup.tmpl": assetsTmplTwitter_setupTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
			"twitter_setup.tmpl": &bintree{assetsTmplTwitter_setupTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

