// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/js/config.js
// assets/js/config.js.map
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/status.tmpl
// assets/tmpl/twitter_setup.tmpl
// assets/tsx/config.tsx
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xdd\x8a\xe3\x30\x0c\x85\xef\xf3\x14\x86\xbd\x76\x28\x64\x61\x97\x14\xfa\x2e\x8a\xad\xb8\xde\xb8\x92\x91\xd5\xbf\x1d\xe6\xdd\x87\xf4\x27\xb8\x74\x08\x93\x8b\xe0\x8b\xf3\x1d\x1d\x89\x33\xb0\xbf\x9a\x8f\xc6\x3c\xbe\x0c\xde\x47\x0a\x56\x39\xf7\xe6\xcf\x26\x5f\xb6\xcd\x67\xd3\xb4\xff\x8e\x87\x81\x55\x98\x2a\xe9\x00\x6e\x0a\xc2\x47\xf2\xd6\x71\x62\xe9\x8d\x0a\x50\xc9\x20\x48\xba\x5d\x64\x8a\x17\xb5\x90\x62\xa0\xde\x38\x24\x45\xb9\x5b\x3a\x26\x85\x48\x28\x95\xe5\x01\x2e\xf6\x1c\xbd\xee\x7b\xf3\x77\xf3\x1c\xee\xe3\xa9\x9a\x0f\xa6\x64\xa0\x76\x84\x0a\x1b\x99\xd4\x96\xf8\x1f\x7b\xf3\xfb\x49\x65\xc1\x3a\x2b\x8b\x47\xe9\x0d\x31\xe1\xf6\xa7\x1b\xcc\x29\x5f\xe6\xbc\xeb\xcf\xfb\xa8\x58\x0e\x3c\xe1\x53\x6e\xf5\x1c\x55\x51\xe6\x27\x38\x8d\xa7\x3a\xc6\x83\xfa\xd5\x75\x5d\x37\x8e\x0b\x12\x98\x43\xc2\x55\x62\x1c\x67\x66\x21\x32\x94\xf2\xad\x30\x08\x5e\xab\x28\x88\xea\xd1\x4d\xef\xba\x21\x81\x9b\xd6\x2e\xe1\xd9\x07\x94\x21\x1d\xef\x9b\x29\x0c\x09\xcd\xce\xe8\x1e\xc1\xaf\x9e\x04\x52\x74\xf8\xca\xb5\xb7\xbf\x2d\x2a\x31\xa3\x9f\x5d\x6e\xad\xdb\x19\x95\xd6\x63\x42\xc5\xda\x92\x33\xb8\xa8\xd7\xde\x6c\xda\x6e\x2d\xe1\xb2\xea\x5c\x10\x85\xc1\xce\x8d\x42\xd2\x97\x3e\x49\x88\x74\x2f\x73\xf7\x68\xc6\x57\x00\x00\x00\xff\xff\xcd\xb5\xec\x4e\xf1\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 753, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfigJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x5f\x6b\xdb\x3e\x14\x7d\xcf\xa7\xb8\x3f\xff\x20\xc8\xe0\xaa\xec\xb5\xc1\x8c\xfd\x83\x0d\x56\x3a\x4a\xc7\x1e\x4a\x31\x8e\x7c\x93\xaa\x28\x92\x26\x5d\x37\x0b\x4d\xbe\xfb\x90\x64\xc5\x75\xda\x31\xe6\x17\xa3\xeb\x73\xee\x3d\xf7\x1c\xab\xe8\x3d\x82\x27\x27\x05\x15\x8b\xd9\x63\xeb\xa0\x69\xf0\x17\xa1\xee\x3c\xd4\xc0\xe8\x5e\x7a\x98\xcf\x21\xbc\xf9\xf1\x4b\x09\xfb\x3d\xac\x7a\x2d\x48\x1a\x0d\xac\xab\x60\x59\xc2\xd3\x0c\x00\x60\x65\x1c\xb0\xd0\xc6\x82\xd4\xa1\x2c\x57\xc0\x96\xfc\xbe\xf5\x57\x5b\xfd\xcd\x19\x8b\x8e\x76\xcc\x96\x25\x74\xb7\xf6\x0e\x6a\x58\xde\xda\xbb\x45\xa2\xe6\x86\x4d\xc3\x4a\x78\x4a\x33\x85\xd1\x9e\x5c\x2f\xc8\x38\xa8\xa1\x5b\xc0\x21\x62\x3b\x6e\x9d\x21\x43\x3b\x8b\xa1\x07\xd4\x75\x0d\xba\x57\x0a\xde\xc2\xd5\xf2\x01\x05\x71\xe1\xb0\x25\x64\xcb\x12\x2e\x80\x35\xcd\x14\x3f\x9e\x2a\xd0\xb8\x8d\x13\xcb\xc5\xec\x90\x1c\xb8\xc6\x56\x10\xd4\xe0\xf0\x67\x2f\x1d\xb2\xc2\x85\x42\x51\x3e\xfb\xfa\xf1\xea\xf2\x05\xe0\xac\x33\x9b\x0c\xba\xd9\x4a\x22\x74\xef\xd2\x42\x35\xb0\xd1\xad\xc6\xf7\x16\x5d\xf6\xeb\xe8\x29\x9b\x50\x2a\x18\x60\x27\xd6\x4c\x40\xcc\x3a\x63\x7d\xee\x14\x9e\x98\x5f\xcc\xac\x1e\x1a\x70\xd1\x2a\x15\x63\xac\x60\x80\xef\xf7\xd1\xda\xc5\x91\x15\x19\xdc\x53\x4b\xc1\x9c\xb1\x5b\x78\x1c\xd2\x16\x91\x2e\x12\x99\x0f\xc7\x6a\x82\x59\xb5\x8f\xc6\x49\xc2\x0c\xca\xe7\x29\x4a\x18\xa5\x30\xea\xf6\x19\xf8\xac\x74\x84\x1e\x46\x5d\x0e\xa9\x77\x3a\xc9\x4b\xd5\x14\xfe\x50\x9f\x78\xb1\x98\x1d\x58\x4c\x86\x7f\x30\x1b\x6b\x34\x6a\x2a\xa7\x59\xdc\xc8\x0d\x2a\xa9\xf1\x9f\xd2\xc8\xa4\xbf\xe4\x91\x61\xec\x79\x18\x59\x7e\x24\xc2\x7f\xf9\x0f\x9d\xcf\x73\x34\xad\xb5\x6a\x37\x64\xd3\xba\x75\xbf\x41\x4d\xa7\xf9\xa4\x8d\x4f\xc6\x8c\xbf\x2f\x77\xa8\x3b\x0c\x57\x63\x5c\xe9\x15\x0d\xc9\x99\x74\x25\x3e\x29\x0c\x83\x58\x71\xff\xa6\xa8\xa2\xa4\x0a\x8a\xcf\xa8\x94\x81\x1f\xc6\xa9\xae\x18\x76\x1c\x82\x98\x9a\x9d\x15\xfc\xc1\xee\x7c\x37\x06\x59\xec\xb5\xb9\x2f\x9c\x0d\x12\xca\x0a\x3a\x23\xa2\x03\x7c\x8d\x34\x60\xdf\xef\xbe\x74\xac\xa0\x44\x38\xa3\x81\x51\x84\x49\xe7\xe7\xff\x83\x37\xbd\x13\x78\xd9\x5a\x2b\xf5\xfa\xfb\xf5\xd7\x5a\x18\xbd\x92\x6b\xfe\xe0\xf9\xa6\xb5\xbf\x03\x00\x00\xff\xff\xd7\xcd\x08\xae\xda\x04\x00\x00")

func assetsJsConfigJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfigJs,
		"assets/js/config.js",
	)
}

func assetsJsConfigJs() (*asset, error) {
	bytes, err := assetsJsConfigJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config.js", size: 1242, mode: os.FileMode(436), modTime: time.Unix(1487251833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfigJsMap = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\x51\xcf\xd2\x40\x10\xfc\x2f\xfb\xea\x06\xa2\x7e\x2a\xe9\x3d\xcd\xed\xd7\xd4\xfa\x7d\x58\x6b\x49\x08\x31\x3c\x90\xa6\x90\x0a\xdc\x21\x57\x08\xc6\xf8\xdf\xcd\xde\xa1\x41\xb4\x4f\xb3\x33\xd3\xdd\xd9\xbd\x1f\x74\xee\x8e\xa1\xf7\x8e\xb2\xd7\x4c\xeb\x7e\xd7\x51\x46\xad\x77\xeb\x7e\x33\xfa\x1a\x88\x29\xf8\xd3\xb1\xed\x3e\x7b\x3f\x50\x46\x7f\xea\x40\xd9\x17\x1a\x8d\xc6\x43\xb8\x8c\xaf\xee\x21\x5c\x68\xc9\xe4\x56\xfb\xa8\x2e\x99\xf6\xab\xc3\xa1\x77\x9b\x40\x19\x99\xf8\x01\x00\xbf\xb5\xc0\x0b\x6b\x00\x19\x5b\xf6\x02\x04\x31\x40\x3b\x88\x29\x81\x07\xcb\xbd\x00\xdf\x1f\x4d\x09\x79\x97\xf3\xc9\x02\x0b\x7e\x02\x5e\x59\x53\x03\x67\xe1\x05\xa4\xe6\xad\x05\xa6\x4a\x3f\xb1\x00\xc2\x0d\xa6\x4e\x0d\xcf\x95\x92\x65\x22\xa3\x5c\x00\x85\x59\x40\x9e\xb9\x02\x2a\xce\x81\xfc\xe6\x3f\xe5\x54\x1d\x2c\xd7\x40\x7d\x2f\x2b\xa7\xf2\xc5\xf2\x1c\x98\xdf\xcb\xca\x99\x06\x72\x14\xad\x61\x34\xf3\x2c\x4a\x09\x79\xab\x10\xc0\x63\xf2\x03\xb3\x88\x1e\xec\x5f\xd1\xd1\x70\x81\xe6\xa5\x3a\x73\xdd\x1b\x13\xcb\x7b\x01\xbe\xc5\x8b\xb8\x5c\xfb\x96\xf8\xdd\xf7\x7d\xc5\x1b\xd1\xed\x0b\xe0\xa3\xa9\xf5\x1a\x53\x2d\x63\xb3\x89\x00\xde\xa6\x34\x25\xc4\xc9\x4d\x9a\xf0\x4f\x9a\x0f\x11\x4d\xfe\x93\xa6\x7c\x93\xd2\xa4\xab\x44\xe5\x3a\x44\x3e\xa5\xb5\xb8\x03\x3a\xbd\x5f\xc1\x39\xc4\xd9\x1b\x67\x0b\xb4\x09\xe9\x33\x6d\x6d\xc2\x02\xd9\xa5\xc9\xf4\xf3\x57\x00\x00\x00\xff\xff\x52\x4d\x7e\x73\x75\x02\x00\x00")

func assetsJsConfigJsMapBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfigJsMap,
		"assets/js/config.js.map",
	)
}

func assetsJsConfigJsMap() (*asset, error) {
	bytes, err := assetsJsConfigJsMapBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config.js.map", size: 629, mode: os.FileMode(436), modTime: time.Unix(1487251833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x96\x51\x6f\x9b\x30\x10\xc7\xdf\xf3\x29\x4e\x96\x2a\xb5\x0f\x33\x9a\xb6\x47\x17\x69\xaa\xb4\xe7\xaa\xcd\xfb\x64\xf0\xb1\x58\x61\x36\xb3\x6f\x24\x55\x94\xef\x3e\x05\x9b\x25\x69\x81\x99\x8e\x3d\x72\xb6\xef\xfe\xbf\x3f\x77\x98\xc3\x41\x61\xa5\x0d\x02\x93\x25\x69\x6b\xbe\x95\xd6\x54\xfa\x3b\x3b\x1e\x57\x42\xe9\x16\xca\x5a\x7a\x7f\xcf\x48\x16\x35\x7e\x70\xe8\x1b\x6b\xbc\x6e\x91\xe5\x2b\x00\x00\xd1\xc5\xaf\x36\x41\xd8\xea\xc9\xe9\x06\x55\x7c\x2a\xac\x53\xe8\x50\xc5\x63\xe1\xe8\x06\xa5\x3a\x3f\x87\x98\xbb\x0e\x84\xa0\xca\x45\x46\x6a\x78\xc5\xc8\x1f\x38\xbe\xda\xca\xfa\xd7\xc0\xb2\xc8\x2e\x0b\x89\xec\x95\x14\x41\x85\x55\x2f\xd7\x47\x0e\x07\x5d\x81\x75\x70\x8b\x3f\x81\xaf\x5f\x1a\x04\xe6\x6b\x59\x6e\xd9\xdd\x65\x68\x87\xc5\xc6\xda\x2d\xbb\x3b\x1e\x93\xc0\xc0\xd9\x9d\x6f\xa4\xb9\x67\x1f\x59\xbe\xde\x69\x22\x74\xe3\x34\xb4\x43\xa4\xf1\xe5\x37\xc1\xa0\xbb\xdc\x60\xb9\x2d\xec\x1e\xf8\x97\xee\x0d\xf3\x58\x87\xaf\x4f\xe9\xe0\xb6\x71\xda\x50\x05\xec\xc6\xdf\x78\x06\xfc\xd1\x61\xa5\xf7\xc0\x78\xe8\x07\x4e\x71\x77\x57\xfc\x0d\x58\xf4\x6f\xd2\xdf\x20\x03\x8d\x7a\x75\xb6\xb3\xf4\xec\x5d\x2c\xc4\x66\x5b\xf7\x29\xc1\x3a\x87\x0b\x9b\xf7\x14\x12\x26\xdb\x17\x05\xbc\xdb\xc0\xd1\xd1\xa8\x64\x6b\x9d\xa6\x89\x21\x98\x8b\xf6\x35\x66\x4c\x66\xeb\x25\x2c\x0f\x57\xda\xba\xc6\xae\x98\x9f\xcd\x57\x6b\x4f\x6b\xdc\xd3\x10\xe2\xc3\x39\x6f\x32\xe5\x85\x96\xff\x39\x06\xe1\xab\x32\x7b\x08\x3e\xb3\xfc\xf9\x74\x72\xdc\xa6\x46\x9b\x7f\xef\x91\xae\x06\x7f\xd4\xe6\xaf\xb6\x75\x1c\xbc\xd1\x66\xf9\xae\xf0\x24\x27\x46\x7d\x1e\xca\x33\x49\x97\xc8\x72\x2a\xbb\x3c\x8c\x43\xb9\x60\x83\x07\xa8\xa7\x3e\x67\x22\xd9\x1f\x0d\x8b\x36\xf6\x20\xf2\xc0\x3d\xda\x7f\xf8\x93\x6e\x52\x18\xb8\x38\x27\x1a\x7f\x48\x57\x6f\x6b\xb9\x91\xc6\x60\xbd\xa4\xf1\x0f\x31\x65\xa2\xef\xbd\x82\x77\xd9\x2e\xb2\x8b\xdf\x14\x91\x75\x3f\x5a\xf9\x4a\x64\x4a\xb7\xf9\xaa\xe7\xfe\x1d\x00\x00\xff\xff\xa5\x02\xdd\xb9\xdf\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2527, mode: os.FileMode(436), modTime: time.Unix(1487516551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4d\x6f\xdb\x3c\x0c\xbe\xe7\x57\xf0\x15\x50\xe0\xdd\x21\x0e\x50\x14\xdb\x0e\x8e\x81\xee\x90\xb5\x43\x8a\x05\x6d\xb7\x6b\xa2\xc4\xb4\xa3\x56\x96\x3c\x49\xf9\x82\x91\xff\x3e\xc8\x5f\x69\xda\xa4\xb1\x33\x1b\xe8\xad\x91\x45\xf2\x79\x1e\xd2\x24\xeb\x24\xf1\x31\x60\x02\x81\x04\x8c\x1b\x54\xe3\x99\x14\x01\x0b\xc9\x76\xdb\x71\x7d\xb6\x84\x19\xa7\x5a\xf7\x89\xa1\x53\x8e\x5d\x85\x3a\x96\x42\xb3\x25\x12\xaf\x03\x00\xe0\xa6\xe7\x7b\x97\x20\xbb\xaa\x8d\x62\x31\xfa\xf9\xaf\xa9\x54\x3e\x2a\xf4\x73\xb3\xcc\x74\x8e\xd4\xdf\xfd\xce\xce\xd4\xfe\x41\x76\xe8\x7b\x6e\xcf\xf8\x75\x9f\x08\x1a\xe1\xf1\xa7\x4b\xca\x17\x07\x1e\xbb\xbd\x97\x10\xdc\xde\x2b\x90\xae\x99\x4a\x7f\x53\x01\x74\x92\xb0\x00\xf0\x0f\x38\x8f\x9b\x18\x81\x98\x15\x33\x06\x95\x55\xf5\x00\x18\x50\x72\xa5\x63\x2a\xfa\xe4\x0b\x81\x99\xe4\xd9\xdf\x97\xc4\xfb\x8e\x02\x15\xe5\x87\x59\x24\x09\x72\x8d\xb0\x17\x47\x73\x3a\x7b\x3e\x19\xe5\xb2\x5e\x14\xe1\x1f\x76\xe8\xc5\xd4\x92\x12\xfa\xb8\xca\x6f\x0e\x33\x97\x9c\x69\xf3\x88\x6b\x33\x95\x6b\x70\x06\x69\xdd\x39\xa3\xdc\x19\xfc\x1f\x2b\x26\x4c\x00\xe4\x42\x5f\x68\x02\xce\x48\x61\xc0\xd6\x40\x9c\xac\x40\x9d\x22\x2a\xf9\x74\x08\xd6\x89\x8c\xc2\x7b\x55\x36\xa7\x1a\x22\xf4\x19\xad\x4d\x68\x2a\x25\x7f\x40\x8e\xb3\x3d\x4a\x37\x54\xdf\x59\x77\x27\x29\xcd\xa9\x1e\xa7\x81\xcf\xe6\x54\xad\xde\x8e\x32\x5f\x28\x0e\x8d\x66\xf3\xd7\xfd\xb0\x72\x42\x17\x8a\x8f\xdb\x4b\xaa\x42\xb3\x42\x34\xe8\x37\x94\xd4\xfb\xc2\xdf\x49\x5e\x65\xe4\xe6\x49\x05\x74\x29\x15\x33\x08\x66\xae\x50\xcf\x25\xaf\xcf\xce\x64\x19\xfb\x19\xdc\x0a\x33\x32\xaa\xe4\x37\xc8\x5d\x3f\x16\x9e\x4f\xf2\x2c\xc0\x8c\x4b\x30\x2d\x66\xb1\x05\xc6\x65\x46\xab\x53\x2e\xe1\xb4\xc9\x99\x53\x11\xd6\x24\xe9\x32\x11\x2f\x0c\x04\x52\x45\x7d\x22\x97\xa8\x56\x36\x31\x04\xcc\x26\xc6\x3e\xb1\x02\x10\xb0\x73\xb1\x4f\x92\x24\xa7\x38\xb1\x14\x27\x25\xc5\x49\x41\xd1\x46\x9f\x6c\xb7\x04\xd2\x49\x69\x0d\x0a\xbd\x86\x54\x84\xdb\x2d\x39\x00\xab\x52\xa3\x7a\x3b\x4f\xdc\xff\xba\x5d\xf8\xcd\x34\x93\x02\xae\x47\xb7\xd0\xed\x56\x53\x68\x37\xd1\xbe\x12\x2f\xb3\x3f\xaa\xd7\xde\xc4\x1b\xd2\x29\x1e\x99\x77\x35\xfb\x5c\x16\xd5\x49\x1d\x9e\xac\x9a\x65\x76\x99\xdb\xcb\x8d\x97\xcb\x4e\x8c\x2b\xe2\x0d\xe8\xec\x9d\xdd\x87\x8a\x10\x15\x70\xf6\x8c\x9c\xcd\xa5\xac\xfb\x26\x35\x58\x64\xb9\x22\x01\x9d\xa1\x93\xa2\x1a\xef\x50\x1d\x2e\xbe\x5c\x70\x4b\xd0\xb9\xb6\x16\xc3\xd2\xe0\xec\x9a\x3c\xfa\x06\x4e\xf9\x42\x29\xf4\x3f\x9c\x54\x39\xae\x57\x62\x4d\xde\x57\xeb\x5b\x66\xd4\xa6\x5e\x76\x59\x5e\x21\xfd\x78\xb5\x55\x00\xab\x55\x5e\x37\xb9\x51\x9b\x8a\x3d\xc9\xcd\x87\x13\xeb\x49\x6e\x6a\xe9\xf4\x43\x6e\x5a\x94\x68\xaf\x71\xdb\xf6\xdb\x64\xdf\xb6\xc7\x55\xdb\x76\xaa\x67\xe3\x5d\x7b\x7f\x2c\x09\x3f\xa2\xea\xb9\xd9\xc9\x94\xf9\xac\x3e\x9c\xb2\xfb\x2d\x33\x95\xa1\x6c\x94\xa5\x0c\x65\x65\x86\x32\x94\xe7\xb3\xb3\xab\x8a\x5d\x80\x16\x34\xc4\x33\x97\x95\x57\xff\x7e\x17\xde\x8e\xeb\x11\x31\x01\x1a\x85\x61\x11\x8a\xfa\xe5\x5f\xae\xbd\x03\x2e\xa9\xf9\x7c\xf5\x72\xf5\x2d\x62\x3b\x77\x4c\x3c\x14\x11\x4e\x0a\xc9\x0b\xab\x88\x89\x71\x09\xac\xf9\x05\x38\xa2\xeb\xd6\x79\xd3\xf5\x39\xbc\xe9\xfa\x1f\x79\xbb\xbd\x17\x5f\x92\xdc\x5e\xfa\x95\xcc\xeb\xb8\x3d\x9f\x2d\xbd\x4e\xb1\x23\xff\x0d\x00\x00\xff\xff\x1e\xb5\x5e\x46\x9c\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5020, mode: os.FileMode(436), modTime: time.Unix(1487496537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9c\x5d\x6f\xdb\x3a\xd2\xc7\xef\xf3\x29\xe6\xe1\x53\x34\x2d\x4e\x6d\x9f\x9e\x62\x6f\x4e\x2d\x03\x45\xdb\x83\x0d\xb0\xed\xc9\x36\x29\x16\x8b\xc5\x22\xa0\xa5\xb1\xcd\x2d\x4d\x6a\x49\x3a\x4e\x60\xf8\xbb\x2f\x28\x52\xb2\x2c\xeb\xcd\x49\x9c\xe6\x45\xbe\x68\x6c\x69\x44\xfe\x39\x33\xe4\xf0\xc7\xc4\x5d\xad\x22\x9c\x30\x81\x40\x42\x29\x26\x6c\x4a\xd6\xeb\xa3\xe1\xff\x7d\xfa\xf3\xe3\xf9\x3f\x4f\x3f\xc3\xcc\xcc\xf9\xe8\x68\x68\x7f\x00\xa7\x62\x1a\x10\x14\x64\x74\xb4\x5a\x19\x9c\xc7\x9c\x1a\x04\x32\x43\x1a\xa1\x22\xd0\xb7\x0f\x8e\x65\x74\x3d\x3a\x02\x00\x18\xea\x50\xb1\xd8\xb8\x0f\xf6\x35\x59\x88\xd0\x30\x29\x20\x42\x8e\x06\xbf\xc9\xe5\xab\xf1\xc2\x18\x29\xde\xc0\x5c\x46\x94\xbf\x86\x55\x66\x6b\x5f\x97\x54\x81\x51\x10\x80\xb3\xea\xc7\x54\xa1\x30\x5f\x65\x84\xb9\xb7\xef\xb7\x1e\x61\x13\x78\x65\x54\x3f\xe4\x54\xeb\xaf\x74\x8e\x10\x04\x01\x1c\xbb\xfe\xa2\xe3\x62\x07\x89\x28\xa9\xe0\x95\xed\x89\x41\x00\xbf\xbe\x07\x06\x43\xb0\x2d\xcc\x18\x8f\x6c\xfb\xba\xcf\x51\x4c\xcd\xec\x3d\xb0\x5f\x7e\x29\x6b\x20\x55\x9a\x3c\x01\xc1\xf6\xc3\xff\x62\xff\x2e\x7d\xc0\xea\x4c\xac\xfa\xe6\x3a\xf6\x2a\x67\x2c\x8a\x50\x1c\xc3\xcb\x97\xae\xad\xbe\x90\x11\x6e\x06\x71\xf2\xf5\xf4\xfb\x79\xe9\x10\xd2\x97\x7b\xea\x92\xf2\x05\x42\x00\xc7\x13\xca\x35\x1e\xbf\xaf\x34\xdf\xf6\x13\x1c\xd7\x98\xfa\x00\x30\x21\x50\xfd\xf5\xfc\xcb\xdf\xac\xf9\xa7\xc4\xa9\x15\x0f\xad\x77\xae\x6e\x5f\x59\x03\x72\x8d\xcf\x2a\x1c\x46\x2d\xf6\x89\x46\x9a\xb3\xfb\x05\xe5\x1b\x5e\xa2\x32\x37\x0d\xca\xd1\xf6\xbb\xe1\x20\x3f\x83\x87\x11\xbb\x84\x44\x62\x60\x17\x0a\x43\x99\x40\x45\x36\xb3\x3b\xbf\x22\x08\x7a\x39\xa6\x7e\x45\xc8\x0c\xf2\x0d\xfc\x67\x31\x1f\x4b\xa3\xa4\xc8\x35\x90\xd8\xcc\xde\x8e\x3e\x26\xab\xd0\x42\x51\xbb\x56\x0c\x07\xb3\xb7\x45\x93\xdf\xd2\x56\x38\xd2\x88\x64\xf6\x08\xd7\x72\xa1\x40\x2e\x05\x8c\xa5\x39\xd6\xa0\xe5\x42\x85\xa8\xdf\xc0\x84\x71\x83\x4a\x03\x15\x11\xd0\x64\x09\xd2\xc3\xc1\xec\xb7\x42\xbb\x13\xa9\xe6\xc0\xa2\x80\xc8\x4b\x54\x4b\xc5\x0c\x12\x6f\x1d\x90\x81\x5b\x1a\x07\x04\xe6\x68\x66\x32\x0a\x48\x2c\xb5\x21\x80\x22\xb4\x19\x13\x90\xf9\x82\x1b\x16\x53\x65\x06\xb6\x99\x5e\x44\x0d\x25\xa3\x61\xf2\xa1\xd0\x0d\x13\xf1\xc2\xd8\x3c\x9f\x6f\xf5\xe4\x9a\xd1\x8b\xf1\x9c\x19\x02\x49\xd6\x04\xe4\x8c\x5e\x22\x49\x47\x3b\x36\x02\xc6\x46\xf4\xf8\x34\xf9\x11\x2b\x36\xa7\xea\x9a\x80\x36\xd7\x1c\x03\x12\x31\x1d\x73\x7a\xfd\x3b\x13\x9c\x09\x24\xa3\xa3\x92\xd1\x15\x87\x33\x61\x1c\x73\x63\x9a\xa2\xa9\x6e\xae\x98\x3b\x7e\x20\xa5\xba\x3f\xc9\xa5\xe0\x92\x46\x4d\xda\x0b\xae\xf1\xee\xda\x5f\x78\x8b\x60\xdc\xc9\xb8\xbe\xc7\xfb\x8f\x6a\xa7\x4d\xab\x9d\x80\xa0\x73\xab\xf4\x7a\x2c\x4d\xdf\xd7\xdd\x56\x12\x8b\x39\x35\x1c\x44\xec\x32\xe7\xb3\xd5\x8a\x4d\xa0\xff\x05\xb5\xa6\x53\x5c\xaf\x4b\x67\x1f\xe5\xa8\x0c\x24\xff\xf6\x22\x2a\xa6\x76\x1e\xaf\x56\x9b\x87\x7c\x9b\x9b\x26\x51\x44\x76\x26\x6f\x1a\x9b\xbd\x1b\x9d\x2f\x99\x31\xa8\xe0\x9c\xcd\xd1\xea\xb4\x53\xea\xdd\xa8\xb4\x3f\x43\xc7\x1c\x7b\x0a\x75\x2c\x85\x66\x97\x3b\x43\x4a\xee\x6f\x19\x83\x7b\x44\x1b\xc5\x62\x8c\xfc\xa7\xb1\x54\x11\x2a\x8c\xca\x1c\x6c\xec\x26\x64\xf7\xba\xbb\xa7\xca\x6f\xb8\x9b\xd1\x48\x87\x0a\x51\x24\x11\xd1\xc3\x81\xa9\x68\x26\xb5\xc6\xab\x90\x2f\x22\x04\x85\x31\x67\x6d\x1e\x60\xc2\x3f\x60\x5a\x18\x87\x72\x21\x4c\xb3\x99\x34\x33\x54\x2d\x9a\xab\xb6\x18\x0e\xca\xdc\x32\x1c\x54\x38\x72\x68\x36\x1b\xbb\xe2\x6b\xb5\x52\x36\x89\xe0\x05\x13\x11\x5e\xbd\x81\x17\xc6\xa7\x04\xfc\x1e\x40\xdf\x2d\xcf\x7d\x9f\x2e\xfd\x2c\x5d\xd6\xbb\xe5\x08\x1a\xa3\x55\xbb\x78\xba\x8a\x9d\x4e\x2d\xe3\x3b\x4c\xc5\xe8\xbe\x2f\xa9\xd9\x6c\x4e\x36\x48\x64\x50\xef\xc1\xca\x9b\x6e\xe4\x9c\x69\x73\x8e\x57\x66\x2c\xaf\x36\xe3\xee\x9f\x25\x19\x65\x4b\xb9\x86\x12\x21\x2e\xe1\x2e\x92\x84\x23\x15\x7e\x00\x17\x8d\x86\xf8\x36\xa8\x1b\x4b\xc9\xcf\x90\x63\x58\xd0\xf7\xd9\xe5\xf0\x37\x97\xc2\x65\x12\x7d\x96\x5f\xf8\x2c\xff\x29\x2a\x4f\xdc\xc4\xf9\x66\x4a\x15\xfa\x69\x75\xa1\xcc\x61\xd5\x19\x17\xdd\x3f\x27\x27\xc2\x9c\x1a\x95\xd3\xf7\xd1\xce\xd5\x32\x69\xc9\x24\x3e\xa0\xa8\xa1\xdb\xfa\xf9\xb4\x77\x1f\x76\x8a\x12\x13\x13\x49\xc0\xd6\xbe\x9e\x91\xd3\xa9\x2d\x2c\x09\x65\xa5\xd7\xa8\x9a\xa2\x09\xc8\xff\x7b\xf9\xbd\x4c\x7e\xcf\x6d\x97\x2e\x56\x2b\x37\xa1\xd7\xeb\x92\x05\xb7\xf8\x8a\xd0\x50\xc6\x35\xcc\x50\x61\xbd\xf6\x81\xd3\x5b\x33\xfc\x7b\x70\x8e\xaf\x7a\x20\x45\xc8\x59\xf8\x23\x20\x1b\x24\x35\x33\xa6\xdf\xc0\x71\x0b\xb7\x1c\xbf\x26\x23\x47\x41\xb7\x19\x54\xf9\x42\x0c\xb9\xba\x5b\xee\x86\x86\xa2\x56\xef\xa3\xd2\x4d\x55\x36\xd4\x01\x8d\xa2\xc2\xe6\xaa\x39\x03\xea\xf6\x4d\x5f\x71\xb9\x13\x82\x74\xb7\x54\xb3\xfe\x42\xc9\x7e\x67\xf7\xfe\xcd\x6b\xe0\x43\xb1\xa8\xac\xc5\xbb\x35\x77\x38\x48\xf6\x42\x75\xfb\xbf\x3b\x28\xc6\xf9\xcd\x5b\xb2\x68\xc0\x84\x46\x48\x12\x3a\x6a\xb3\x5e\xd8\x0d\x5b\xf2\x3e\x20\xbd\xb7\x04\x94\x74\xdb\x5a\xca\xe5\x94\x00\x55\x8c\xf6\x38\x1d\x23\xe7\x18\x8d\xaf\x5b\xb5\xd8\x33\xcc\xf0\xd2\xdd\x7a\x51\x69\x2f\xed\xc6\x77\x2a\xc3\xc5\x1c\x45\x55\x02\xef\x3e\x6e\xd1\xb6\xda\xbe\xfc\x19\x7f\x00\x76\x8b\x75\x29\xe4\x52\xa3\x5f\x99\x23\xa6\xe7\x2c\x6b\x9c\x8c\x5e\x5a\xbf\xe8\xf7\xcd\x6b\x0c\xb8\x9d\xf9\xb6\x36\xe7\xb8\xb6\x91\x4b\xfd\xfc\xc9\x2d\xe7\xdb\x5b\xfa\x9d\xbe\xb6\x31\xa1\xd9\x4f\x36\x9d\x9b\xbc\x34\x7b\x37\xfa\x23\x51\x55\xdf\x37\x14\x4e\x1c\xfc\x48\x52\x92\x7a\x25\x70\xf9\x85\xc6\x40\xce\xaf\x63\x24\x59\x8d\x26\x40\x5c\xe3\x24\x57\xc6\xdd\x15\x20\xa7\x0a\x27\xec\x8a\x94\x14\x74\xf2\xba\xa6\x96\xa7\xaa\x3f\x84\xfe\xbc\x62\x0f\xd5\x6e\x05\x6e\xa1\xda\x35\x9e\x57\xed\xae\xdc\x58\xf5\xde\xb1\x9b\x48\x69\x6e\x97\xe3\x59\xed\xc5\x09\x5d\x70\x53\x91\xed\x1f\xed\x4c\x68\x53\x4f\x2b\xf5\x57\xdc\x2a\xb9\x5c\xc5\xb9\xd9\xfd\x1c\xe6\xfe\x41\x2f\xa5\x85\x8d\xe7\x82\xb9\x4f\x02\x44\x27\x3e\x68\x65\xb5\x2f\x0b\xe8\x7d\x81\x68\x2a\xe6\x1e\x40\x34\xed\xaa\x1c\x44\x37\x42\xee\x0d\x44\x77\x20\x2a\x53\x58\x80\xa8\x8d\xb6\x47\x09\x51\x99\xfc\x0e\xa2\xf2\x10\x55\xe3\x96\xa7\x06\x51\xd9\x50\x3b\x88\x6a\x6f\x71\x50\x00\xba\x49\x11\x68\x03\x40\x75\x73\xfd\x66\x00\x54\xd3\x62\x07\x40\x77\x08\x40\x2d\xfc\xfc\x0c\x00\x28\x2b\xc1\x95\x00\x94\xf9\xe9\x01\x01\x50\xa6\xba\x12\x80\xda\xa9\xee\x00\x68\x4f\x00\x3a\x43\xaa\xc2\xd9\x23\xe6\x9f\xff\x2e\x50\xb5\xfa\x85\x9d\x42\xbd\xe0\xae\x08\x3f\x13\x4e\xd2\x49\x6c\xcb\x0a\x64\x1a\xf5\xfb\x82\x24\xed\xfb\x3b\x3c\x23\xb9\x9e\xfa\x7f\x77\x59\x01\xbb\x0a\x7c\xbe\x1c\x94\x8b\xf4\xe6\xd7\x5e\x5e\xcf\xb7\x24\xf9\xec\xfa\x57\x22\xc9\x65\xe6\x85\x71\xab\x23\x01\xa2\x30\xb4\xb5\x1a\xc8\x9c\x5d\x59\x67\x91\x58\xc6\x0b\x4e\xd5\xfd\xc2\x9c\x97\x5e\x40\xb9\x4c\xf5\xa3\x24\xb9\x54\x7d\x07\x72\x79\x90\xab\xf6\xca\x53\xe3\xb8\x74\xa4\x1d\xc6\xdd\xa5\xc5\x41\x41\x6f\xef\x2a\xd6\x86\xf2\x6a\xd6\x81\x9b\x41\x5e\x75\x83\x1d\xe3\xdd\x21\xe3\x35\xbb\xf9\x19\x20\x9e\x2f\xcc\x95\x80\x97\x3a\xe9\x01\xf1\x9d\x97\x5c\x49\x77\xad\x24\x77\x70\xb7\x27\xdc\x9d\x72\x1a\x22\x7c\x95\x86\x4d\x58\x48\x77\xe3\xfc\x88\x30\x8f\x72\x2e\x97\xa0\x91\x4f\x9a\x0b\xd5\x42\xd7\x42\xd9\x1d\x22\xd7\xed\xb6\x28\xab\x55\x38\xc3\xf0\x87\xe5\x84\x62\x69\xcb\xc7\xac\x9f\x84\xb1\xff\xc1\x7a\xe0\x0c\xf9\x64\x33\x6b\x44\xde\x2a\x4e\xac\x12\x3f\x5d\x58\x3f\x1d\x14\x16\xf2\xcc\xd5\x42\xfb\x77\x1b\x91\x5a\xdd\x49\xcc\x6e\x26\xf9\x2e\x77\x1f\xf9\xd9\x73\x22\x0c\x2a\x5a\xb2\x3c\x76\xd3\x66\xeb\xea\x03\x9a\x36\xb9\x90\x95\xcd\x17\x96\xbb\xfd\x00\x26\x4a\x5e\x6d\x61\x86\xe4\x95\x3e\x94\xa9\x71\x83\x73\x9f\xc8\x7f\xdf\x27\xc3\xa4\xd5\xaa\xe8\x84\x4f\xde\x24\x21\xf0\xad\x79\x78\xc6\x69\xf8\x03\xfc\xd7\x17\x1e\xef\x01\x65\x38\xa3\x42\x20\xbf\xd5\x29\x61\xb3\xc5\x21\xcf\x11\xe7\x7a\x9a\xc7\xaf\x24\x2e\xe9\xd7\x4a\x0e\x7e\x84\xa8\x93\xde\xe6\xbe\xb7\xc3\x1f\x20\xce\xf5\xb4\xff\xd1\x87\x0c\x8a\xbd\xa7\xb1\x7c\x2c\xc7\x5e\x89\xfc\x5e\x2a\xbf\x3b\xf4\xd2\x6f\xe0\xb8\xc9\x27\x4f\xed\xc8\x2b\x1d\xe9\xbd\x1e\x79\x25\xd0\xee\x7b\xee\x09\x5c\xf6\x7c\xb8\x1e\xf4\x51\xd8\x41\x8f\xb1\xf6\x59\x44\xeb\x4e\xb0\x1a\xa7\xf4\x7e\xe7\x57\x4d\xcd\x75\xa7\x57\x77\x70\x7a\xd5\xd6\xc9\x4f\xed\xec\x2a\x19\x77\xfe\xe4\xca\x16\xd7\x9d\x63\xab\xed\x1a\xfb\xb3\x0e\xad\x52\xad\xd9\x91\x95\xd5\xba\x73\x5e\xb5\x87\xd6\xee\xb4\xaa\xe5\x69\xd5\x89\x08\xe5\x9c\x89\x29\xfc\x03\xc7\x33\x29\x7f\x3c\xde\xad\x3e\x8a\x28\x96\xac\xcd\x1f\x0e\xa4\x69\xf9\x78\xa1\x80\x89\x7c\x39\xf3\xa1\xeb\xa7\xb1\x3c\x38\x16\x2c\x7d\x87\x2c\xed\xf0\x00\x64\x50\xaf\xc7\xe0\x95\xa9\x56\x93\xa6\x42\x8e\x7c\x5f\x30\xd1\xff\xec\x2f\xd7\x6e\xbd\x6f\xbb\x4f\xb6\xca\xa8\x42\xba\xab\xbc\x4a\x6d\x9a\x8e\x04\x42\xc9\x75\x40\xde\xfd\x6a\xcb\xf8\x52\x07\xe4\x2f\x64\xe4\x94\x9f\x7b\x93\xf5\x7a\x38\x48\x3b\xf8\xb9\x5b\xfd\xb6\x10\xe4\x87\xdb\xcb\x86\xdb\x71\x90\xe5\xa0\x16\x6e\x79\x6a\x28\x94\x0d\xf5\xfe\x59\x28\xed\xfa\xd1\xc0\x50\xb3\xc5\x41\x71\x69\xbf\xf2\x52\x07\x4c\x6d\xa6\xff\x7e\xcc\xd4\xa2\xc5\x0e\x9b\xee\x00\x9b\xf6\xf0\xf3\x4f\x25\xa7\x03\xd0\x88\x1f\x7a\x9e\x47\x98\xd8\xc5\x91\x9d\x4a\xde\x11\x49\xd3\xe5\x36\x44\xf2\xe1\xf4\x24\x85\x91\x8e\x45\x72\x96\x0f\x95\x45\x68\xcc\xca\xaa\xc5\x87\xd3\x93\x7b\xe3\x10\x1a\xb3\x87\x81\x20\x89\x90\x32\xfa\xa0\x31\x7b\x58\xf8\x91\x28\x6d\x22\x0f\xab\xba\x43\x8f\x27\x8a\x1e\x36\x03\x9e\x3e\x75\xd8\x51\x76\x7f\x6f\xdc\xde\xe2\xa0\x5c\xd1\xbe\x54\xb4\x61\x8a\xf2\x04\xbe\x21\x4e\x94\x37\xd6\x91\xc4\x1d\x92\x44\xbd\x8b\x9f\x01\x44\xd8\x72\x5a\x49\x11\xd6\x3b\x1d\x40\x34\x5d\xae\x03\x08\x7f\x6f\x38\x70\x4b\xd5\x70\xe0\xfe\x9f\xf5\xd4\xe6\x7f\x01\x00\x00\xff\xff\x3f\x3d\x74\x1e\x94\x5d\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 23956, mode: os.FileMode(436), modTime: time.Unix(1487518481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x3e\x14\xc5\xdf\xfb\x57\x58\x7e\xfd\x7e\x1b\xaf\x3f\x46\xbb\xa9\xa9\xc4\x60\x94\xc2\xf8\x31\x28\x20\xf6\xe6\x3a\x37\x89\x43\x6c\x07\xdf\x9b\xa6\x59\xd5\xff\x7d\x6a\xca\x28\x42\x43\xea\x5b\xce\xb5\x7c\x72\x3e\x3e\xba\xab\x55\x04\xb1\xb6\xc0\x78\x0a\x32\x02\xcf\xd7\xeb\xd6\x68\xf3\x39\x6e\x31\xc6\xd8\xc8\x00\x49\xa6\x52\xe9\x11\x28\xe4\x77\xb3\x93\xf6\x90\xbf\x3d\xb2\xd2\x40\xc8\x17\x1a\xaa\xc2\x79\xe2\x4c\x39\x4b\x60\x29\xe4\x95\x8e\x28\x0d\x23\x58\x68\x05\xed\x46\xfc\xcf\xb4\xd5\xa4\x65\xde\x46\x25\x73\x08\x3b\x7c\xdc\xda\x3a\x91\xa6\x1c\xc6\x17\xf5\xdc\xd1\x48\x6c\xc5\xcb\x49\xae\xed\x13\xf3\x90\x87\x1c\xa9\xce\x01\x53\x00\xe2\x2c\xf5\x10\x87\x3c\x25\x2a\xf0\xab\x10\x46\x2e\x55\x64\x83\xb9\x73\x84\xe4\x65\xb1\x11\xca\x19\xf1\x3a\x10\xbd\xa0\x17\x0c\x84\x42\xdc\xcd\x02\xa3\x6d\xa0\x10\x39\xd3\x96\x20\xf1\x9a\xea\x90\x63\x2a\x7b\xc3\x7e\xfb\xdb\xfd\xa3\xd6\xb7\xd3\x13\x38\xef\x44\x13\x73\x76\x73\xf8\x54\xab\xf2\xf4\xf0\xf4\x26\xe9\x75\xaf\xcc\x9d\xaa\xaa\x81\xb3\xbd\x9b\xc7\x28\xe9\xdf\xcb\xff\xae\xcd\xed\x0c\x7f\x8b\xf3\x83\xe1\x62\x1e\x7d\xcf\xd2\x7e\xc9\x99\xf2\x0e\xd1\x79\x9d\x68\x1b\x72\x69\x9d\xad\x8d\x2b\xf1\xef\xc3\xed\x03\xa5\x22\x9b\x61\xa0\x72\x57\x46\x71\x2e\x3d\x34\x44\x32\x93\x4b\x91\xeb\x39\x8a\xd8\x59\x6a\xcb\x0a\xd0\x19\x10\xfd\xe0\x20\xe8\x35\x78\x6f\xc7\xaf\x84\x7b\xfc\x55\x48\x44\x20\x6c\x3c\x54\x89\xe4\xcc\xcb\xcd\xed\x55\x54\x5e\x17\xc4\xd0\xab\x5d\xc0\x4d\x96\x20\x71\x2e\xc9\x41\x16\x1a\xdf\xe5\xcb\x9e\x4b\xf0\xb5\xe8\x04\x9d\x6e\xd0\x7f\x51\x4d\xa0\x0c\xf9\x78\x24\xb6\x86\xe3\x8f\xdd\xf7\xed\x34\x7b\x5f\x69\xf6\xcf\x46\x67\xea\xf3\xf4\xa7\x9e\x7f\xea\x0e\x9e\x17\x75\x76\x7b\x11\x9f\x66\x57\x17\xf2\xc7\x53\x5c\x3e\xdc\x2f\x7f\x2d\xef\xae\xed\xd1\xd9\xe1\x20\xef\x9a\xa3\x87\xcb\x69\x31\xf9\x62\x26\x47\xc7\xc3\x6a\x72\x39\x55\xd7\xc7\x83\xd9\x52\x7e\xdc\xe8\x8e\xe5\x63\x98\x22\x97\x14\x3b\x6f\x02\xaa\x34\x11\xf8\x86\xa4\xd2\x51\x02\x84\x4d\xe0\xd7\xfd\x2a\x29\xde\xec\xd7\xce\x74\x24\xb6\xbb\xb8\x5a\x81\x8d\xd6\xeb\xd6\x9f\x00\x00\x00\xff\xff\x0f\xae\x36\x4f\xaf\x03\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 943, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x8e\xdb\x36\x10\xbe\xef\x53\x4c\xd9\x1c\x5a\x20\xb2\x90\x04\xe8\x21\x90\x05\xa4\x49\xd0\x06\x48\xd2\x20\x4d\x0b\xf4\x38\x12\xc7\x12\xb3\x14\x47\x25\x69\x6f\x5d\xc1\xef\x5e\x50\xb2\xbd\x96\x2d\xc9\x6b\x27\x6d\x7d\xb0\x65\xcd\xdf\xc7\xe1\xcc\x37\x94\x9a\x46\xd2\x42\x19\x02\xa1\x8c\xa4\xbf\xc4\x66\x73\x93\x7c\xf3\xea\x97\x97\x9f\xfe\xf8\xf0\x1a\x4a\x5f\xe9\xf4\x26\x09\x3f\xa0\xd1\x14\x73\x41\x46\xa4\x37\x4d\xe3\xa9\xaa\x35\x7a\x02\x51\x12\x4a\xb2\x02\x66\xc1\x30\x63\xb9\x4e\x6f\x00\x00\x12\xa9\x56\x90\x6b\x74\x6e\x2e\x72\x36\x1e\x95\x21\x2b\x3a\x59\xf8\x1c\xba\x30\xb8\xca\x70\xeb\x62\xaf\x70\xe8\xe0\xf3\xb2\xca\xd8\x5b\x36\x07\x0e\x5a\x9d\xf2\x49\xfa\x6e\x9d\xb1\x4f\xe2\xf2\xc9\xb1\xe8\xe9\xce\x5a\x13\x4a\x91\xe2\xd2\x73\x85\x5e\xe5\xa8\xf5\x1a\x72\xd6\x9a\x72\x0f\x68\x24\x64\x96\x51\xe6\xe8\xc2\xbf\x35\xdc\x2a\x23\x1d\xf0\x02\x94\x59\xb0\x0d\x16\x6c\x60\xc1\x16\xd6\xbc\x4c\xe2\xf2\x69\x3f\x4c\xd3\xa8\x05\xcc\x7e\x64\xff\x1e\x2b\xda\x6c\xfa\x10\x10\x4a\x4b\x8b\xb9\x28\xbd\xaf\xdd\xf3\x38\xf6\x77\xca\x7b\xb2\xb3\x9c\xab\xb8\x69\xee\xad\xc4\x0e\x69\xe6\x0d\x64\xde\x44\xba\x68\x7f\x1c\xe7\x0a\x75\xa4\x72\xee\x6e\x6f\xed\x45\x9a\xb8\x1a\xcd\xce\x68\x81\xb0\xc0\x9d\x2c\x5c\x62\xee\xd5\x8a\x44\x9a\xc4\x41\x2d\x4d\x62\x3c\xc6\x4c\xda\x9d\x05\x8b\x75\xed\x66\x07\x88\xbf\x32\xc8\x1a\x9d\x3b\x87\xd2\xc8\xf3\x19\x25\xf2\x92\xf2\xdb\x7f\x11\xe9\x3e\xc6\x38\xd6\x13\x5c\x39\x1b\xc7\x9a\x66\x92\x56\xa4\xb9\x26\xeb\x66\x05\x73\xa1\xa9\xdd\x7b\xac\x95\x0b\x5f\xf1\x4a\x39\xc5\x66\x2b\x0a\x77\x5b\xf1\x9f\x4b\xf6\xe8\x1e\xba\x8a\xce\x78\x70\x11\x9d\xe8\x21\x25\x71\xb2\x80\x42\xf9\x72\x99\xb5\x70\xd4\x1d\x7a\xbc\xc5\xb8\x0a\x8d\xf6\x60\x54\xad\xfd\x30\xaa\x56\x74\x0e\x55\x12\x4b\xb5\x4a\x0f\xe8\x60\xa9\x77\x6e\x0c\xae\xc0\xe0\x2a\xaa\x95\xd6\xae\xbd\xfa\xbc\x74\x5e\x2d\x14\xc9\x1e\x3f\x24\x5a\x81\x65\x4d\x73\x51\x5b\x72\x64\x7c\xdb\xcb\xfb\x15\xec\xa3\x23\x48\xf4\x18\x79\x2e\x8a\xa0\xec\x31\x13\xdb\x6c\x7c\x5b\x72\x45\x22\xfd\x99\x2b\x0a\xe0\x92\x58\xab\xc3\x00\x4d\x63\xd1\x14\x04\x8f\x6e\x69\xfd\x18\x1e\xad\x50\xc3\xf3\x39\xcc\x5e\x76\xdc\xa2\xd8\xbc\xc3\xba\x57\xc1\x23\x88\x26\x21\x34\x4d\x70\xbf\xd9\x88\x74\x77\x35\x0c\xa5\xdf\x2d\x49\xbc\xd4\xe9\x30\x99\x7a\xcc\xa2\xc0\xc8\x64\xfc\x31\x9d\x06\x2d\x25\xe7\xa2\x5d\xf6\xa1\x7e\x8d\x26\xd4\x91\x24\x50\x06\x76\x89\xeb\xd9\x1e\x47\x09\x16\x1a\xda\xef\x48\x86\x2c\xd9\x01\x83\x41\xa3\x28\x4c\x14\x65\x8a\x11\xfd\xd6\xa6\x7c\xd6\x37\xf1\xca\xeb\x6e\x2b\xbb\xac\xc5\x9a\x8b\x58\xa4\xaf\xad\x65\x0b\x6f\xb9\xe8\x52\x56\x3e\x1b\x81\xd0\xd5\xda\x90\xa8\xe3\xf7\xb7\x5c\x1c\x31\xd1\xf4\x0a\xc2\x18\x14\x69\x52\x5b\x4a\x93\x9c\x25\xa5\x4d\xd3\xf9\x48\xe2\xf6\x6f\x12\xb7\xa2\xa9\xb0\x03\x14\x7d\x2e\xde\x38\x40\xaa\xd2\xf7\xec\x4b\x65\x0a\xf0\x0c\xae\xe4\xbb\x24\xa6\xea\x8a\x64\x9c\x52\xf2\x84\xc9\x58\x39\x84\xc1\xfa\x5f\x16\xc3\xf4\xb0\x48\x3f\x6d\xa9\xfe\xbe\x6d\xdd\xd5\xe5\x72\xf1\xd6\x74\xf5\x35\xce\x18\x47\xee\x43\x53\x8f\x09\xe1\x1a\x46\x1a\x88\xd1\x27\x96\x11\xa5\x5d\x6e\x9b\x26\x04\x39\x66\xa7\xe9\x00\xf1\xb9\x08\x63\x75\x76\xef\x61\x2a\x0f\x93\xbd\x03\x97\xb6\xc3\x39\x3c\x63\xb5\xff\xbf\xb6\x44\x57\x55\x6f\x2a\x2c\xe8\x85\x41\xbd\x76\xca\xbd\x42\x3f\x99\x93\x91\x26\xfa\xa9\x3b\x42\xfc\xde\x1e\x54\xe0\xc5\x87\x37\xf0\x91\xdc\x52\x7b\xf8\xae\x69\x86\x02\x7c\x3f\xde\x36\xf0\xa0\xbd\xb9\x10\xc7\xd9\x70\x97\x6e\x1c\x5c\xdf\xc5\x6d\x3a\x7e\xfb\xf8\xf6\x81\xa3\xc2\xf2\xdd\x84\xcb\x63\xed\x9c\x75\x54\xc9\xe8\x87\x33\x26\xd0\x6f\xce\x0e\xd3\xaf\xbc\xb4\x79\x78\xce\x48\x13\x55\x15\xe0\x6c\x7e\x2f\x6b\xf1\xee\x67\xbd\xaa\x8a\xc8\x92\xab\xd9\xb4\x87\xf3\xc7\x80\xda\xcf\x45\xab\x08\x18\x36\xfa\x6f\x92\x90\xad\xe1\x64\x3b\xc4\xe9\x99\xf2\x04\xd6\x78\xc2\xbf\x74\xc1\xbd\x41\xdb\xab\xca\xae\x4a\x8e\x06\xef\x97\xc0\xbc\x7a\x68\x5f\x42\x3a\x5f\x87\x70\x06\x6e\x5d\x31\x1f\xf6\x87\xc2\xfd\x41\x74\xf0\x60\x38\x74\x1c\xc4\xbd\x66\x37\x62\xa3\xc2\x2a\x29\x4e\x26\xc7\xe9\xd3\xc8\x10\xf0\xe3\xf3\xed\xfd\xe3\xc1\xf6\x3a\x89\xbb\xb7\x0f\x49\xdc\xbd\xb5\xd8\x99\xfc\x13\x00\x00\xff\xff\x9b\xbd\xff\xb2\xe1\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4321, mode: os.FileMode(436), modTime: time.Unix(1486313596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x3d\x6f\xc2\x30\x10\x86\xf7\xfc\x8a\xab\x97\x4e\x10\xc1\x6c\xbc\xd0\x6e\xa8\xed\xd0\xa5\xa3\x13\x1f\xb1\x5b\xe7\x2e\x72\x0c\x14\x45\xfc\xf7\x2a\x98\x8f\xc8\x25\x43\x6c\xeb\xbd\xe7\xbd\x0f\xdd\x30\x18\xdc\x3a\x42\x10\x9e\x1b\x71\x3a\x15\xf2\xe9\xe5\x7d\xfd\xf9\xf5\xf1\x0a\x36\xb6\x5e\x15\x72\x3c\xc0\x6b\x6a\x56\x02\x49\xa8\x62\x18\x22\xb6\x9d\xd7\x11\x41\x58\xd4\x06\x83\x80\xf9\x08\x56\x6c\x8e\xaa\x00\x00\x90\xc6\xed\xa1\xf6\xba\xef\x57\xa2\x66\x8a\xda\x11\x06\x91\xb4\xf1\x9b\x5a\x90\xde\x57\xfa\x62\x71\xd5\xa7\xfc\xf7\xae\xad\x38\x06\xa6\x09\x7f\x8e\xb1\x0b\xb5\xe1\xa6\x97\xa5\x5d\xe4\xca\xf2\x0a\x7b\xd4\x46\xa8\xb5\xc5\xfa\x07\x8e\xbc\x0b\xc0\x07\x82\x8a\xe3\x73\x0f\x3e\xb1\xcb\x3b\x2b\x4b\xe3\xf6\xea\x61\x11\x9d\x26\xf4\x70\xfe\xcf\xba\xe0\x5a\x1d\x8e\x79\x39\x79\xf4\x6c\x1c\x47\x16\x94\x7a\x77\x5b\x98\x6f\xb8\x99\xf4\x7b\x33\xe9\x02\xaa\x61\x48\xaa\x2c\xc7\xd7\x03\x1e\x7d\x8f\x8f\x60\xbb\x98\xb6\x0d\x11\x7f\xe3\xac\x46\x8a\x18\xd2\xfd\x56\xf8\x1b\x47\xeb\xa8\x81\xc8\xd0\x5b\x3e\xfc\x9f\xe0\x25\x0f\x99\x2c\x4d\x3e\xa1\xfb\xf3\x72\x95\x65\x5a\x02\x59\xa6\xe5\xb9\x9a\xfc\x05\x00\x00\xff\xff\xbc\x4b\x6b\x86\x66\x02\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 614, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\xcf\x6e\x9c\x30\x10\xc6\xef\x3c\xc5\xc8\x3d\x53\xbf\x00\x70\xe9\x35\xc9\xa5\x4f\x30\xe0\x31\x19\xd5\x19\x53\xdb\xa0\x54\x28\xef\x5e\xf1\x6f\x43\x58\xb4\x5a\xa9\x52\xa5\x3d\x81\x3f\xbe\x99\xf9\xfc\xb3\x19\x47\x43\x96\x85\x40\x09\x0e\x35\x06\xf5\xf1\x91\x15\x82\x03\x34\x0e\x63\x2c\x57\x15\x96\x47\x6e\xc8\x62\xef\xd2\xb6\x64\x19\x28\x44\xda\x96\x96\xdf\xc9\xe4\xc9\x77\xaa\xca\x00\x00\x0a\xc3\x97\x3e\x8d\x97\x84\x2c\x14\x72\xeb\x7a\x36\xab\xe3\xe8\x5a\x1b\xbd\x12\x1a\x0a\x3b\xcf\xec\xab\xfb\x94\xbc\x1c\xac\xc9\xb7\xad\x23\x68\xbc\x73\xd8\x45\x32\x0a\x0c\x26\x5c\xe5\x69\xec\xa2\x6f\x32\x86\x96\x52\xa9\xbe\x2d\xd5\xcf\x24\x7d\x54\x80\x81\x31\xa7\xf7\x0e\xc5\x90\x29\x95\x45\x17\xe9\x30\x7c\x0e\x10\x3b\xbc\x8c\xe7\xc6\x4b\x3e\xf1\xaa\x0a\x3d\xe9\xff\xd3\x5e\xe8\x05\xc5\x41\xc5\x03\x9a\x3a\xa0\x18\x05\xaf\x81\x6c\xa9\xb4\xaa\x9e\xff\xd4\x3e\x15\x1a\x77\xe8\xb5\xe1\xe1\xe6\x49\x6c\xfc\xe0\x13\x24\x9b\xed\xeb\x82\xef\x90\xa2\x77\xbb\x16\xdb\xcd\x10\x1c\x4e\x80\x8e\x23\x5b\xa0\xdf\xf0\xfd\x65\x76\xbd\xe0\x1b\x81\xfa\xe1\xc5\x72\x3b\x5d\xc3\x2b\x42\x8e\x77\xad\x73\x4e\xf4\x06\xd8\x24\x1e\xce\x0e\x6b\x1c\xc9\x45\xba\xaf\xcb\x79\xb9\x98\x93\xea\x2b\xd0\xb9\x63\xf9\x75\x81\xdc\xcc\xe1\xb5\xaa\x96\x5d\x7c\x81\xfd\x09\xdd\x71\x95\xdd\x07\xe3\xc9\x3f\x2a\x09\xe7\x27\x0c\x4f\xfe\xdf\x19\xfc\x4c\x98\xfa\xf8\xa0\x18\xe2\x1c\x5e\xab\x6a\xd9\xc5\x0d\x18\x5f\x95\xde\x9d\xfe\xa5\xeb\x6b\xa1\x05\x87\x2a\xdb\x32\xfd\x0d\x00\x00\xff\xff\x0c\x54\x48\x91\xc4\x05\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1476, mode: os.FileMode(436), modTime: time.Unix(1484921411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x96\x41\x8b\xdb\x3c\x10\x86\xef\xfe\x15\xf3\xe9\xfe\xad\xd9\x3d\x16\xad\xa1\x6c\x0a\xa5\x74\x69\x20\xe9\xa1\x47\xd9\x9a\xac\xd5\xc8\x92\xd1\xc8\x2e\x21\xec\x7f\x2f\xb2\x22\xe2\x66\xed\x6e\xb3\x4d\x6f\xc9\x25\xd8\xef\xcc\x3b\x23\x3d\x63\x98\xfd\x5e\xe2\x46\x19\x04\x46\x5e\xf8\x8e\xd8\xf3\x73\xc6\xff\x5b\x7c\x79\x58\x7f\x5b\x7e\x80\xda\x37\xba\xc8\x78\xf8\x03\x2d\xcc\xd3\x3d\x43\xc3\x8a\x6c\xbf\xf7\xd8\xb4\x5a\x78\x04\x56\xa3\x90\xe8\x18\xdc\x84\xc4\xd2\xca\x5d\x91\x01\x00\x70\xa9\x7a\xa8\xb4\x20\xba\x67\x95\x35\x5e\x28\x83\x8e\x45\x2d\xfc\xc6\x16\x46\xf4\xa5\x38\x58\x24\x7d\x9c\xff\xbd\x6b\x4a\xeb\x9d\x35\xa3\xfc\x21\xa6\xbe\x2d\x96\xce\x56\x48\x04\xab\xa1\x7b\x9e\xd7\xb7\xa7\x31\x77\xc9\x46\xa3\x90\xac\x78\xa8\xb1\xda\x42\x7b\x48\x8b\x87\x46\x02\x61\x24\x78\xb1\x45\x68\x50\x50\xe7\x90\x40\x6d\x40\x98\x5d\x88\x2c\x35\x36\xc1\xfa\xee\x68\xcd\x73\xa9\xfa\x62\xb2\x5b\x2f\x4a\x8d\xff\x3b\xa4\xd6\x1a\x52\x3d\x9e\x36\x3d\xe8\xbf\x04\x43\x4c\x21\xef\x54\x8b\xf2\xf0\x54\x5a\x27\xd1\xa1\x3c\x49\x8f\x16\xe1\xd2\x5f\xbe\x8f\x9a\x9b\x16\xa2\x28\xd3\x85\xf1\xdc\xcf\x38\xa4\xc0\x74\xa3\x73\x71\x3c\x9f\x2a\xc5\xf3\x99\xe6\xb8\x3f\x0e\xc7\xd9\x4d\xaf\x7f\x28\xef\xd1\xc1\x42\x39\xac\x3c\x3c\x22\x91\x78\x42\xf8\xac\xc8\xa3\x41\xf7\xfa\x61\x66\x45\x18\x66\x51\x6d\xe0\xe6\x50\x23\x7a\x2e\x1e\xe3\xf1\x47\x13\x39\x69\x4d\xad\x30\x40\x7e\xa7\x31\x8c\xb9\xb6\xee\x5d\xa9\x3b\x64\xc5\xfb\xca\xab\x1e\x79\x1e\xf4\xd7\x8a\xa3\x26\x3c\xbf\xce\x30\x1a\x2b\x6f\xdb\x3f\x2c\x62\xe4\x6f\x6a\x9c\x4b\x19\xce\x81\xf6\x95\xd0\xfd\x43\x54\xc1\x9e\xae\xb4\x92\xf2\xb7\xb4\x96\xe8\x94\x95\xaa\x82\x4f\xb6\xbc\x08\xac\x88\x26\x31\xbb\x82\x4a\xca\x5b\x41\xad\xb4\xa8\xb6\x97\xfd\x9e\x06\xcb\xe4\x78\x25\x94\x94\xb7\x12\xfa\xb8\x5e\x2f\x2f\x0c\x28\x7e\x43\x2b\x74\xfd\x15\xd0\x51\x99\xde\x3f\x5e\xee\x19\x3c\x1f\x76\xaa\xf9\xf5\xad\xd3\x45\x36\x12\xc3\xe3\x28\x8c\xe7\xd1\x92\xe7\x71\x1f\x4e\x3d\xff\x0c\x00\x00\xff\xff\x25\x3a\xbf\xc5\x3c\x0b\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 2876, mode: os.FileMode(436), modTime: time.Unix(1487444815, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitter_setupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\x31\x6f\xdb\x3c\x10\xdd\xfd\x2b\xee\xbb\xdd\x26\x92\xf1\x03\xa5\x25\xed\x14\x04\x2d\x10\x2f\x9d\x82\x93\x78\xb6\xd8\x50\x24\x41\x9e\x1c\x08\x82\xff\x7b\x21\xc9\x4e\x1c\xc7\x0e\x32\x14\xa8\x07\x4b\xc4\xbb\xf7\xf8\xf8\xee\xc4\x61\x30\xbc\xb1\x9e\x01\xe5\xc5\x8a\x70\x7a\xca\x2c\x5d\xc4\xfd\x7e\xa1\xff\xfb\xf6\xe3\x6e\xfd\xeb\xe7\x77\x68\xa4\x75\xe5\x42\x8f\x0f\x70\xe4\xb7\x05\xb2\xc7\x72\x31\x0c\xc2\x6d\x74\x24\x0c\xd8\x30\x19\x4e\x08\xab\x91\x58\x05\xd3\x97\x0b\x00\x00\x6d\xec\x0e\x6a\x47\x39\x17\x58\x07\x2f\x64\x3d\x27\x9c\xb1\xf1\x77\x2a\xe1\x69\x57\xd1\x41\xe2\x88\x9f\xf2\x7f\x77\x6d\x15\x24\x05\x7f\xc2\x9f\x6a\x9a\x9b\x72\x3d\x9b\x87\xc7\xd1\xbc\x56\xcd\xcd\x79\xc9\xed\x51\xc5\x31\x19\x2c\xd7\x8d\xcd\x60\x33\x48\xc3\xb0\xb1\x29\x0b\x64\xe1\x08\x12\xa0\xcb\x0c\x0f\x7d\x15\x44\xab\xe6\xf6\x4c\x65\x13\x52\x0b\xd6\x14\x38\x67\x04\x54\x8b\x0d\xbe\x40\x35\xad\xd5\x21\x41\x85\xd0\xb2\x34\xc1\x14\x18\x43\x16\x04\xf6\xb5\xf4\x91\x0b\x6c\x3b\x27\x36\x52\x12\x35\x2a\x2d\x0d\x09\x61\xa9\xa7\xc5\xd9\x4e\xd6\xc7\x4e\x60\x04\x5e\x37\x9b\x25\x72\x57\xb5\x56\x10\x76\xe4\x3a\x2e\xf0\x91\x76\x8c\xc7\xa3\x55\xe2\xa1\x12\xbf\x8c\xc9\xb6\x94\xfa\xe9\xdd\x6d\x4f\xd2\xd2\xca\xd8\xdd\x69\xf8\x76\x03\xab\x07\xce\x99\xb6\x7c\x25\x74\x72\x9c\x04\xa6\xff\xa5\x21\xbf\x1d\xbb\x37\x0c\x6f\xa4\x0f\x92\xec\xcd\x17\xa4\xac\xdf\x84\xf3\x36\x12\x34\x89\x37\x05\x36\x22\x31\xff\xaf\x14\xc5\x98\x57\x87\x4c\x57\x75\x68\x11\x84\xd2\x96\xa5\xc0\xa7\xca\x91\x7f\xc6\x72\x1d\xa0\x4e\x4c\xc2\xaa\x6e\xb8\x7e\x86\x3e\x74\x09\xc2\x8b\x87\xe3\x38\x50\x8c\xce\xd6\x34\x76\x09\xb6\x61\x6c\x6f\xc3\x89\xb5\xa2\xab\x99\x9c\x1a\x16\xaa\x1c\x2f\x13\xe7\x18\x7c\xb6\x3b\x3e\x37\x3c\xe1\xef\x8a\x61\xa6\x64\x49\x36\xb2\x39\xac\xaa\x90\x0c\x27\x36\x67\xf4\x59\xe2\xed\x53\xf9\x88\xa5\xcb\xc0\x0c\x9a\xf2\x2e\xf8\xdc\xb5\x9c\xe0\x9e\x7b\xad\xc4\x7c\x5e\x7d\x15\x84\x4f\xe7\x2d\x52\xce\x2f\x21\x19\x04\x4f\x2d\x17\xef\x6f\x89\x55\x7d\xb0\xf0\xf4\xcc\xfd\xeb\x4c\x0e\xc3\xea\x68\xed\x9e\xfb\xfd\xfe\xc2\xb9\x5f\xf7\xbd\x6a\x5b\xab\x6b\xc7\xff\x7a\x2e\x8f\x5c\x27\x96\x7f\x1d\x4d\x9e\x5c\x5c\x4a\x67\xf6\xf7\x57\x03\xd2\xea\xc2\x44\x69\x35\x0d\xe2\xc5\x99\x3f\xbc\x6a\x35\xd3\xb4\x9a\xef\xfa\xe3\x77\xfc\x27\x00\x00\xff\xff\x29\xfb\xad\xe7\x1f\x06\x00\x00")

func assetsTmplTwitter_setupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitter_setupTmpl,
		"assets/tmpl/twitter_setup.tmpl",
	)
}

func assetsTmplTwitter_setupTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitter_setupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter_setup.tmpl", size: 1567, mode: os.FileMode(436), modTime: time.Unix(1486295961, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTsxConfigTsx = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\x4d\xcf\x9b\x30\x0c\x80\xef\xfc\x0a\xeb\xbd\xb4\x4c\x7d\xa9\x7a\x05\x86\xd4\x7d\x48\xeb\x61\xda\xb4\x55\xda\x39\x4b\x4c\x1b\x29\xc4\xc8\x31\xeb\xaa\xa9\xff\x7d\x2a\x83\x96\x16\x38\x2e\x27\x07\xe7\xb1\xcd\x13\xb0\x55\x4d\x2c\xf0\x06\x54\x80\x6f\xa8\xb4\x40\xc9\x54\xc1\x82\xaf\xf1\x22\x8b\x46\xf9\x0f\x5f\x3e\x0f\x8f\xbc\x1a\xaa\x16\x59\x14\x59\x2f\xc8\xa5\xd2\x08\xbb\xfd\xc9\x8a\x20\x6f\xb5\x58\xf2\x5f\x99\xea\x00\x7f\x22\xe8\x16\xa3\x9c\x10\x05\x52\xf8\x49\xe4\x50\xf9\xec\x96\x2a\xd5\x2f\x62\x2b\x38\x95\xd3\xe4\x1c\xb6\x05\x03\xa4\xb0\x65\x56\xe7\x3c\x08\x5b\x7f\x28\xb2\xe8\x32\xdf\xfe\xbb\x28\xc1\xff\xdf\x5e\x3b\x15\x02\x3c\x74\x06\xfc\x2d\xe8\x4d\x67\x2d\x79\x4f\x55\x4d\x1e\xbd\xe4\x13\x7e\x56\x53\x53\x17\x83\xb1\x35\xf9\x20\xdc\x68\x21\x5e\xd6\xad\xd1\x74\xca\x73\x3c\x40\xfa\x15\x9a\x1a\x3b\x28\xce\x46\x59\x39\xda\x90\x84\x56\xd2\xdb\x09\xf8\x49\x5b\x0a\x6d\x9d\xa4\xdb\xae\x66\xcf\xf7\x2e\x7b\xa0\xdf\xcf\x13\x03\xc3\x3d\x34\x78\x34\xc2\x2e\xf7\x57\xb9\x8c\x2e\x60\x6f\x2b\x74\xd6\xe3\xec\x15\x34\xde\x60\x69\x3d\x9a\x15\xdc\xc2\xe2\xe1\x2b\xf1\x06\x79\x39\xa5\x93\x51\x1a\xf6\x90\x1f\x37\xc5\x27\x74\x8e\xe0\x07\xb1\x33\xf9\xfa\xb8\x29\x1e\x27\xea\x7f\x96\xa4\x2b\x76\xcb\xe6\xcf\x53\xae\x8b\xbb\x16\x43\xba\xa9\xd0\x4b\x72\x40\xf9\xe8\xf0\x1a\xbe\x3b\xef\xcc\xf2\x45\xfe\x41\xaf\xd2\x51\x2f\x71\x14\x67\xd1\xdf\x00\x00\x00\xff\xff\x60\x3b\x91\xbe\xbe\x03\x00\x00")

func assetsTsxConfigTsxBytes() ([]byte, error) {
	return bindataRead(
		_assetsTsxConfigTsx,
		"assets/tsx/config.tsx",
	)
}

func assetsTsxConfigTsx() (*asset, error) {
	bytes, err := assetsTsxConfigTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tsx/config.tsx", size: 958, mode: os.FileMode(436), modTime: time.Unix(1487251879, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/js/config.js": assetsJsConfigJs,
	"assets/js/config.js.map": assetsJsConfigJsMap,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
	"assets/tmpl/twitter_setup.tmpl": assetsTmplTwitter_setupTmpl,
	"assets/tsx/config.tsx": assetsTsxConfigTsx,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config.js": &bintree{assetsJsConfigJs, map[string]*bintree{}},
			"config.js.map": &bintree{assetsJsConfigJsMap, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
			"twitter_setup.tmpl": &bintree{assetsTmplTwitter_setupTmpl, map[string]*bintree{}},
		}},
		"tsx": &bintree{nil, map[string]*bintree{
			"config.tsx": &bintree{assetsTsxConfigTsx, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

