// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\x5f\x6f\xe3\xb8\xf5\x7d\xcf\xa7\xe0\x4f\xbf\xc5\x66\x17\xbb\x91\xdb\x9d\xa2\x0f\x1d\xdb\xc0\xec\x64\x07\x33\x45\x26\x9b\x26\x99\x02\x45\x51\x18\xb4\x45\xdb\xdc\xa1\x44\x97\xa2\x9c\x04\x46\xbe\x7b\x41\x52\x92\xf5\x87\xa4\x64\x27\x8e\xa5\x0c\xf9\xb0\x13\x47\xa4\x78\x79\xce\xbd\x97\x97\xb2\xce\x66\xf8\x7f\xe7\xbf\xbf\xbf\xfd\xd7\xd5\x6f\x60\xc9\x43\x32\x3e\x19\x8a\x7f\x00\x81\xd1\x62\xe4\xa1\xc8\x1b\x9f\x6c\x36\x1c\x85\x2b\x02\x39\x02\xde\x12\xc1\x00\x31\x0f\xf8\x8f\x8f\x27\xc3\x29\x0d\x1e\xc6\x27\x00\x00\x30\x8c\x67\x0c\xaf\xb8\xfa\x20\xda\x3c\x89\x66\x1c\xd3\x08\x04\x88\x20\x8e\xae\xe9\xdd\x0f\xd3\x84\x73\x1a\xfd\x0c\x42\x1a\x40\xf2\x23\xd8\xe4\x7d\x45\x5b\x43\x06\x38\x03\x23\xa0\x7a\xf9\x2b\xc8\x50\xc4\x2f\x69\x80\x0a\x3f\xbe\x2d\x0d\xc1\x73\xf0\x03\x67\xfe\x8c\xc0\x38\xbe\x84\x21\x02\xa3\xd1\x08\x9c\xaa\xf9\x82\xd3\xea\x04\xd2\x28\xca\xc0\x0f\x62\x26\x0c\x46\xe0\x4f\x6f\x01\x06\x43\x20\xee\xb0\xc4\x24\x10\xf7\x8f\x7d\x82\xa2\x05\x5f\xbe\x05\xf8\xa7\x9f\x74\x37\xc8\x2c\x95\x23\xc0\xa8\x3c\xf8\xdf\xf8\x3f\xda\x01\xc2\x4e\xd9\xcb\xe7\x0f\xab\xd4\xca\x25\x0e\x02\x14\x9d\x82\xef\xbf\x57\xf7\xf2\x23\x1a\xa0\xed\x22\x3e\x5d\x5e\x7d\xb9\xd5\x2e\x21\x6b\x6a\xd4\x1a\x92\x04\x81\x11\x38\x9d\x43\x12\xa3\xd3\xb7\xc6\xee\x65\x9c\xc0\xa9\xa5\x6b\x4a\x00\x8e\x22\xc4\x3e\xde\x7e\xbe\x10\xdd\xcf\x25\xa8\x86\x41\x8f\xb5\xdf\x96\x7f\xf3\x08\x10\x89\xd1\x37\x45\x07\x67\xc9\x2e\x6c\x64\x3e\xbb\x1b\x29\xd7\x68\x8d\x18\xdf\x97\x94\x93\xf2\x4f\xc3\x41\x31\x82\x87\x01\x5e\x03\x69\xe2\xc8\x9b\xd1\x88\x43\x1c\x21\xe6\x6d\xa3\xbb\x98\x11\x22\xb8\x9e\xc2\x34\x23\xe4\x1d\x86\xcb\x5f\xc6\xef\x69\x34\xc7\x8b\xe1\x60\xf9\x4b\x71\x20\x9e\x03\xff\x33\x8a\x63\xb8\x40\x8f\x5b\x23\x8a\x13\x42\x82\x18\x07\xf2\xbf\x67\x01\x8c\x16\x62\xe6\xcd\x66\x3b\x68\x38\x08\xf0\xba\x78\x4b\x14\x05\xa5\xb9\xe7\x94\x85\x00\x07\x23\x8f\xae\x11\xbb\x63\x98\x23\x0f\x40\x99\x8d\x46\xde\x60\x26\xad\x1a\x78\x20\x44\x7c\x49\x83\x91\xb7\xa2\x31\xf7\x00\x8a\x66\xc2\x1d\x46\x5e\x98\x10\x8e\x57\x90\xf1\x81\xb8\xcd\x59\x00\x39\xf4\xc6\x43\xf9\x61\x3b\xe7\x10\x47\xab\x84\x0b\x07\x0e\x4b\xb3\xa8\x5b\xc4\xc9\x34\xc4\xdc\x03\xd2\x1d\x46\xde\x0d\x5c\x23\x2f\x5b\xdc\x94\x47\x60\xca\xa3\x33\xb2\x90\xff\xac\x18\x0e\x21\x7b\xf0\xc6\x45\xe8\xde\x8c\x6f\xef\x30\xe7\x88\x81\x5b\x1c\x22\x82\x23\x14\x0f\x07\xcb\x37\x85\xe9\x39\x9c\x12\x94\xdd\x52\x7d\x90\xff\x3d\x8b\x39\xc3\x2b\x14\xa4\x9f\xa6\x94\x05\x88\xe5\x1f\x19\x8a\x57\x34\x8a\xf1\x1a\x15\xa8\x54\xf7\x13\x69\x7d\x5c\x73\x99\x21\x67\xf5\x5f\xaa\x0b\xc1\x38\x9e\x31\x84\x22\x10\xc1\x50\x98\xc7\x35\xc3\xb3\x9e\xe8\x7e\x46\x92\x00\x01\x86\x56\x04\x37\x75\xc6\x51\xda\x99\x37\x74\x9c\xd1\x24\xe2\xf6\x2e\x94\x2f\x11\x6b\xb8\x8d\xfe\xea\x70\x50\x5d\xfa\x70\xa0\x01\x69\xc8\xb7\x5b\x60\xb1\x6d\x36\x4c\x38\x2e\xf8\x0e\x47\x01\xba\xff\x19\x7c\xc7\x53\x22\xc1\xdf\x46\xc0\x57\x81\xe1\xa7\x24\xfb\x39\xc9\x8f\xf5\xa0\x35\x33\x60\xf5\x40\x95\xcf\x3c\x49\xce\xc8\xe3\xe9\x44\x99\x11\xb1\x9f\x26\x9c\xdc\x45\xe5\xf6\xe1\x0d\xcc\x28\x19\x13\xd3\x66\x43\x70\xcc\x6f\xd1\x3d\x9f\xd2\xfb\xed\x3a\xfd\x1b\xe9\x1d\x22\xc1\xc5\x40\x63\x80\x72\x9e\x89\x74\x1e\x4f\xb3\xee\x14\x71\x0b\x6f\x16\x8b\xa6\x94\x92\x1b\x44\xd0\xac\x62\xd3\x6f\xca\x0f\xaf\x95\x1b\xea\xcc\x4a\x3d\x75\x92\x7a\xea\x8b\x59\xf6\x49\x39\xfd\x35\xd7\x5a\x95\x86\xc4\x84\xf1\xe7\xb6\xc8\xee\x45\x51\x12\x4e\x45\xad\x67\xf2\x22\x19\x81\xb9\x0f\x6d\x36\xdb\xf5\xbc\x17\x57\x1e\x1f\x3d\x83\x49\x7b\x1a\xab\x36\xc1\xd4\x38\xf5\xa1\x96\x57\x71\x34\xa7\x1e\x10\x59\xfb\x8c\xd3\xc5\x82\x88\x8c\x2e\xea\xcd\xec\x77\x90\x2d\x10\x1f\x79\xff\x9f\xae\xe6\x2c\x5f\xcd\xd9\x1c\x13\x8e\xd8\x64\xb3\x51\x41\x6b\xb4\x3e\x6b\x01\xe2\x10\x93\x18\x2c\x11\x43\x66\x9b\x07\xca\xce\x97\x07\x22\xdd\x39\x01\x8d\x66\x04\xcf\xbe\x8e\xbc\x6d\x21\xce\x97\x38\xfe\x19\x9c\xb6\x80\xe0\xf4\x47\x6f\xac\x6a\xbf\x7d\x16\x52\x4f\xa2\xa0\xb0\x5f\xd7\x97\x6c\xd9\x6c\xcc\x58\xc8\xcd\xbe\xba\xbb\xe7\x4b\x1a\xc0\x20\xa8\x6c\xf5\x76\x56\xd3\x88\xd0\x6e\xe4\x97\xe8\xae\x06\x73\xb6\x81\x1b\x72\xa7\x82\xa1\x5c\x3c\x54\x20\xda\x79\x6f\x3a\xd6\x55\xed\x9e\x58\xde\xff\x86\x03\x59\x69\x14\xaa\x99\x67\xd9\x09\x8b\xd5\xa1\x8c\x66\x30\x87\x01\xf2\x64\x8d\xd7\x26\x90\x45\xfd\x23\x7f\x1e\x79\x67\x7f\xf6\x00\xa3\x22\x2d\x04\x18\x12\xba\xf0\x00\x64\x18\x9e\x11\x38\x45\x84\xa0\x60\xfa\xd0\xea\x8e\x67\x1c\x73\x52\xad\xa2\xb4\x96\x9e\x65\xd3\xa4\x93\xd2\x59\x12\xa2\xc8\xe4\x85\xf5\xe1\xa2\xfa\x36\xf7\xd7\x8f\x49\xcf\xe8\x0d\x8e\xbe\x7c\x53\x1e\xa5\x96\xd4\x16\xd3\x0c\x81\x73\x95\x05\xcb\xf5\x69\xdd\x73\x4a\x15\x7b\xf3\x0a\x84\x57\x35\xdb\x3f\xfe\x20\xad\xb2\xcf\x0d\x0e\x50\x2f\xeb\xe7\xd0\xd7\xd0\xfa\xbe\x86\x54\xa7\xef\x1c\x8c\xc5\x0e\x6c\x0e\x59\xd3\x28\x99\xb6\xda\x0f\xd3\xa7\x6b\x4d\xaf\x76\x0b\x35\xd5\xc6\xfa\xbe\x3b\x02\xb2\x82\xc2\x41\x23\x4b\x6d\x6f\x1a\xd9\xba\x33\xb0\x54\xb7\xca\xf1\xfc\xab\xd4\x0a\x5d\xd1\xa6\x22\xc6\xcf\x0c\x35\x15\x6e\x5a\x33\x9f\x99\x32\xb0\x0f\xc2\x09\x23\xa0\x1b\x28\x7f\xb9\xbe\x68\x01\x74\xc2\xc8\xa4\xb7\x60\x2f\x61\x0c\x42\x14\x60\x78\x70\xa4\x4d\x27\x90\x14\xeb\x8f\x30\xfe\x2c\xec\xb0\x00\xbd\x84\xf1\x44\xda\xda\x4b\x94\x13\x46\x3a\x80\xf1\x97\xeb\x8b\x06\x84\x13\x46\x7a\x87\x2f\x43\xfc\x0e\x21\x8e\x82\x63\x23\x7c\x9d\x19\x62\x01\x39\x37\xb6\x77\x30\xcf\xe1\x9a\x8a\x63\x3a\xe0\x4b\x86\xe2\x25\x25\x87\xc6\xfb\x69\x4f\x09\x52\xbc\x33\xab\x27\xb9\xd5\xda\x27\x07\x29\x83\x1f\xd2\xde\xb7\x59\xe7\xc6\xe3\x78\xc9\xe0\x2e\xd0\x94\x3b\x58\xbf\x78\xca\xcd\x6e\x47\x54\x1e\x6a\x3d\x66\x8a\xc0\x68\x71\x54\x6a\x38\xba\xe7\x8d\xc4\x08\x2b\x6d\x4c\x5c\xc0\x68\x71\x54\xec\x6b\x4f\x03\x0c\x9d\xd4\x13\x02\x6b\xa7\xfc\x6c\xe7\xff\x13\xc7\x98\x46\xee\x88\x67\x18\xf5\x8a\x8f\x78\xf2\x91\xcc\x71\x4f\x1e\xca\xf9\xfc\x0b\x61\x89\xa5\x94\x58\xab\x6e\xd2\xe0\x1e\x56\x13\x33\x04\xe4\xb3\x62\x40\xf0\x57\x44\xf0\x92\xd2\xe3\x6e\x54\xad\xb2\x61\x8a\xb9\xb0\xde\x97\xd6\x4f\xb6\xd6\xdb\xb2\x64\x4a\xe9\x07\x31\xee\x9d\x18\x77\x91\x0f\xeb\xdf\xc6\x25\xb9\x9b\x92\x84\x89\x84\xd6\x57\xf6\x52\xfb\xf7\xe0\xef\x57\x35\xb2\xf7\x0c\x8a\x64\x7b\x87\x60\x7f\x03\x30\x5b\xc0\x1e\x1c\x7e\x4c\x87\xf6\x9e\xc4\x3f\xe8\x43\x6f\xf9\xfb\x83\x3e\xec\x41\xdd\xdf\xe9\x43\x9f\x59\x13\x28\x75\xa2\xbc\x10\xd7\x9b\xab\x0b\x49\x6a\xdf\x8a\x0b\x02\xa3\x20\x84\xec\x6b\x27\x70\xbe\x48\x8d\x69\x53\xc9\xa9\x9e\xfd\xc3\x9b\x2e\x68\x37\xb0\xa6\x0b\xda\x02\x67\xba\xa0\xc7\xc4\xf8\x20\x27\x56\x71\x0e\x4f\xe0\x02\xb9\x33\xab\x61\xd4\x2b\x3e\xb3\x86\x38\x02\x31\x8a\x84\xbf\xdb\xde\x4d\x34\x0d\xdf\x31\x10\xb9\x0a\xc2\xdf\xe7\x1f\x08\x85\xfc\xaf\x7f\xb9\xe2\xac\x1e\x90\x99\x3b\xfa\x9f\x71\x74\x93\x99\x66\x09\x4d\x92\xf5\x0f\x71\x34\xc9\xd7\xd2\xbb\x4c\x18\xc2\xfb\xee\x32\x01\xef\x77\x63\x02\xde\x77\x83\x89\xe7\xcd\x97\xef\xe4\x4b\x5b\x2e\x4d\x1a\x46\xbd\xe2\x34\x99\x7e\xc7\x70\xf0\xb0\x9c\x2d\xd1\xec\x6b\xb9\x4c\x51\x4e\x97\x7d\x6d\xa1\x8b\x3e\xf5\x2e\x61\xf6\x3d\x48\xef\x12\x5f\xf6\x3d\xdb\x11\xc1\xcd\xbe\xbc\xb3\xa0\x9b\x59\xd9\x3f\x78\x29\x21\xf4\xee\x98\xe0\x4a\x03\x6c\xd0\xca\x0e\xbd\x03\x76\x46\x09\x41\x72\x05\xc7\x7a\xdd\x28\x05\xf8\xfd\xd6\x10\x0b\xca\x05\x73\xfb\xbf\x23\xef\xfc\x7e\xe6\x9c\x52\x6e\x7d\xc3\xd4\x72\x47\xc3\x25\xcd\xaf\x1b\x85\x5e\x05\xa5\x54\x96\x73\xfa\xad\x94\xea\x95\xa6\x29\x7f\x0f\x45\xf3\x26\x77\x4e\xc7\xa1\x35\x4d\x99\x11\x07\xd4\x34\x65\x53\xe8\x35\x4d\x5b\x03\x9e\xae\x69\xda\xe7\x05\x8e\xed\xfc\x35\x39\x4e\x6e\x78\x2e\xc7\xe9\x92\xf2\x26\x37\xfc\xdb\x55\xde\x58\x20\xe8\xab\xf2\x26\x5f\x92\x53\xde\xd4\xe6\x7b\x06\xf5\xcc\x3e\x39\xb7\x8d\x7a\xc6\x16\x8c\xfb\xa9\x67\x2c\x77\xfc\x46\xd4\x33\x2d\x10\x70\xea\x99\x7c\x0e\xf7\xfc\xa5\x62\xc1\xab\x53\xcf\xe4\xe5\x88\x51\x3d\xb3\xad\x65\x9c\x7a\xa6\x75\x6b\x40\x59\xab\x9e\xa9\x01\xed\xd4\x33\x2d\x5a\x4d\x77\x50\xc5\xba\xae\x9e\xa9\x01\xed\xd4\x33\xf6\xd6\x06\xe3\x92\x7a\x46\x8b\xb0\x53\xcf\x98\x5b\x23\xc2\x1a\xf5\x4c\x0d\x64\xa7\x9e\x69\xdd\x9e\x76\xa8\x6f\xa5\x9e\xa9\x32\xe8\xd4\x33\xc7\xe2\xa9\x41\x3d\x63\x0c\xb5\x1e\x33\xd5\x49\xf5\x4c\x8d\x98\xaa\x7a\xa6\xca\x84\x53\xcf\xb8\x23\x5e\xe3\x90\x1e\x1d\xf1\x8e\xa0\x9e\xa9\x86\x94\x5e\x3d\x53\x8b\x4c\xa7\x9e\x79\xf9\x6c\xd8\x56\x3d\x63\xa0\xd4\xa9\x67\x4a\x37\x3a\x26\x7b\x76\xf5\x8c\x8d\x3f\xa7\x9e\x29\xdc\xe9\x98\x14\x36\xa8\x67\x6c\x1c\x3a\xf5\x4c\x07\xf8\x33\xab\x67\x6c\xd4\x39\xf5\x4c\x53\x6b\x57\x5e\x94\xd5\x33\x26\xa2\x9c\x7a\xc6\xdc\xda\x96\x71\x55\xf5\x8c\xb9\x92\x73\xea\x19\x53\x6b\x89\x75\x49\x3d\x63\xc4\xd9\xa9\x67\xdc\x99\xb5\x71\x48\x8f\xce\xac\x1d\x50\xcf\xe8\x1e\x0b\x59\xd4\x33\xda\xc7\x4c\x4e\x3d\x73\x58\x26\xb4\xea\x19\x0b\x13\x4e\x3d\xe3\xd2\x64\xe3\x90\x1e\xa5\xc9\x97\x57\xcf\xe4\xb1\x68\x52\xcf\x6c\xa3\xcf\xa9\x67\xda\x34\x1b\xb8\x75\xf5\x4c\x0d\x5d\xa7\x9e\xb1\x35\x2b\xb8\x15\xf5\x4c\x1d\x5a\xa7\x9e\xb1\x37\xd3\x09\xc6\xa6\x9e\xa9\xa1\xec\xd4\x33\xdd\x52\xcf\xdc\x20\xc8\x66\xcb\x4e\x8a\x67\xfe\x9b\x20\xd6\xf8\x47\x83\x18\x8a\x13\xa2\xde\x1d\x7f\x45\x02\x9b\x58\xb2\xa2\x7b\xd5\x3b\xe3\xeb\xd0\xea\x9a\x38\x9d\xe7\x70\xe2\x1a\x35\x83\xff\x0f\xc5\x32\xa8\xcf\x9c\xf2\xff\xec\x7f\x8a\x27\xde\xbe\x00\x95\xda\x70\x2d\x9d\xe8\xf6\x61\x85\x34\x66\x28\x0f\x9b\x08\xb0\x3c\xe0\x79\xc0\x63\x68\x26\xce\x13\xc0\x0b\xf1\xbd\x00\xc6\x5b\xd1\x55\x42\x20\x7b\x39\xe5\x4f\x6e\x5b\x4d\xf8\x93\x2e\xa8\x93\xb2\x9f\xcc\xea\x6f\x57\xf5\x63\x46\xa0\xaf\xa2\x9f\x6c\x45\x4e\xf3\xb3\xcb\xd5\xe7\x51\x04\xed\xbc\x49\xb4\x91\x03\x59\x82\x74\x3f\x35\x90\xf9\x86\xdf\x88\x18\xa8\x19\x00\xa7\x05\xca\xe7\x70\x4f\x93\x2a\x16\xbc\x3a\x2d\x50\x5a\xa1\x18\x95\x40\x79\x6d\xe3\x84\x40\xad\x9b\x15\x62\xad\x0c\xa8\x8a\xb2\x53\x01\xb5\x68\x35\xfd\x44\x19\xe8\xba\x06\xa8\x8a\xb2\x93\x00\xd9\x5b\x33\xc0\x25\x01\x90\x0e\x5e\xa7\xff\x31\xb7\x06\x78\x35\xea\x9f\x2a\xc2\x4e\xfc\xd3\xba\x3d\xe9\x5c\xdf\x4a\xfb\x53\x66\xcf\x29\x7f\x8e\x44\x52\x83\xf0\xc7\x10\x63\x3d\xa6\xa9\x93\xb2\x9f\x2a\x2b\x55\xd5\x4f\x99\x06\xa7\xf9\x71\x47\xb9\xc6\x21\x3d\x3a\xca\x1d\x41\xf3\x53\x0e\x28\xbd\xe2\xa7\x1a\x94\x4e\xf0\xf3\xe2\x79\xb0\xad\xde\x47\x4b\xa7\x53\xfb\x94\x6e\x74\x44\xea\xec\x62\x1f\x33\x79\x4e\xea\x53\xb8\xd3\x11\xf9\x6b\x50\xfa\x98\x09\x74\x3a\x9f\xe3\x93\x67\x96\xf9\x98\x79\x73\x22\x9f\xa6\xd6\xa6\x9e\x28\x4b\x7c\x0c\x1c\x39\x85\x8f\xb9\xb5\x2b\xda\xaa\xfa\x1e\x63\xdd\xe6\xe4\x3d\xa6\xd6\x0a\xe8\x92\xb8\xc7\x04\xb2\xd3\xf6\xb8\xb3\x69\xe3\x90\x1e\x9d\x4d\x3b\xa0\xed\xa9\x3f\xfc\xb1\x28\x7b\x74\x4f\x92\x9c\xb0\xe7\x90\x34\x68\x65\x3d\x66\x1a\x9c\xaa\xc7\x25\xc8\xc6\x21\x3d\x4a\x90\x2f\xaf\xea\x49\x03\xd1\xa4\xe9\xc9\x43\xcf\x49\x7a\xda\x34\x33\xb2\x75\x41\x4f\x15\x5a\xa7\xe7\xb1\x35\x0b\xb2\x15\x35\x4f\x0d\x57\x27\xe6\xb1\x37\xfd\x79\xc5\x26\xe5\xa9\x42\xec\x94\x3c\xdd\x52\xf2\x5c\x11\x38\x43\xe0\x92\x72\x3c\xc7\x33\x58\x2f\x26\x3a\xa1\xe9\x81\x32\x6c\x63\x44\xe6\xf6\xf7\xa6\x93\xd8\xa8\xc4\x79\xa2\xd6\x66\xbf\xb7\xdf\x0b\x99\xa8\xfa\xb2\x75\x11\x71\x5f\x92\xe0\xbf\x13\xab\xbc\x41\x64\xbe\x8d\x9e\xa8\xd8\x6b\x25\x7b\x49\x2c\x26\x02\x8b\x67\x97\xb8\x14\x63\xbb\x85\xbd\x5f\x04\xda\x56\x5b\x25\x1f\xbb\x99\xb9\xd7\x4b\xee\xc2\xa1\xcf\x21\x87\x53\x18\xa3\x0e\xba\x6f\xc0\xf0\x1a\x31\x3b\x2d\x01\xe4\x10\xc4\x34\x61\xb3\x06\x45\x9a\x7a\xe0\xa3\xec\xec\x90\xab\xb7\x7f\x76\x1e\x4c\x7d\x05\x48\xe1\x91\x78\xe6\x6d\xe7\xbf\xfa\xe7\xf2\x9a\xf1\xd9\xf7\xbe\x92\x9c\x9d\xcc\x83\x1c\x4e\x14\x17\x06\x1b\x21\x87\x37\xf2\xfa\x51\xed\x54\xae\x30\x91\xae\xa0\x37\x54\x3d\x42\xbc\x15\x1d\x76\xb4\x74\xef\x38\xfc\x14\x71\xc4\xa0\xe6\x58\xda\x8d\x50\x4c\x58\xba\xc9\xd9\xe8\x79\x86\xfd\x06\xe4\xb5\x99\x51\x40\xda\xf1\x38\xc5\x5b\x22\xfd\x0c\xb6\x82\x97\xe1\x79\xbe\x47\x14\x28\xf7\xcf\xd3\x9e\x8f\x8f\x5b\x47\x34\x5d\x97\x65\xc9\xf3\xc6\x8f\x66\xc7\x2d\xce\x5e\xd8\x62\x8b\xcb\x7b\xe1\x3d\xb5\x68\x51\xba\x89\x16\xad\xd9\x63\xd7\x6c\x34\x64\x97\x57\x16\x8b\xb6\x54\xa5\xa2\xba\x25\xe4\xb2\xd1\x97\x48\x2f\x17\x74\xd1\xc1\xb4\xf2\x8a\x0a\xd4\x0b\xba\x28\x86\x09\xa1\x8b\x97\x0e\x0f\x61\x41\x1a\x16\x62\xf6\x97\x2c\x22\x6f\x10\x5b\x57\x65\x6d\x9d\x70\x30\xfb\xe3\x4f\xa9\xb5\xa0\x71\xc3\xff\xa8\x60\x45\x59\x43\x0f\x42\x17\x40\xfe\xd5\xda\x0e\xb9\x68\xfb\x0d\x2b\x96\xe4\xf9\xe2\x83\x26\x63\x29\x6a\xfd\x4b\x18\x1e\xb1\x68\x4b\x4d\x14\x5c\x99\x4d\xfc\x48\xe3\x5d\xd3\xe9\x13\x4d\x2c\xe7\xff\xd4\x48\xe1\x2e\x66\x23\xaf\x28\xeb\x82\x91\x84\x2e\x26\xd2\x63\xcd\x96\x5e\xd0\xc5\x85\xe8\x71\xc0\x1d\x0a\x6c\x1f\xba\x0c\x07\xaa\xcf\x70\xb0\xe4\x21\x19\x9f\xfc\x2f\x00\x00\xff\xff\x20\x00\x28\x20\x2d\xb3\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 45869, mode: os.FileMode(436), modTime: time.Unix(1483809924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x96\xc1\x6a\xdc\x30\x10\x40\xef\xfe\x8a\xa9\xee\x5d\x43\x8e\x45\x11\x94\x6d\x1b\x28\x0d\x09\x6c\x7a\xc8\x51\xb6\x66\xed\x01\x45\x32\xa3\xb1\xc3\x12\xf2\xef\xc5\x2b\xbb\x75\x9a\x94\x14\xb2\x39\xed\xfa\x60\x7b\x66\xd0\xb3\xe7\x61\xac\xd1\x1f\xbe\x5c\xad\x6f\x6e\xaf\xbf\x42\x2b\x77\xde\x14\x7a\xbc\x80\xb7\xa1\x39\x57\x18\x94\x29\x1e\x1e\x04\xef\x3a\x6f\x05\x41\xb5\x68\x1d\xb2\x82\xd5\xe3\x63\xa1\xab\xe8\x76\xa6\x00\x00\xd0\x8e\x06\xa8\xbd\x4d\xe9\x5c\xd5\x31\x88\xa5\x80\xac\x72\x6d\x3c\x96\x88\x60\x87\xca\x4e\x88\xb9\xae\xdb\x33\xb3\x11\x2b\x7d\xd2\x65\x7b\xf6\x67\x9d\x16\x5b\x79\x9c\xc9\x39\xd8\x9f\x3f\x26\x61\xea\xd0\x4d\x51\x15\xd9\x21\xff\x0e\x19\x53\x17\x43\xa2\x01\x17\xef\x90\x79\xfc\x34\x91\x93\xce\xdc\xdc\x93\x08\x32\xdc\xc6\x9e\xe1\xea\x3e\xc0\x0f\x4a\x82\x01\x59\x97\xe2\x5e\x5e\xf2\x2c\x99\x1b\xa5\x2d\xac\x72\x2b\xab\x09\x9a\x51\x97\xbb\x84\x7e\x9b\x2b\x8b\xce\x9f\x50\x53\x67\x03\x24\xd9\x79\x1c\x35\xfa\xc8\x9f\x2a\xdf\xa3\x32\x9f\x6b\xa1\x01\x75\x39\xd6\xff\xf5\x5c\xf4\x09\xff\x9f\xcb\xe8\x94\xd9\x48\xec\x5e\x81\x06\xf7\x02\xf3\xb9\x13\x5d\xfe\x2d\xf6\x55\xd3\x3f\x13\xf2\xe1\x2d\x8f\xd4\x74\x92\x3c\x4b\xbe\x46\xa6\xe8\xa8\x86\xef\xb1\x3a\x80\xe3\x93\xd8\x75\x0c\x5b\x6a\xe0\x1b\x79\x84\xcb\x18\x48\x22\x53\x68\xde\xa2\x76\xa2\x64\xf0\x49\xf0\xfc\xe5\xae\x19\x1d\x06\x21\xeb\x0f\xeb\x79\xe2\x8f\xf8\x63\xd6\x7c\x11\x63\xe3\x11\xd6\x3e\xf6\xee\xdd\x5c\x5f\xec\xf1\xc7\xae\x7a\x83\x3c\xbc\x6d\x87\xcb\x84\xa3\xf8\x37\xe8\x72\x3f\xc1\x2d\x12\xbd\x37\xc5\xa2\x3c\x86\xf9\xce\xd1\x60\x0a\x5d\xe6\x21\x54\x97\x79\x78\xfd\x15\x00\x00\xff\xff\x78\xbf\x5f\x14\xcd\x0a\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 2765, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

