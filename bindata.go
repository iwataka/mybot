// Code generated by go-bindata.
// sources:
// assets/css/custom.css
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/log.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/status.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\xc1\x77\x96\x09\xf8\x83\x16\x05\xf2\x2e\x6b\x69\xed\xa8\x96\xb5\x62\xb5\xce\x9f\x96\xbe\x7b\xb1\x93\x18\x85\x14\x53\x1d\x84\x0e\xf3\x9b\x99\x5d\xd4\x92\xbb\xaa\xaf\x4a\xdd\x4f\x02\xe7\x7c\xec\xb5\x50\x32\xea\x6d\x97\x2e\xfb\xea\xbb\xaa\xea\x8f\x69\x6c\x49\x98\x62\x21\x6d\xc1\x0e\x3d\xd3\x14\x9d\xb6\x14\x88\x8d\x12\x86\x98\x13\x30\x46\xd9\xaf\x32\xc1\x8b\x68\x08\xbe\x8f\x46\x59\x8c\x82\x7c\xb3\xb4\x14\x05\x7c\x44\x2e\x2c\x47\xb8\xe8\xb3\x77\x72\x34\xea\x7d\xb7\x86\x27\x88\x18\xb4\x78\x09\x58\x68\x17\xdf\x25\xb1\x23\x1e\x8d\x9a\x52\x42\xb6\x90\x71\x81\x9c\x3f\x15\xa5\x41\xe5\x04\xb1\xee\xa0\xe0\x3b\x8a\xa2\xb3\xff\x44\xa3\xfe\x3f\xa2\x12\x97\x09\x2d\xb1\x43\x36\x2a\x52\xc4\xfd\x5f\xc7\x9e\x0b\x3f\xe5\xbc\xea\xcf\x47\x2f\x98\x47\x1a\xf0\x21\xd7\x72\xf6\x22\xc8\xf3\x13\xac\xf8\x53\x59\xe3\x4e\xfd\x6b\x9a\xa6\xe9\xba\x15\xe9\x89\xfa\x80\x9b\x44\xd7\xcd\xcc\x4a\x24\xc8\xf9\x57\x61\xcf\x78\x2d\xaa\x20\x8a\x43\x3b\xbc\xea\xda\x00\x76\xd8\xda\x84\x23\xd7\x23\xb7\x61\xba\x4d\x26\xd0\x06\x54\x07\x25\x47\x04\xb7\xb9\x12\x08\xde\xe2\x33\x57\x2f\xb7\xce\xc2\x3e\xa1\x9b\x5d\x96\xaf\x7a\x50\xc2\xb5\xc3\x80\x82\xa5\x25\x25\xb0\x5e\xae\x46\xed\xea\x66\xab\xe1\x63\xd4\x9f\x00\x00\x00\xff\xff\xc6\x0c\x84\x58\xf7\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 759, mode: os.FileMode(436), modTime: time.Unix(1483795226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x5d\x6f\xe3\x36\xd6\xc7\xef\xe7\x53\xf0\xd1\x53\x34\x2d\xda\xc8\xdd\xce\x62\x2f\x3a\xb6\x81\x76\xd2\xc1\xcc\x22\x33\xcd\x26\x99\x05\x16\x8b\x85\x41\x5b\xb4\xcc\x0e\x4d\x7a\x29\xda\x49\x10\xe4\xbb\x2f\x48\x4a\xb2\x5e\x48\x89\x7e\x8b\xe5\x0c\x73\xd1\x26\x11\x0f\x75\x78\xfe\xe4\xe1\xa1\xac\x5f\xa6\xff\x7f\x17\x7f\xbc\xbd\xfd\xd7\xd5\xef\x60\x26\xe6\x64\xf8\xaa\x2f\xff\x07\x08\xa4\xf1\x20\x40\x34\x18\xbe\x7a\x7c\x14\x68\xbe\x20\x50\x20\x10\xcc\x10\x8c\x10\x0f\x40\xf8\xf4\xf4\xaa\x3f\x66\xd1\xc3\xf0\x15\x00\x00\xf4\x93\x09\xc7\x0b\xa1\x7f\x90\x5f\xd3\x25\x9d\x08\xcc\x28\x88\x10\x41\x02\x5d\xb3\xbb\xef\xc6\x4b\x21\x18\xfd\x11\xcc\x59\x04\xc9\xf7\xe0\x31\x6f\x2b\xbf\x56\x90\x03\xc1\xc1\x00\xe8\x56\xe1\x02\x72\x44\xc5\x27\x16\xa1\xc2\xb7\x6f\x4a\x26\x78\x0a\xbe\x13\x3c\x9c\x10\x98\x24\x9f\xe0\x1c\x81\xc1\x60\x00\xce\xf4\xfd\xa2\xb3\xea\x0d\x94\x53\x8c\x83\xef\xe4\x9d\x30\x18\x80\x9f\xde\x00\x0c\xfa\x40\xf6\x30\xc3\x24\x92\xfd\x27\x21\x41\x34\x16\xb3\x37\x00\xff\xf0\x83\xa9\x83\xcc\x53\x65\x01\x06\x65\xe3\x7f\xe3\xff\x18\x0d\xa4\x9f\xaa\x55\x28\x1e\x16\xa9\x97\x33\x1c\x45\x88\x9e\x81\x6f\xbf\xd5\x7d\x85\x94\x45\x68\x3d\x88\x0f\x9f\xae\x3e\xdf\x1a\x87\x90\x7d\x69\xab\x15\x24\x4b\x04\x06\xe0\x6c\x0a\x49\x82\xce\xde\x58\x9b\x97\xe3\x04\xce\x1a\x9a\xa6\x02\x60\x4a\x11\x7f\x7f\xfb\xf1\x52\x36\xbf\x50\x41\xb5\x18\x3d\xd5\x7e\x5b\xfe\xcd\x13\x40\x24\x41\x5f\x95\x1c\x82\x2f\x37\x51\x23\x9b\xb3\x9b\x89\x72\x8d\x56\x88\x8b\x6d\x45\x79\x55\xfe\xae\xdf\x2b\xae\xe0\x7e\x84\x57\x40\xb9\x38\x08\x26\x8c\x0a\x88\x29\xe2\xc1\x7a\x75\x17\x33\x02\x85\xab\x31\x4c\x33\x42\xde\xa0\x3f\xfb\x79\xf8\x96\xd1\x29\x8e\xfb\xbd\xd9\xcf\x45\x43\x3c\x05\xe1\x47\x94\x24\x30\x46\x4f\x6b\x27\x8a\x37\x84\x04\x71\x01\xd4\x7f\xcf\x23\x48\x63\x79\xe7\xc7\xc7\xb5\x51\xbf\x17\xe1\x55\xb1\x4b\x44\xa3\xd2\xbd\xa7\x8c\xcf\x01\x8e\x06\x01\x5b\x21\x7e\xc7\xb1\x40\x01\x80\x2a\x1b\x0d\x82\xde\x44\x79\xd5\x0b\xc0\x1c\x89\x19\x8b\x06\xc1\x82\x25\x22\x00\x88\x4e\xe4\x74\x18\x04\xf3\x25\x11\x78\x01\xb9\xe8\xc9\x6e\xce\x23\x28\x60\x30\xec\xab\x1f\xd6\xf7\xec\x63\xba\x58\x0a\x39\x81\xe7\xa5\xbb\xe8\x2e\x92\xe5\x78\x8e\x45\x00\xd4\x74\x18\x04\x37\x70\x85\x82\x6c\x70\x63\x41\xc1\x58\xd0\x73\x12\xab\xff\x2d\x38\x9e\x43\xfe\x10\x80\x44\x3c\x10\x34\x08\x22\x9c\x2c\x08\x7c\xf8\x05\x53\x82\x29\x7a\x33\x87\x3c\xc6\xf4\x9c\xe3\x78\x26\x7e\x79\xfd\xd3\xe2\x3e\x18\x56\xc7\x59\x1d\xd8\x14\x13\x54\x18\x5d\x8c\x84\xa5\xf3\x82\x9c\x85\x21\x19\x47\x70\xc1\xee\x28\x61\x30\xb2\x8d\x22\x42\x53\xb8\x24\xa2\xd0\x63\x16\xb0\xcd\x9c\x75\x90\x62\xe7\xb1\x7c\x5e\x6c\x36\x92\x5a\x7f\xd2\xe7\x00\x50\x38\x97\x1e\x3e\x8c\x99\x08\xf5\x60\xda\x5d\xab\x07\x65\xf6\x7a\x78\x7b\x87\x85\x40\x1c\xdc\xe2\x39\x92\xed\x93\x7e\x6f\xf6\x7a\x68\x5c\x18\x02\x8e\x09\x3a\xe7\x28\x59\x30\x9a\xe0\x55\x6d\xd4\xea\x7a\xa9\x31\xd0\x26\x89\xe0\x78\x81\xa2\xf4\xa7\x31\xe3\x11\xe2\x28\xaa\x98\xeb\x2e\xe4\xfe\x5e\xff\xbd\xbe\xc6\xcd\x17\xf4\xc5\x68\x98\x4c\x38\x42\x54\x45\x26\xe9\xf7\x84\xa5\x9b\xac\x35\xba\x9f\x90\x65\x84\x00\x47\x0b\x82\x5d\x0c\x30\x4d\x0d\x84\x43\xe3\x09\x5b\x52\xd1\xde\x8c\x89\x19\xe2\x0e\xdd\xd9\x5b\xf4\x7b\xa6\xb0\xf4\x7b\x96\x40\xf6\xc5\xba\x66\xaa\x7e\x3d\x3e\x72\x99\xed\xc0\x37\x98\x46\xe8\xfe\x47\xf0\x8d\x48\xa7\x04\xf8\x65\x00\x42\x9d\x4d\xc3\x74\xba\x84\xf9\x74\x79\xaa\x67\x7a\xd0\xaa\x56\x63\xfa\xd2\x9b\x61\x36\xc5\x45\x7a\xc3\xcc\x99\x24\x4c\x77\xab\x7c\x45\xa9\xda\x23\xe8\x35\x47\xd0\x7a\x51\x8f\x9c\xe0\x44\xdc\xa2\x7b\x31\x66\xf7\xeb\x71\x87\x37\x6a\x46\xc9\x5d\x32\x01\x06\x47\xf4\x84\x1b\xa9\x09\x17\x58\xe2\x00\xb4\x1a\x2d\xfa\xb6\x78\x37\x66\x8c\xdc\x20\x82\x26\x15\xff\x7e\xd7\x73\xf8\x5a\x4f\x61\x93\x8b\xe9\x2c\x1f\xa5\xb3\xfc\x28\x5e\x7e\xd0\x0b\xe7\x5a\x18\x3d\x4c\x97\xd5\x88\x8b\x43\x7a\xd7\x3c\xe3\xe8\x72\x3e\x96\x87\x0a\xdb\x8c\x53\xab\x39\x9f\x6f\x8f\x8f\xeb\xb1\xbd\x95\x57\x9e\x9e\x0c\xa9\x6c\x5f\x8e\xeb\xca\x2b\x75\x54\xff\x50\xdb\x3c\x30\x9d\xb2\x00\xc8\xfd\xe9\x5c\xb0\x38\x96\x9b\x80\x3a\xe4\x64\xbf\x83\x3c\x46\x62\x10\xfc\x7f\x3a\xb2\xf3\x7c\x64\xe7\x53\x4c\x04\xe2\xa3\xc7\x47\xbd\xe8\x1b\x47\x92\x7d\x45\x48\x40\x4c\x12\x30\x43\x1c\x35\xfb\xde\xd3\xfe\x1e\x37\x38\x69\x09\x07\x18\x9d\x10\x3c\xf9\x32\x08\xd6\x27\x42\x31\xc3\xc9\x8f\xe0\xcc\x21\x2c\x67\xdf\x07\x43\x7d\x08\xd9\x65\x50\xe6\x64\x0d\x0a\x45\xa4\x39\x0c\x2d\x1b\x5f\x73\x8c\x8c\x85\x4f\x3e\xd4\x1e\x8c\xa2\x4a\x01\xd4\x3e\x03\x9a\xea\x9b\x4f\xe8\xae\x26\x41\x56\x65\x36\xe4\x68\x50\xa8\x4f\xec\xd7\xb7\xdf\x27\xbb\xd2\xc2\xba\x5f\xd7\xf7\xe5\x7e\x4f\xd5\x4b\xc5\xfa\x4d\x1d\x3c\x0a\x27\x8f\x3d\x6c\xd8\xc5\x02\x4f\x25\x0d\x30\x85\x11\x0a\xd4\xf9\xc5\x25\x5f\xc8\xa2\x4e\x7d\x3f\x08\xce\xff\x12\x00\xce\x74\x09\x0a\x09\x8b\x03\x00\x39\x86\xe7\x04\x8e\x11\x21\x28\x1a\x3f\x38\xf5\x78\x2e\xb0\x20\xd5\xda\xd2\xe8\xe9\x79\x76\x9b\xf4\xa6\x6c\xb2\x9c\x23\x6a\x9b\xc0\x75\x73\x79\xb2\xb4\xb7\x37\xdb\xa4\xcf\x9f\x76\xc8\x4b\x13\xc2\x12\x94\x66\xe6\x08\x27\x73\x9c\x77\x1e\x0c\xbf\x95\x71\x49\xde\xb4\xe7\x18\xa0\xab\xf7\xb2\x6f\x3a\x70\xae\xca\x65\x71\xbe\xd0\xe9\xbc\x5c\xf6\xd7\xee\x55\x3e\xf3\xb6\xc7\x49\x4e\xe7\xb6\x28\xcd\x5e\x0f\xdf\x29\xaf\x9a\xef\x5d\xbd\x41\xcb\x31\xc4\x68\xbe\xfb\xd1\xc4\xdc\xad\xfd\xb8\x62\x6e\xdf\x90\xc9\xcd\x06\xd1\x50\x16\x25\xcd\x19\xc7\x66\xa9\x32\xf2\x66\xa6\xf6\x1d\xca\xd0\xd2\x7d\xf0\x4d\xc7\x0e\x73\xfb\x2d\x02\xb5\x80\x72\xca\xd3\x96\xe3\x94\xcd\x7a\x23\x03\xd0\x70\x68\xd0\x53\x3a\xbc\x4a\xbd\x31\xd5\xbc\x7a\x2d\x86\x99\xc3\x4d\x75\xaf\xd1\xdd\x03\x49\x0a\xb6\x8d\xfc\x92\x13\xd0\xad\xe8\x7f\xbe\xbe\x74\x10\x60\xc9\xc9\xe8\xc5\x88\x30\x83\x09\x98\xa3\x08\xc3\x67\x53\xc0\x76\xe0\x4b\x35\x78\x0f\x93\x8f\xd2\x9f\x06\x01\x66\x30\x19\x29\x9f\x5f\x44\xf4\x97\x9c\x74\x28\xf6\x9f\xaf\x2f\x5b\x22\xbf\xe4\xe4\xe4\xe3\xce\x91\xb8\x43\x48\xa0\xa8\x2b\x91\xbf\xce\x1c\x6a\x08\x7e\xee\xf4\xc9\x87\x7f\x0a\x57\x8c\x63\x81\x80\x98\x71\x94\xcc\x18\x79\x2e\x1d\x76\x7b\xa0\x93\xea\x90\x79\x3f\xca\xbd\x37\x3e\xe4\x49\x95\x7d\x97\xb6\xbe\xcd\x1a\x3b\x3d\x2d\x29\x39\xdd\x35\xf9\xf2\x89\x78\x9a\xfa\xe5\xee\xbb\x09\x98\x2f\xcd\x17\xa4\x20\x81\x34\xee\x84\x64\x02\xdd\x8b\x56\xc1\xa4\xb7\x4d\x0a\x5d\x42\x1a\x77\x46\x13\xe3\x43\x19\x4b\xc3\xf2\x83\x1a\x73\xa3\xc6\x13\x34\x28\x1d\x88\xc3\x7f\xe2\x04\x33\xea\xcf\xc5\x56\x03\x7f\x2e\x76\x34\x90\x29\x62\x8c\x9e\xaf\x30\x6d\x3c\x96\xe9\x69\x1d\x5e\x4a\x8f\x1a\xea\xa3\x95\x6e\xa6\x1c\x7f\x01\x25\xd2\x04\x01\xf5\x19\x04\x20\xf8\x0b\x22\x78\xc6\x58\x37\x76\x59\xa7\x94\x9d\x6a\x21\x47\x11\xaa\x51\x8c\xd6\xa3\x68\x4a\xe5\xa9\xd4\xef\xa4\xdd\xaf\xd2\xee\x32\x37\xeb\x4c\x86\x07\x3b\x69\x3a\x26\x4b\xce\x51\x74\xf2\xaa\xa6\xe3\xd8\x42\xd7\xdf\xb4\xe5\x8b\x53\x56\x26\xf0\x3b\x04\x4f\x7f\xc1\x66\x03\xd9\x42\xdb\xf7\xa9\xe9\x8b\x13\xf7\x4f\xf6\x70\xf2\xba\xfe\xc9\x1e\xb6\x90\xf4\xef\xec\xe1\x25\xa9\x29\xa3\xd6\xa9\xb2\x46\x5e\x6f\xaf\x6a\x94\xd8\xa7\x5e\xd4\x10\x48\xa3\x39\xe4\x5f\x3a\x15\xff\xcb\xd4\x29\x97\xca\x52\xb7\x3c\x7d\x1d\x58\xcc\xba\xa5\x01\x8b\x99\x43\xfc\x59\xcc\xba\x12\xfb\x63\x1e\xf3\x2f\x21\x8d\x97\x30\x46\xfe\xa0\x6f\x35\xf0\x07\x7d\x47\x83\x68\x38\xc7\x14\x24\x88\xca\x45\xd7\xf6\xf2\xb1\xad\x8b\x2d\xb2\x82\xd0\x19\xe1\x8f\xe9\x3b\xc2\xa0\xf8\xdb\x5f\xaf\x04\xaf\x67\x87\x6c\xa2\x87\x1f\x31\xbd\xc9\x5c\x6c\xc8\x13\x24\x6b\x3f\xc7\x74\x94\x8f\xa9\x2b\x29\x03\x6c\xad\x10\xbc\xef\xbe\x42\xf0\x7e\x33\x85\xe0\x7d\xf7\x14\x3a\x4a\x52\xff\x55\xbd\x64\xe9\x73\xb9\xd5\xc0\xe7\x72\x47\x83\xfc\x93\xb9\x67\xcb\x11\x93\x19\x9a\x7c\x29\x17\x76\x7a\x3a\x67\x9f\x9a\x99\x52\x81\x7e\xab\x38\xfb\x18\xae\x2b\x6b\x1f\xec\xfa\x61\x76\x07\x82\x9e\x7d\xd6\xdc\x10\xf5\xcc\xdb\xd3\x0f\x3b\x23\x84\xdd\x75\x21\xe8\xca\x91\xa6\x90\xab\x06\x27\x1f\xf0\x09\x23\x04\xa9\x11\x1d\xfb\x6d\xbd\x34\xf0\x6f\xd7\x0e\x35\x44\xbf\xe0\x76\x57\x24\x78\xd6\x32\x63\xe3\x77\xb0\xa7\x8c\x89\xdd\xde\x55\xcf\x19\x9a\x14\x4b\x35\xbf\xb5\xfe\x96\xb0\xc4\x89\x8b\xb1\xfa\x6f\xb9\x64\xf8\x75\x2b\x7c\x5d\x40\x5a\xb3\x24\xfa\xb5\x20\xad\x2f\x02\x3a\xcd\xdf\x28\x33\x30\x2c\xb9\xa0\xcf\x05\x9d\x66\xce\x3c\x03\x74\x9a\xdd\xca\x0c\x9d\xae\x1d\xd9\x1f\x74\xba\xcd\x2b\x58\x6b\x3f\x6a\x4c\x64\x3e\x80\x9c\x89\xec\x22\xfa\x98\x0f\xc0\xa3\x8f\x45\xf4\xb1\x21\x2c\x2f\x0d\x7d\xcc\x87\xea\xd1\x47\xf7\x16\x07\xc5\x16\xb7\x49\xf9\x2e\xd8\x62\xd3\x5a\xdf\x0e\x5b\x6c\xe8\xd1\x63\x8b\x7b\xc4\x16\x1d\xe2\xec\xb1\x45\xff\xa4\x6f\x6d\x76\xc2\x4f\xfa\x8e\x0b\xce\xe5\x55\x9b\x15\x5b\x5c\x97\x7c\x1e\x5b\xac\xf6\xb0\xef\xe8\x1b\xb1\xc5\x9a\x00\x1e\x5b\x5c\x9b\x6f\xa1\x40\x05\xe0\xaa\x6a\x50\xc7\x16\x6b\x02\x78\x6c\xf1\x70\xb1\x2f\x61\x8b\xc6\xc8\x7b\x6c\xf1\x00\x91\x37\x60\x8b\xb5\xe0\x7b\x6c\xb1\xda\xcf\xc6\x3a\xec\xf6\xcc\xc5\x09\x5b\xac\x2a\xeb\xb1\x45\x7b\x47\xc7\xd1\xaf\x05\x5b\xb4\x2e\xcd\x17\xa4\x60\xa7\xb1\xc5\x9a\x60\x55\x6c\xb1\xaa\x90\xc7\x16\x3d\xb6\xe8\x66\xe0\xcf\xc5\x8e\x06\x47\xc5\x16\xab\xeb\xdb\x8c\x2d\xd6\xd2\x84\xc7\x16\xcd\x5d\x1d\x23\x65\xbb\x62\x8b\x16\xa9\x3d\xb6\xd8\xda\xd9\xb1\x55\x6d\xc6\x16\x9b\x74\xf5\xd8\x62\x4b\x6f\xc7\x96\xb6\x05\x5b\x6c\xd2\xd6\x63\x8b\x0d\x1d\x1d\x5b\x57\x3b\xb6\xd8\x24\xa9\xc7\x16\x0f\x5b\xd6\x94\xb1\x45\x9b\x80\x1e\x5b\x3c\x5c\x59\x59\xc5\x16\xed\x95\xa5\xc7\x16\x37\x31\x00\xee\x1a\x94\xb0\x45\x6b\xfc\x3d\xb6\xe8\xb1\x45\x37\x03\x7f\xd0\x77\x34\xe8\x14\xb6\x68\x7a\xb0\xd7\x80\x2d\x1a\x1f\x14\x7a\x6c\xd1\xd4\xc5\xe1\x15\x32\x62\x8b\x0d\x0a\x79\x6c\x11\x78\x6c\xd1\xc9\xc0\xe7\x72\x47\x83\x63\x62\x8b\x79\x62\xb0\x61\x8b\xeb\x54\xe0\xb1\xc5\x82\xf5\x5e\x83\x5e\xc7\x16\x6b\x51\xf7\xd8\xe2\xde\x83\x5e\xc1\x16\xeb\x21\xf7\xd8\xe2\x7e\xcf\x8e\x4d\xd8\x62\x2d\xfa\x1e\x5b\xf4\xd8\xe2\x46\xd8\xe2\x0d\x82\x7c\x32\x3b\x61\x6a\xf1\xbf\x4b\xc4\x9d\xfe\x49\x4d\x8e\x92\x25\xd1\x30\xcd\x57\x42\x37\x26\x4a\x5b\x13\xe8\x92\xa9\xfe\x5c\x68\x63\x92\xde\xef\xf0\x64\xa3\xbe\x53\xf8\x0f\x3d\x2b\x40\xdd\x83\x74\xbe\x1c\xf4\x1f\xa7\x4c\xd6\xaf\x3e\xa6\xfe\x5c\xab\xc9\x77\xfb\xb0\x40\x06\x97\xf4\xcc\x1c\xc9\x00\x06\x20\x08\x40\xc0\xd1\x44\x9e\x13\x41\x30\xc7\xf7\x32\x58\xc1\x82\x2d\x96\x04\xf2\xe7\x47\x30\x73\x1f\x6b\x04\x66\x3a\xb0\x4e\xf3\x97\x99\xf7\x1e\xbf\x2c\xe2\x97\xf6\xa8\xbc\x34\xfa\x32\x1b\xa9\x87\x2f\xf7\xd9\xe2\xa0\x78\xe6\xc6\x7b\x96\x0b\x9b\xd9\x90\x07\xb6\x43\x33\xed\x1d\x7a\x32\x73\x8f\x64\x66\x7b\x98\x3d\x98\xe9\x9f\x65\xae\xcd\x4e\xf8\x59\xe6\x71\xd1\xc0\xb4\x98\xb3\x62\x99\x79\x19\xe8\xa9\xcc\x6a\x0f\xfb\x0d\xbd\x91\xc9\xac\x46\xdf\x23\x99\x6b\xf3\x2d\xc2\x5f\x81\xd3\xca\x02\xd4\x81\xcc\x6a\xf4\x3d\x8f\x79\xa8\xc0\x97\x68\x4c\x53\xd8\x3d\x8c\xb9\xf7\xb0\x1b\x50\xcc\x6a\xe4\x3d\x89\x59\xed\x67\x63\x11\x76\x7a\xf4\xe2\x04\x62\x96\x55\xf5\x18\xa6\xbd\xa3\xa3\x88\xd7\x42\x61\x5a\xd6\xe4\x0b\x92\xaf\xd3\x0c\x66\x55\xad\x2a\x82\x59\x96\xc7\x03\x98\x1e\xc0\x74\x33\xf0\xe7\x5f\x47\x83\xa3\x02\x98\xe5\xd5\x6d\xc6\x2f\xab\x19\xc2\xd3\x97\xe6\xae\x8e\x90\xac\x5d\xe1\x4b\xa3\xcc\x1e\xbd\x6c\xed\xec\xc8\x92\x36\x93\x97\x76\x51\x3d\x77\xd9\xd2\xdb\x91\x75\x6d\xc1\x2e\xed\xc2\x7a\xe8\xb2\xa1\xa3\x23\x8b\x6a\x67\x2e\xed\x7a\x7a\xe2\xf2\x90\x75\x4c\x99\xb7\xb4\x68\xe7\x71\xcb\x43\x15\x91\x55\xd8\xd2\x5a\x47\x7a\xd6\x72\x13\x03\xe0\x2a\x40\x89\xb4\xb4\x05\xdf\x83\x96\x1e\xb4\x74\x33\xf0\x07\x7a\x47\x83\x4e\x81\x96\xf5\xc7\x77\x0d\x98\xa5\xe9\x59\xa0\xa7\x2c\x4d\x5d\x1c\x5a\x1e\x23\x63\x69\x97\xc7\x23\x96\xc0\x23\x96\x4e\x06\x3e\x8b\x3b\x1a\x1c\x13\xb1\x4c\xb3\x82\x0d\xb0\xcc\xf3\x80\xe7\x2b\x0b\xd6\x7b\x8c\x78\x9d\xae\xac\x86\xdc\xc3\x95\x7b\x8e\x78\x05\xad\xac\xc5\xdb\x93\x95\xfb\x3c\x29\x36\x71\x95\xd5\xd0\x7b\xac\xd2\x63\x95\x1b\x61\x95\x57\x04\x4e\x10\xf8\xc4\x04\x9e\xe2\x09\xac\xd7\x63\x27\x04\x58\x42\x95\x95\x12\x44\xa6\xed\xd0\xc8\x32\x69\xc4\x21\xf7\x08\x3b\xee\x86\x0b\x15\x92\x70\x15\x33\x29\x6a\x16\x2a\x19\xc3\x5f\x65\x04\x6e\x10\x99\xae\x13\x04\x2d\xb6\x5a\xa8\x56\x2a\x4e\x23\x19\xa7\x83\xb2\x85\xc5\x54\xe6\xe0\xfb\x67\xa9\x48\xa3\xdf\x4a\xb3\xed\x5c\xde\x27\x09\x24\x57\xcf\x05\x14\x70\x0c\x13\x74\xb2\x6b\x25\xe2\x78\x85\x78\xbb\xc6\x32\x97\x81\x84\x2d\xf9\xc4\x81\x45\xd6\x8f\x29\xb5\xe7\x27\xb0\xb6\xdc\x3f\x51\x8a\xc6\xa1\x0e\x58\xe1\x83\xa2\x6c\x4a\x5f\xfc\x16\x5e\xa8\x6b\x8d\x9f\x08\xed\x0a\x56\x6e\xe4\x2a\x14\x70\xa4\x35\xb3\xf8\x0b\x05\xbc\x51\xd7\x3b\xe3\xb3\x9e\x3a\x23\x35\x75\xcc\x4e\xeb\x07\xe5\xb7\xb2\xc1\x96\x5e\xef\x3b\x09\x7c\xa0\x02\x71\x68\x78\x86\x71\x4a\x79\x60\xc9\xd3\x4d\xbf\x4d\xeb\x3d\xee\xae\x20\x2f\xb0\x1b\xff\x76\xc1\x09\x26\x0a\xbc\x9e\x12\x61\x16\xda\xc2\x74\xc6\xd3\x7c\x27\x2c\x4c\x9e\xf0\x22\x6d\xf9\xf4\xb4\x9e\xf1\xb6\xeb\xaa\x94\x3b\xdc\xa2\x35\xd4\x1b\x45\x4f\x0a\x05\x46\x71\xa8\x47\xac\x28\x8a\xde\xa5\x25\x44\xd1\xb3\x1d\x6a\x06\x27\xa7\x36\x79\xe5\xba\xe8\x57\xf5\xaf\x14\x98\x86\x93\xff\xc5\x82\x0e\xe4\xba\x4b\x16\x9f\x6c\x8e\xfb\x4a\xce\x05\x97\x2c\x2e\xae\x4f\xc2\xe2\x63\xae\x4b\xe9\x4d\xba\x1e\xa5\x27\x1d\xaa\xdd\x6f\x10\x5f\x55\x61\xe8\x13\x9a\xcd\xed\x9f\x08\x28\x62\x8e\x25\x0e\x7f\x15\x68\xc1\xb8\x43\x2b\xc2\x62\x40\x30\x6d\xfa\xd3\x45\x9d\x59\x17\xee\x5b\x75\xa2\xa6\x41\x28\x7f\x30\xe4\x61\x3d\x49\xc2\x4f\x70\xde\x91\x1a\x39\x75\x57\xea\x6a\x77\xf7\x3d\x4b\xb6\xdd\x30\xf6\xe0\x6e\x79\xb7\x4b\x1d\x96\x53\xcc\xee\xf0\x15\xe3\x5d\x73\x98\xb0\x78\xa4\x66\xbb\xdd\xeb\x4b\x16\x5f\xca\x16\xc7\xdb\x9b\x0b\xdf\xf6\x7b\xda\xac\xdf\x9b\x89\x39\x19\xbe\xfa\x5f\x00\x00\x00\xff\xff\x4a\x66\x87\xca\x38\xc8\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 51256, mode: os.FileMode(436), modTime: time.Unix(1483852844, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x58\x7e\xb9\x0f\xf7\x36\xbe\xfd\x58\xda\x5d\x35\x95\x58\x58\x4a\x61\xf9\x58\x68\x41\xec\x9b\xeb\x4c\x12\x87\xd8\x0e\x9e\x49\xd3\x6c\xd5\xff\xbe\x6a\x0a\x14\x21\x90\x78\xcb\xcc\xe4\x1c\x9f\xa3\xa3\xb3\x5a\x45\x10\x6b\x0b\x8c\xa7\x20\x23\xf0\x7c\xbd\xde\x1b\x6e\x3e\x47\x7b\x8c\x31\x36\x34\x40\x92\xa9\x54\x7a\x04\x0a\xf9\x6c\x7a\xdc\x1a\xf0\xd7\x27\x2b\x0d\x84\x7c\xa1\xa1\x2a\x9c\x27\xce\x94\xb3\x04\x96\x42\x5e\xe9\x88\xd2\x30\x82\x85\x56\xd0\x6a\x86\xff\x98\xb6\x9a\xb4\xcc\x5b\xa8\x64\x0e\x61\x9b\x8f\xf6\x1a\xa6\xd5\x4a\xc7\x2c\x98\x21\xf8\x0b\x69\x60\xbd\xde\xd2\x93\xa6\x1c\x46\xab\xd5\xab\xc3\x3f\xc8\xe6\x8e\x86\x62\x7b\x7a\xc2\x42\x8e\x6f\x30\xe7\xf5\x3b\x7f\xd9\x68\xbd\xde\x3e\x37\xcc\xb5\x7d\x60\x1e\xf2\x90\x23\xd5\x39\x60\x0a\x40\x9c\xa5\x1e\xe2\x90\xa7\x44\x05\x7e\x13\xc2\xc8\xa5\x8a\x6c\x30\x77\x8e\x90\xbc\x2c\x36\x83\x72\x46\xbc\x2c\x44\x37\xe8\x06\x7d\xa1\x10\x77\xbb\xc0\x68\x1b\x28\x44\xce\xb4\x25\x48\xbc\xa6\x3a\xe4\x98\xca\xee\xa0\xd7\xfa\x7e\x7b\xaf\xf5\xcd\xe4\x18\xce\xda\xd1\xd8\x9c\x5e\x1f\x3c\xd4\xaa\x3c\x39\x38\xb9\x4e\xba\x9d\x4b\x33\x53\x55\xd5\x77\xb6\x7b\x7d\x1f\x25\xbd\x5b\xf9\xef\x95\xb9\x99\xe2\x1f\x71\xb6\x3f\x58\xcc\xa3\x1f\x59\xda\x2b\x39\x53\xde\x21\x3a\xaf\x13\x6d\x43\x2e\xad\xb3\xb5\x71\x25\x3e\xa7\xf1\x19\x53\x2a\xb2\x19\x06\x2a\x77\x65\x14\xe7\xd2\x43\xe3\x48\x66\x72\x29\x72\x3d\x47\x11\x3b\x4b\x2d\x59\x01\x3a\x03\xa2\x17\xec\x07\xdd\xc6\xde\xeb\xf5\x8b\xc3\x4f\xbc\x2a\x24\x22\x10\x36\x1c\xaa\x44\x72\xe6\x09\xb9\x85\xa2\xf2\xba\x20\x86\x5e\xed\x04\x6e\xb4\x04\x89\x73\x49\x0e\xb2\xd0\xf8\x46\x5f\xf6\x58\x82\xaf\x45\x3b\x68\x77\x82\xde\xd3\xd4\x08\xca\x90\x8f\x86\x62\x4b\x38\xfa\x98\xfd\xb3\x99\x66\x6f\x23\xcd\xde\x4d\x74\xaa\xbe\x4c\x7e\xe9\xf9\xff\x9d\xfe\xe3\xa2\xce\x6e\xce\xe3\x93\xec\xf2\x5c\xfe\x7c\x88\xcb\xbb\xdb\xe5\xef\xe5\xec\xca\x1e\x9e\x1e\xf4\xf3\x8e\x39\xbc\xbb\x98\x14\xe3\xaf\x66\x7c\x78\x34\xa8\xc6\x17\x13\x75\x75\xd4\x9f\x2e\xe5\xc7\x89\xee\xbc\x7c\x6c\xa6\xc8\x25\xc5\xce\x9b\x80\x2a\x4d\x04\xbe\x71\x52\xe9\x28\x01\xc2\x46\xf0\x4b\x69\x4b\x8a\x37\xa5\xdd\x91\x0e\xc5\xb6\xe0\xcf\xad\xf8\x1b\x00\x00\xff\xff\xf8\x1d\xf8\x44\x04\x04\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x4b\x8f\xdb\x36\x10\xbe\xef\xaf\x98\xb2\x01\xda\x02\x91\x89\x24\x40\x0f\x01\x2d\x20\x4d\x82\x36\x40\x92\x06\x69\x52\xa0\xc7\x91\x44\x4b\xec\x52\x1c\x95\xa4\xbd\x70\x05\xff\xf7\x82\x92\xed\xb5\x9e\x5e\x3b\x69\xbb\x07\xaf\xa4\x79\x7d\x9c\xb7\x24\xbe\x79\xf5\xeb\xcb\x4f\x7f\x7c\x78\x0d\x85\x2f\x75\x7c\x23\xc2\x3f\xd0\x68\xf2\x25\x93\x86\xc5\x37\x75\xed\x65\x59\x69\xf4\x12\x58\x21\x31\x93\x96\xc1\x62\xb7\xbb\x11\x09\x65\xdb\xf8\x06\x00\x40\x64\x6a\x03\xa9\x46\xe7\x96\x2c\x25\xe3\x51\x19\x69\x59\x4b\x0b\x7f\xa7\x2a\x0c\x6e\x12\xdc\xab\x38\x32\x9c\x2a\xf8\x73\x5d\x26\xe4\x2d\x99\x13\x05\xad\x12\xb5\x82\xc5\x67\x27\xed\x7b\x2c\xe5\x6e\xd7\x21\x8a\xe2\x49\x5c\xd7\x27\xd4\xef\x1c\x24\xe4\x05\x2f\x9e\xf4\xb5\x48\xed\xc6\xa4\xdf\x6d\xa7\xf8\x4d\x36\x60\x7f\x1a\xe3\xda\x53\x89\x5e\xa5\xa8\xf5\x16\x52\xd2\x5a\xa6\x1e\xd0\x64\x90\x58\xc2\x2c\x45\x17\xee\xb6\x70\xab\x4c\xe6\x80\x56\xa0\xcc\x8a\x6c\x90\x20\x03\x2b\xb2\xb0\xa5\xb5\xe0\xc5\xd3\xb1\x33\xfe\x44\x7e\xec\x88\x08\x85\x95\xab\x25\x2b\xbc\xaf\xdc\x73\xce\xfd\x9d\xf2\x5e\xda\x45\x4a\x25\xaf\xeb\x7b\x29\x76\xf0\x64\xe2\x0d\x24\xde\x44\x8e\x52\x85\x3a\x52\x29\xb5\xf7\x7b\x41\x16\x0b\x57\xa1\x39\x70\xaf\x10\x56\x78\xa0\x85\x4b\x4c\xbd\xda\x48\x16\x0b\x1e\xd8\x62\xc1\xf1\x21\xae\xec\xa3\xc4\xaa\x72\x8b\x13\xa8\x5f\x0b\x5d\x85\xce\x9d\x83\x37\x8c\xdc\xd0\x87\x52\xfa\x4c\xa6\xb7\xff\x06\xc4\xa3\xf2\x69\x90\x03\x40\x29\x19\x47\x5a\x2e\x32\xb9\x91\x9a\x2a\x69\xdd\x22\x27\xca\xb5\x6c\xc2\x8c\x95\x72\xe1\x87\x6f\x94\x53\x64\xf6\xa4\xf0\xb4\x21\xff\xb5\x26\x8f\xee\x2c\xfc\x56\x6a\x14\x7d\x4b\x7a\x48\xf4\x07\xc8\x73\xe5\x8b\x75\xd2\xe0\x50\x77\xe8\xf1\x16\x79\x19\x6a\xea\x3c\x9c\x46\x70\x1c\x4e\x43\x3a\x07\x47\xf0\x4c\x6d\xe2\x93\x6e\xb2\xd6\x07\x35\x06\x37\x60\x70\x13\x79\x4c\x5c\xa7\x9f\x08\xad\xc0\x92\x96\x4b\x56\x59\xe9\xa4\xf1\x4d\x65\x1e\xb1\x1e\xcd\x21\x64\xe8\x31\xf2\x94\xe7\x81\xd9\x63\xc2\xf6\xe7\xfe\xb6\xa0\x52\xb2\xf8\x17\x2a\x65\x40\x23\xb8\x56\xa7\x06\xea\xda\xa2\xc9\x25\x3c\xba\x95\xdb\xc7\xf0\x68\x83\x1a\x9e\x2f\x61\xf1\xb2\xed\x14\x8a\xcc\x3b\xac\x3a\xd9\x39\x81\x68\x16\x42\x5d\x07\xf5\xbb\x1d\x8b\x0f\x57\xe3\x50\xba\x95\x20\xf8\x5a\xc7\xe3\xcd\xd7\x63\x12\x85\x0e\x2e\x8d\xef\xb5\xdf\x86\x4b\x65\x4b\xd6\x1c\xfb\x94\xbf\x42\x13\x32\x26\x93\xa0\x0c\x1c\x1c\xd7\x91\xed\x5b\x09\x12\x1a\x9a\xdf\x28\x0b\x5e\xb2\x23\x02\xa3\x42\x51\x98\x40\xca\xe4\x13\xfc\x8d\x4c\xf1\xac\x2b\xe2\x95\xd7\x6d\x28\x5b\xaf\x71\x4d\x39\x67\xf1\x6b\x6b\xc9\xc2\x5b\xca\x5b\x97\x15\xcf\x26\x20\xb4\xc9\x35\x46\x6a\xbb\xf5\x5b\xca\x7b\x5d\x66\xfe\x04\x61\x6c\xb2\x58\x54\x56\xc6\x22\xa5\x4c\x86\xb9\xd5\xe8\x10\xbc\xb9\x15\xbc\x21\xcd\x99\x1d\xe9\xbb\xe7\xec\x4d\x03\x94\x65\xfc\x9e\x7c\xa1\x4c\x0e\x9e\xc0\x15\x74\x27\xb8\x2c\xaf\x70\xc6\xb0\xdd\xce\x88\x4c\xa5\x43\x18\x93\xff\x65\x32\xcc\x0f\x82\xf8\xd3\xbe\x9b\xdf\x97\xad\xbb\x3a\x5d\x2e\x0e\x4d\x9b\x5f\xd3\x1d\xa3\xa7\x3e\x14\xf5\x14\x11\xae\xe9\x48\x23\x36\xba\x8d\x65\x82\xe9\xe0\xdb\xba\x0e\x46\xfa\xdd\x69\xde\x00\x3f\x67\x61\x2a\xcf\xee\x35\xcc\xf9\x61\xb6\x76\xe0\xd2\x72\x38\x87\x67\x2a\xf7\xff\xd7\x92\x68\xb3\xea\x4d\x89\xb9\x7c\x61\x50\x6f\x9d\x72\xaf\xd0\xcf\xfa\x64\xa2\x88\x7e\x6e\x97\x85\xdf\x9b\x5d\x04\x5e\x7c\x78\x03\x1f\xa5\x5b\x6b\x0f\xdf\xd7\xf5\x98\x81\x1f\xa6\xcb\x06\x1e\x14\x9b\x0b\x71\x9c\x35\x77\x69\xe0\xe0\xfa\x2a\x6e\xdc\xf1\xf9\xe3\xdb\x07\x8e\x0a\x4b\x77\x33\x2a\xfb\xdc\x29\xe9\xa8\xcc\xa2\x1f\xcf\x88\x40\xb7\x38\x5b\x4c\xbf\xd1\xda\xa6\xe1\xad\x21\x16\xaa\xcc\xc1\xd9\xf4\x9e\xd6\xe0\x3d\xce\x7a\x55\xe6\x91\x95\xae\x22\xd3\x2c\xde\x8f\x01\xb5\x5f\xb2\x86\x11\x30\x04\xfa\x6f\x99\x41\xb2\x85\x41\x38\xd8\x70\x7b\x1c\xc0\x9a\x76\xf8\x97\x1e\xb8\x33\x68\x3b\x59\xd9\x66\x49\x6f\xf0\x7e\x09\xcc\xab\x87\xf6\x25\x4d\xe7\xeb\x34\x9c\x91\x47\x57\xcc\x87\xe3\x52\x78\x5c\x44\x47\x17\xc3\xb1\x75\x10\x8f\x9c\xed\x88\x8d\x72\xab\x32\x36\x98\x1c\xc3\xf7\x8e\x31\xe0\xfd\xfd\xf6\xfe\x7d\x60\x7f\x2d\x78\xfb\xb5\x42\xf0\xf6\x2b\xc7\x3f\x01\x00\x00\xff\xff\x12\xe9\x92\xa2\xf6\x10\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4342, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplLogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xb1\xaa\xc3\x30\x0c\x45\x77\x7f\x85\x9e\x3f\x20\x86\xcc\x8a\x97\xd7\x6c\x81\x76\xe8\xd2\x51\x89\x45\x1c\x70\xec\xe0\x98\x40\x31\xfe\xf7\x12\xdc\xd2\x6a\x11\xe2\xa2\x73\x0f\xfe\x5d\xae\xff\xf7\xc7\xad\x07\x9b\x56\xa7\x05\x9e\x0b\x1c\xf9\xb9\x93\xec\xa5\x16\x39\x27\x5e\x37\x47\x89\x41\x5a\x26\xc3\x51\x42\x53\x8a\xc0\x31\x98\xa7\x16\x00\x00\x68\x96\x03\x26\x47\xfb\xde\xc9\x29\xf8\x44\x8b\xe7\x28\x6b\x76\xce\x2f\xc2\xd3\x31\xd2\x1b\xf1\xc9\xd1\xb6\xba\x8f\x31\x44\x18\xc2\x8c\xca\xb6\xdf\x57\xdc\x22\xeb\x9c\x9b\x21\xcc\xa5\xa0\x3a\xaf\x5a\xa9\xcc\x72\x68\x81\xaa\x5a\xa0\xaa\xf6\xaf\x00\x00\x00\xff\xff\xcd\x10\xe5\xfc\xce\x00\x00\x00")

func assetsTmplLogTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplLogTmpl,
		"assets/tmpl/log.tmpl",
	)
}

func assetsTmplLogTmpl() (*asset, error) {
	bytes, err := assetsTmplLogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/log.tmpl", size: 206, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xcb\x92\x9b\x30\x10\xbc\xfb\x2b\x54\xca\x21\x27\xa2\x1f\x10\x5c\x72\x8d\x73\x49\xe5\x03\x06\x34\xc2\x53\x91\x47\x94\x24\x28\xa7\x28\xfe\x7d\x8b\x97\x17\x63\xef\xd6\xee\x61\x7d\x62\x68\x7a\xba\x99\xe9\xe9\x7b\x83\x96\x18\x85\x64\xe8\x4a\x08\x72\x18\x0e\x9a\xa1\x13\x95\x83\x18\xf3\x05\x15\xf3\x23\x33\x68\xa1\x75\x69\x7d\xb5\x74\x41\x93\x25\xdf\xc8\xe2\x20\x84\x10\xda\xd0\xb5\xb1\xf2\x9c\x80\x18\x43\x66\x5d\x4b\x66\x61\xec\x59\x8b\xd0\x09\xc1\x60\xd8\x70\x26\x5e\xd9\xa6\xe4\x79\x47\x4d\xbe\xae\x1d\x8a\xca\x3b\x07\x4d\x44\x23\x85\x81\x04\x0b\x3c\xda\xce\xf8\x0a\x43\xa8\x31\xe5\xf2\xdb\xdc\x7d\x44\x6e\xa3\x14\x10\x08\x32\xbc\x34\xc0\x06\x4d\x2e\x2d\xb8\x88\x3b\xf3\xe9\x07\x62\x03\x57\x7b\xaa\x3c\x67\xe3\x82\x0a\xad\x46\xfc\x99\x74\xad\xe6\x55\xdc\xa2\x7d\x4f\x56\xfc\xf8\x1b\x31\xfc\x86\x33\x0e\xc3\x6d\x0b\xec\xf6\x56\x06\x60\x23\xc5\x29\xa0\xcd\xa5\x92\x45\xdf\x6f\x5a\xbf\x47\x51\xfa\xa4\x15\xec\x1d\xd0\xc5\x4f\x2b\x1f\xff\xbf\xa1\xc5\x66\x23\xa5\x95\xa1\xee\xdd\xa3\x58\xa3\x14\xaf\x99\x92\x59\xbf\xce\x49\xee\xd6\xd4\xba\x8d\xc4\x7a\xa4\x0c\xdd\xa3\x6c\x1d\x6d\xb8\x19\x25\x3c\x3f\x60\xdd\xcd\x9b\x39\xe2\x7f\xd7\x59\x2b\xcf\x96\x6a\x25\x8b\x9f\x53\x71\x37\xf3\x3c\xa7\xa3\x2f\xb2\x77\x7e\xf4\xfe\xe5\x9f\x6e\x1c\x13\xa4\x36\x2a\x59\xfc\x99\x8a\x0f\xda\x6b\xd5\xba\xe2\x51\xfe\x4b\xa9\x15\x43\x57\x1c\xd6\x43\x79\x09\x00\x00\xff\xff\xf1\xcc\x8c\x67\x9a\x04\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 1178, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\xb9\x3b\x1c\xf6\x56\x61\x4b\xd5\xf6\xe3\x50\x55\xad\xb4\x7b\xd9\x53\x35\x86\x89\x8d\x82\x01\xc1\x38\xab\xc8\xda\xff\x5e\xf9\x23\xdb\x34\x49\xa5\x3d\x64\x93\x03\x88\x0c\xbc\x37\xef\x61\x66\xd4\x87\xcf\x3f\xef\x1f\x9f\x7e\x7d\x81\x96\x3b\x57\xad\xd4\x38\x81\x43\xdf\x94\x82\xbc\xa8\x56\xc3\xc0\xd4\x45\x87\x4c\x20\x5a\x42\x43\x49\xc0\xfa\xe5\x65\xa5\xea\x60\xf6\xd5\x0a\x00\x40\x19\xbb\x03\xed\x30\xe7\x52\xe8\xe0\x19\xad\xa7\x24\xe6\xd8\xf8\x3b\x86\xf0\xb8\xab\x71\x81\x38\xc4\xd5\x26\xa4\x0e\x50\xb3\x0d\xbe\x14\x32\x13\xf7\x51\x0a\xe8\x88\xdb\x60\x4a\x11\x43\x66\x01\xe4\x35\xef\x23\x95\xa2\xeb\x1d\xdb\x88\x89\xe5\x78\xac\x30\xc8\x78\xc4\x35\xe1\x59\x1f\x7b\x86\x79\x7b\xee\xeb\xce\xb2\x38\xe4\x57\xb3\x87\x9a\x7d\xe1\x9a\x69\x8a\xc9\x76\x98\xf6\x02\x76\xe8\x7a\x2a\xc5\x03\xee\xe8\x14\xad\xbd\xab\x1e\x9f\x2d\x33\x25\x25\xdb\xbb\x7f\x83\xc3\x60\x37\xb0\xfe\x41\x39\x63\x43\x47\x92\x4e\x6d\x41\x47\x89\x61\x1a\x0b\x83\xbe\x19\xfd\x19\x86\xbf\x07\x95\x34\x76\x77\x0a\x4d\xde\xbc\x11\xd2\xfa\x4d\x10\xd5\x53\xe8\x41\xa3\x07\xdd\x92\xde\x4a\x9d\x68\x74\x7c\x49\x1d\x30\x46\x67\x35\x8e\x1e\x83\x42\x68\x13\x6d\x4a\xd1\x32\xc7\xfc\x51\x4a\x8c\x31\xaf\x79\xde\xb9\xd6\xa1\x13\xc0\x98\x1a\xe2\x52\xfc\xae\x1d\xfa\xad\xa8\x5a\x4a\xa4\x24\x56\x17\x12\x55\x8c\xb5\xa3\x43\x5a\xf3\x62\x1a\x8b\xcc\xc9\x46\x32\xcb\xaa\x0e\xc9\x50\x7a\x5d\x26\xca\x31\xf8\x6c\xcf\x0c\x9f\x31\xd3\xf9\x9f\x73\xc0\x54\xf7\xc1\xe7\xbe\xa3\x04\xdf\x69\xaf\x24\x9b\xff\xef\xbc\x18\x38\xfb\x44\x22\xe6\xfc\x1c\x92\x11\xe0\xb1\xa3\x52\x2c\x46\x14\x7a\xe1\x29\xb6\xb4\xbf\x90\xe3\x84\x73\x91\x5e\xc9\x4b\xe9\xbf\x4d\xd3\x03\xe9\x44\x7c\x13\x59\x79\xa2\x7a\x6f\x65\x9f\xb4\xa6\x9c\xe1\x31\x6c\xc9\xbf\xa7\x2c\x9c\x78\x0a\x1e\x79\x6e\xa9\xe9\x06\x37\x76\x2c\xed\x3a\xb7\xa6\xe4\xf4\x08\xcf\x2b\xdd\xb7\x10\x1a\x47\x70\xef\x42\x6f\xce\xcb\xdd\xed\x9f\x7a\x22\x43\x9e\x2d\x3a\xf8\x6a\x1d\x5d\xc3\xe4\x8d\x75\x74\x30\xb8\xd1\xa3\xce\x42\xbf\xb2\x14\x53\xf4\xca\xde\xaa\xa9\x53\x2d\xbd\x72\xae\x9f\x4a\xce\xed\x53\xc9\xb9\xed\xfe\x09\x00\x00\xff\xff\xbe\x65\xa9\xfd\x87\x07\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 1927, mode: os.FileMode(436), modTime: time.Unix(1483797711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplStatusTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x51\x6b\xdb\x30\x10\xc7\xdf\xfd\x29\x6e\x7e\x5f\x04\x7d\x1c\xaa\x61\x64\x5b\x61\xac\xb4\x90\xee\xa1\x8f\x72\x74\x49\x0e\x54\xc9\x9c\xce\x2e\xa1\xf4\xbb\x0f\x5b\x1e\xd3\xd6\x24\xf3\x20\x79\x9a\xf3\x12\x94\xbf\xee\x77\xe4\x7e\xd8\x96\xf5\xbb\x4f\x77\xcb\x87\xc7\xfb\xcf\xb0\x93\x27\x57\x15\xba\xff\x02\x67\xfc\xf6\xba\x44\x5f\x56\xc5\xcb\x8b\xe0\x53\xe3\x8c\x20\x94\x3b\x34\x16\xb9\x84\xc5\xeb\x6b\xa1\xeb\x60\xf7\x55\x01\x00\xa0\x2d\x75\xb0\x76\x26\xc6\xeb\x72\x1d\xbc\x18\xf2\xc8\x65\xca\xfa\x4f\x8e\xf0\xa6\xab\xcd\x88\xf8\x99\xeb\xdd\x55\xb5\x12\x23\x6d\xd4\x6a\x77\xf5\xab\x2e\xe7\x8a\xa9\x1d\xbe\x67\x8c\x4d\xf0\x91\x3a\xcc\xf0\xc3\xd6\x21\xff\x6d\x33\xa4\x92\x28\x4c\x0d\xda\x71\x55\x07\xb6\xc8\x68\xff\x28\x4f\x08\x7e\xfb\x63\x0a\x6c\xf5\xf0\x4c\x22\xc8\xf0\x18\x5a\x86\xbb\x67\x0f\xdf\x28\x0a\x7a\x64\xad\xc4\x1e\x2f\x3b\x18\xa4\x91\xd0\x06\x16\xe9\x4f\x2f\x46\x78\x42\xde\xee\x23\xba\x4d\x4a\xb2\x19\xbd\xa1\xc7\xc6\x78\x88\xb2\x77\xd8\x0f\xdd\x05\xfe\x50\xbb\x16\xcb\xea\xe3\x5a\xa8\x43\xad\xfa\xfc\x54\x7f\x74\x11\xff\x8d\x3f\x8c\x6d\x25\xa1\x99\x00\xf7\xf6\x08\xfb\xf0\xbc\xb4\x3a\x34\xfc\x49\x46\xbe\x47\xe4\xcb\xd9\xe8\xe9\x71\x96\x31\x55\xc6\x3d\x32\x05\x4b\x6b\xf8\x1a\xea\x33\xba\x98\x05\xfc\x4d\xc0\x32\xf8\x0d\x6d\xe1\x0b\x39\x84\xdb\xe0\x49\x02\x93\xdf\x9e\x43\xc1\x48\x4b\x0d\x66\x11\x53\xaf\x84\x25\xa3\x45\x2f\x64\xdc\x65\x7c\x8c\x7d\xfa\x36\xb3\x8e\xe3\x33\xbd\x09\x61\xeb\x10\x96\x2e\xb4\xf6\xe2\x4e\x6e\x86\x36\xb3\x92\xd3\x4a\x56\xc8\xdd\x79\x9e\xd4\x89\xf4\xdf\xdf\x93\xb4\x1a\xce\xb6\xd9\xb9\x59\x59\xea\xb2\x65\xeb\xaa\x22\x0b\xfb\x65\xb6\x4d\xab\x74\x92\xd7\x2a\xbd\x01\xfc\x08\x00\x00\xff\xff\x4e\x3d\xb1\x15\x12\x0c\x00\x00")

func assetsTmplStatusTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplStatusTmpl,
		"assets/tmpl/status.tmpl",
	)
}

func assetsTmplStatusTmpl() (*asset, error) {
	bytes, err := assetsTmplStatusTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/status.tmpl", size: 3090, mode: os.FileMode(436), modTime: time.Unix(1483814045, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/log.tmpl": assetsTmplLogTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/status.tmpl": assetsTmplStatusTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"log.tmpl": &bintree{assetsTmplLogTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"status.tmpl": &bintree{assetsTmplStatusTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

