// Automatically generated by MockGen. DO NOT EDIT!
// Source: models/worker.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of WorkerMessageHandler interface
type MockWorkerMessageHandler struct {
	ctrl     *gomock.Controller
	recorder *_MockWorkerMessageHandlerRecorder
}

// Recorder for MockWorkerMessageHandler (not exported)
type _MockWorkerMessageHandlerRecorder struct {
	mock *MockWorkerMessageHandler
}

func NewMockWorkerMessageHandler(ctrl *gomock.Controller) *MockWorkerMessageHandler {
	mock := &MockWorkerMessageHandler{ctrl: ctrl}
	mock.recorder = &_MockWorkerMessageHandlerRecorder{mock}
	return mock
}

func (_m *MockWorkerMessageHandler) EXPECT() *_MockWorkerMessageHandlerRecorder {
	return _m.recorder
}

func (_m *MockWorkerMessageHandler) Handle(msg interface{}) error {
	ret := _m.ctrl.Call(_m, "Handle", msg)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerMessageHandlerRecorder) Handle(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Handle", arg0)
}

// Mock of Worker interface
type MockWorker struct {
	ctrl     *gomock.Controller
	recorder *_MockWorkerRecorder
}

// Recorder for MockWorker (not exported)
type _MockWorkerRecorder struct {
	mock *MockWorker
}

func NewMockWorker(ctrl *gomock.Controller) *MockWorker {
	mock := &MockWorker{ctrl: ctrl}
	mock.recorder = &_MockWorkerRecorder{mock}
	return mock
}

func (_m *MockWorker) EXPECT() *_MockWorkerRecorder {
	return _m.recorder
}

func (_m *MockWorker) Start() error {
	ret := _m.ctrl.Call(_m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Start() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Start")
}

func (_m *MockWorker) Stop() error {
	ret := _m.ctrl.Call(_m, "Stop")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}

func (_m *MockWorker) Name() string {
	ret := _m.ctrl.Call(_m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockWorkerRecorder) Name() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Name")
}
