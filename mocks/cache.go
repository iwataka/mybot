// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/iwataka/mybot/data (interfaces: Cache)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	data "github.com/iwataka/mybot/data"
	models "github.com/iwataka/mybot/models"
)

// Mock of Cache interface
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *_MockCacheRecorder
}

// Recorder for MockCache (not exported)
type _MockCacheRecorder struct {
	mock *MockCache
}

func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &_MockCacheRecorder{mock}
	return mock
}

func (_m *MockCache) EXPECT() *_MockCacheRecorder {
	return _m.recorder
}

func (_m *MockCache) GetLatestDMID() int64 {
	ret := _m.ctrl.Call(_m, "GetLatestDMID")
	ret0, _ := ret[0].(int64)
	return ret0
}

func (_mr *_MockCacheRecorder) GetLatestDMID() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLatestDMID")
}

func (_m *MockCache) GetLatestFavoriteID(_param0 string) int64 {
	ret := _m.ctrl.Call(_m, "GetLatestFavoriteID", _param0)
	ret0, _ := ret[0].(int64)
	return ret0
}

func (_mr *_MockCacheRecorder) GetLatestFavoriteID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLatestFavoriteID", arg0)
}

func (_m *MockCache) GetLatestImages(_param0 int) []models.ImageCacheData {
	ret := _m.ctrl.Call(_m, "GetLatestImages", _param0)
	ret0, _ := ret[0].([]models.ImageCacheData)
	return ret0
}

func (_mr *_MockCacheRecorder) GetLatestImages(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLatestImages", arg0)
}

func (_m *MockCache) GetLatestTweetID(_param0 string) int64 {
	ret := _m.ctrl.Call(_m, "GetLatestTweetID", _param0)
	ret0, _ := ret[0].(int64)
	return ret0
}

func (_mr *_MockCacheRecorder) GetLatestTweetID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLatestTweetID", arg0)
}

func (_m *MockCache) GetTweetAction(_param0 int64) data.Action {
	ret := _m.ctrl.Call(_m, "GetTweetAction", _param0)
	ret0, _ := ret[0].(data.Action)
	return ret0
}

func (_mr *_MockCacheRecorder) GetTweetAction(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetTweetAction", arg0)
}

func (_m *MockCache) Save() error {
	ret := _m.ctrl.Call(_m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCacheRecorder) Save() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save")
}

func (_m *MockCache) SetImage(_param0 models.ImageCacheData) {
	_m.ctrl.Call(_m, "SetImage", _param0)
}

func (_mr *_MockCacheRecorder) SetImage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetImage", arg0)
}

func (_m *MockCache) SetLatestDMID(_param0 int64) {
	_m.ctrl.Call(_m, "SetLatestDMID", _param0)
}

func (_mr *_MockCacheRecorder) SetLatestDMID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetLatestDMID", arg0)
}

func (_m *MockCache) SetLatestFavoriteID(_param0 string, _param1 int64) {
	_m.ctrl.Call(_m, "SetLatestFavoriteID", _param0, _param1)
}

func (_mr *_MockCacheRecorder) SetLatestFavoriteID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetLatestFavoriteID", arg0, arg1)
}

func (_m *MockCache) SetLatestTweetID(_param0 string, _param1 int64) {
	_m.ctrl.Call(_m, "SetLatestTweetID", _param0, _param1)
}

func (_mr *_MockCacheRecorder) SetLatestTweetID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetLatestTweetID", arg0, arg1)
}

func (_m *MockCache) SetTweetAction(_param0 int64, _param1 data.Action) {
	_m.ctrl.Call(_m, "SetTweetAction", _param0, _param1)
}

func (_mr *_MockCacheRecorder) SetTweetAction(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetTweetAction", arg0, arg1)
}
