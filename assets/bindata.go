// Code generated by go-bindata.
// sources:
// assets/js/config_after.js
// assets/js/config_before.js
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config/general_conf.tmpl
// assets/tmpl/config/modal.tmpl
// assets/tmpl/config/source.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x51\x6f\xd3\x3c\x14\x7d\xcf\xaf\xb8\x8a\xf6\xc9\x89\xb4\x26\x9f\x78\xcc\xd6\xc2\x40\x20\x78\x42\xb0\xf1\x80\x00\x55\xae\x7d\x97\x78\x38\xb6\x67\x5f\xb7\x0a\x51\xfe\x3b\x8a\xdb\x95\xb2\xc1\x03\x2f\x95\xef\x3d\xa7\xf7\xfa\x1c\x9f\x6c\xb9\x07\xda\x29\x22\xf4\x57\x42\xd8\x68\x28\xc0\x12\x0c\xee\xe0\xa5\xb6\x56\x76\x36\x1a\x59\x8c\x19\x80\xe4\x14\xfb\x1b\xfb\x1d\x8d\xfa\x81\xbe\x39\x81\x2b\x7a\xe8\x86\x6a\xd7\x29\xc2\xe0\xb8\xc0\xf3\x0c\xe0\x3e\xa2\x1f\xfe\xf1\x3f\x1e\x7b\x4b\xd8\xc0\xbc\x13\x20\x7a\xdd\x00\xab\x0f\x37\xac\x63\x40\x1f\xea\x80\xdc\x8b\xae\x7e\x7e\xbf\xfc\xef\xc3\xa7\xd7\x1f\x3f\xb3\xf3\xc4\xdd\x29\x2d\x05\xf7\xb2\x01\x76\xe8\x67\x00\x53\x36\x95\x17\x59\x96\x64\x0e\x0e\x79\x87\x5c\x5e\x23\x91\x32\xed\x2c\x74\xde\x62\x78\x8f\x0d\xb0\xc3\x8e\x05\x3f\xd8\x90\xa6\x4a\x15\x9c\xe6\x43\x03\x2c\x08\x8f\x68\xd6\x33\x39\x21\xc1\x46\x2f\xb0\x79\x6c\xde\x0c\x11\xf6\x4e\x73\xc2\xf0\xa0\x02\x7b\x47\x43\x03\x5f\x52\x01\xc0\x2e\xa5\xda\x82\xd0\x3c\x84\x65\x9e\xb0\x45\x8f\x21\xf0\x16\xf3\x83\x14\x00\x76\x33\x38\x04\x6e\x06\xea\x94\x69\xa1\x43\x8f\xbf\xb0\xcb\x5a\xaa\xed\x8a\xa5\xf2\x5b\x75\x67\x95\x29\xd8\x57\xc3\xca\x3d\x21\xc4\xb6\xc5\x40\xca\x9a\x06\xde\x72\x23\x35\x6e\xb8\x0f\x95\xb0\xbd\x53\x1a\x8b\xdf\x6e\xb1\x3a\x19\xaa\xfa\x16\x82\x17\xcb\x7c\x1c\x9d\xb7\xb7\x4a\xe3\x5a\xf5\xbc\xc5\x75\xf4\x7a\x9a\x72\xe0\x9a\x96\xf9\x01\x81\x84\xe4\xd0\xa1\x6a\x3b\x5a\xe6\xcf\xfe\xcf\x61\xa7\x24\x75\xe9\x58\x9f\x8e\x0d\x8e\x9b\xd5\x38\xce\xc6\x4d\xd3\x8b\x71\x3c\x31\x72\x9a\x2e\xeb\x04\x3f\xa2\x3f\x78\xa3\xf9\x06\x35\xa4\xdf\x85\xf3\xaa\xe7\x7e\xc8\x57\xb7\x56\x6b\xbb\x43\x3f\xbb\x3b\x1e\x8b\x75\xb2\xff\x4f\x03\xff\xe2\x55\xb9\x0f\x47\x96\x9d\x15\x4c\x19\x17\xa9\x3a\xe6\x63\x41\xbc\x0d\xa9\xc7\xca\xea\x78\x2e\xc6\x23\xe1\x2e\x34\x4f\xd3\x94\x72\x76\x56\x48\x2b\x62\x8f\x86\xca\xca\x23\x97\x43\x71\x1b\x8d\x98\xdf\xa2\x28\x53\x18\xce\x0a\x16\x50\xa3\xa0\x6a\x63\x2d\x05\xf2\xdc\x2d\xfa\xa8\x49\xed\xbb\xac\xac\x4e\xaa\x62\x1f\x1f\x65\x84\x8e\x12\xaf\x53\xef\x4a\xeb\xf7\x6e\xff\xb8\xe4\x23\xee\x75\xa2\xe1\x1b\x8d\x6f\x94\x26\xf4\xca\xb4\x4f\xa1\x57\x3c\xe0\x3b\x13\xd0\x04\x45\x6a\xfb\x98\x39\x5b\x51\x5e\xa4\x2f\xe5\x67\x00\x00\x00\xff\xff\x4c\x55\x75\x2f\x10\x04\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcb\xaa\xdb\x30\x10\xdd\xeb\x2b\x0e\x97\x12\x3b\x24\x28\xdd\xbb\x5a\x76\x51\x28\xa1\xf4\x41\x17\xa5\x0b\xc5\x1a\xc7\x02\x5b\x32\xd2\x28\x69\x29\xfe\xf7\xe2\x57\x70\x1a\x42\xaf\x56\x03\xe7\x35\x1c\x4d\x95\x5c\xc9\xd6\x3b\x18\x6a\x88\xe9\xb3\xbf\xe6\xa7\xc4\xec\xdd\x16\x7f\x04\x00\x5c\x74\xc0\x39\xf8\xd4\x41\x61\x42\x64\xa7\x03\x39\x3e\x7a\x43\xab\xb1\x18\xd9\x95\x0f\xc8\x07\x89\x85\xc2\xdb\x02\x16\xef\x26\xb5\x2c\x6b\xdb\x98\x81\x18\x65\x43\xee\xcc\x75\x01\xbb\xdb\x2d\x29\x4b\xd2\xc8\x82\x7a\xd0\xfc\xb0\x3f\x8b\x1b\xd1\x56\xc8\x47\x48\xf2\xef\x8e\xa0\x94\x42\x56\x5b\x63\xc8\x65\xd8\x6c\x26\x0f\xe9\xbc\xa1\xa3\x6e\x67\xf8\xc3\xf1\xd3\xb7\xaf\x23\x1a\x39\xbc\x77\x26\x7e\xb7\x5c\xcf\x26\x4e\xb7\xb4\x47\x36\x15\x60\xb2\xed\x7a\xa7\x25\x6e\xde\xa7\xd1\x31\x7e\xb4\x91\x65\xe9\x1d\x6b\xeb\x62\xfe\x5c\x36\xbc\x29\xe0\xa2\x9b\x44\x50\xc8\x2a\xdd\x44\xca\x8a\x07\xda\xbf\xee\x81\x5a\x7f\xa1\x95\xf7\xbd\xa4\x07\x35\x91\xfe\x1f\xc7\x21\xbd\x26\x4d\x1b\xf3\x3c\x4a\xdc\x4f\xbd\xe8\x85\x38\x1c\xf0\xc5\xb7\x84\x53\xf0\xd7\x48\x21\xc2\x78\x97\x31\x62\xea\x3a\x1f\x78\x68\xd8\xba\xb3\xa4\xb9\x65\x2c\x27\x26\xc5\xed\xd8\xd6\x9f\x10\x39\xec\x11\x53\x55\xd9\x5f\x4b\x85\x81\x38\x85\x91\x25\x5b\xcd\x65\x9d\x4f\xf0\xee\xe5\xcd\xcb\x16\x4a\xcd\xec\x42\xf4\xe2\x6f\x00\x00\x00\xff\xff\xac\x5e\xd9\x02\xbf\x02\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xe1\x4e\xc3\x30\x0c\x84\xff\xf7\x29\xf2\x02\x99\x26\x81\x04\x4a\x9f\xc6\x8d\xdd\x34\xd0\xda\x91\xeb\x6e\x1d\x88\x77\x47\x65\x5b\x15\x10\x3f\xe6\xdf\xe7\xbb\xfb\xae\x13\xbc\xb8\xcf\xc6\xdd\xae\x00\x62\xe6\xe4\x4d\x4a\x70\x2f\xc7\xb2\xb6\xcd\x57\xd3\x1c\xde\x96\xa9\x13\x53\xe1\x4a\xda\x41\x7c\x4f\x2a\x0b\xa3\x8f\x32\x8a\x06\x67\x0a\x3c\x17\x50\x62\x6b\x77\x99\xd1\x6a\x1e\xc6\x9c\x38\xb8\x48\x6c\xa4\x57\xcb\x28\x6c\x90\x99\xb4\xb2\x9c\x60\xf5\xe7\x8c\x36\x04\xf7\x7a\xbc\x87\x63\x3e\x55\xf9\xe0\xe6\x02\x7c\xe8\xa1\x7a\xeb\x85\xcd\xcf\xf9\x83\x82\x7b\xbe\x7f\x15\xa5\xba\xab\x28\x92\x06\xc7\xc2\xd4\x3e\x4a\xb0\xb5\xec\xc1\x43\xb4\x7c\xaa\xcd\x6e\x5a\x14\x4c\xa4\xdd\xb8\xd0\x2e\x2d\x30\xcf\xff\x6a\x93\xd2\x65\x87\x31\xe8\xfc\x46\x4f\x6c\xbf\xd8\x35\x65\xbe\x0e\xff\x54\xb3\x23\x8d\x64\x84\x6e\x5b\xac\xcf\xc9\xab\x9c\x3d\xc3\x54\xa7\xfc\x6c\x8c\x14\x45\xc1\xb2\x70\x18\x33\x93\xb7\x41\x65\x49\x43\xfb\xa7\x8b\x12\x6e\xd6\xdf\x01\x00\x00\xff\xff\x6f\x52\xdc\x35\xf8\x01\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x41\x8b\xdb\x30\x10\x85\xef\xf9\x15\xc3\xc0\xc2\xe6\x50\x99\xd2\x1e\xb5\x86\xb2\xd0\xf3\xb2\x9b\x7b\x51\xe4\x71\x23\x62\x24\x57\x12\x49\x16\x91\xff\x5e\x2c\x2b\x4d\x36\x71\xb6\x4a\xb0\x73\xcb\x48\x9a\xf7\xbe\xc7\xc8\x76\x08\xa1\xa2\x5a\x69\x02\x14\xd2\x2b\xa3\x7f\x49\xa3\x6b\xf5\x1b\xf7\xfb\xfd\x8c\x57\x6a\x03\xb2\x11\xce\x3d\xa1\x17\xcb\x86\xbe\x58\x72\xad\xd1\x4e\x6d\x08\xcb\x19\x00\x00\x8f\xf5\x0f\x9b\xd2\x4a\xbf\xba\x34\xd5\xfb\xf1\x7f\xf7\x0b\x21\xa8\x1a\x8c\x85\x47\xfa\x03\x6c\xf1\xde\x12\xa0\x6b\x84\x5c\xe3\xfc\xb4\xb4\xa5\xe5\xca\x98\x35\xce\x3b\x23\xa7\xe7\xb9\xb7\x1f\x1b\xf6\xc5\x0a\xac\xd9\xba\x56\xe8\x27\xfc\x8a\xe5\x62\xab\xbc\x27\xcb\x0b\x5f\x0d\x6e\x2e\xfd\x96\xc8\x5f\x5f\xbe\x28\x26\xe7\x72\x45\x72\xbd\x34\x3b\x60\x3f\x62\x5a\x2c\x09\xb1\x45\xd7\x0f\x1e\x5b\xab\xb4\xaf\x01\x1f\xdc\x83\x43\x60\x2f\x96\x6a\xb5\x03\x64\x7d\xb6\xcc\xa7\xdd\x51\xfd\x12\x2d\xaa\x5f\x78\xe2\xc5\x39\x71\x08\x81\x74\x75\x7e\xba\x0f\xf6\x98\x60\x12\xc3\xdb\x03\xfc\x96\x11\xa0\xa5\xb1\x23\x7c\xed\x3b\x66\x87\x98\x1c\xdc\x1f\xe3\xb5\x20\xca\x5a\x6c\x8c\x55\x9e\x46\x84\xfb\x99\x5a\x66\xd3\x1d\x3c\x4c\x80\x27\x4d\xd3\x50\x54\x73\xb7\x13\x36\xca\xf9\x05\xed\xfc\x10\xe4\xf3\xb1\x71\x36\xe7\x89\x19\x9c\x03\x5e\x4c\x6b\x2e\x6d\xde\x9d\xe8\x1f\x34\xb7\xdf\x88\xef\x58\xbe\x75\x47\xaf\xe7\xd5\x2a\x3d\xc2\xb8\x44\x11\xf6\xa2\xf4\x7f\xf3\x8b\x24\xac\x55\x7a\x82\x01\x71\x5e\x7c\x72\xf3\x6f\x84\x79\xf3\xc2\x66\xd2\x74\xba\x13\xe0\x58\x12\x63\x4e\x7b\x8f\xf5\x7a\x68\x9a\xc9\xf6\xcf\xc4\x04\x53\x3e\x48\x7e\xed\x75\x00\x83\xda\x67\xef\xcf\x4f\x86\x7d\xd8\xc2\x21\x48\xb9\x12\x5a\x53\x33\x6a\xd4\xcf\xa9\x67\x66\xd2\x07\x0b\x77\x07\xcd\x8b\x93\xcf\x16\x5e\xc4\x8f\x9a\x72\xc6\x8b\x4a\x6d\xca\xd9\x11\xff\x6f\x00\x00\x00\xff\xff\x24\x57\xa8\xca\x3b\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\xf0\x25\xb0\xc0\x9b\x83\x24\x74\xb1\x58\x14\x85\xec\x62\x7b\x48\x37\x85\x83\x06\xbb\x69\xaf\x0e\x2d\x8d\x24\x6e\x28\x8e\x4a\x8e\x1c\x1b\x86\xff\x7b\x41\x7d\xd9\xce\xca\xb5\xec\xf5\xc7\x21\x88\xf8\x31\x33\xcf\x3c\xc3\x99\x21\x57\xab\x55\x0c\x89\xd4\xc0\x78\x22\x15\x81\x99\x46\xa8\x13\x99\xf2\xf5\x7a\x7d\x13\xc6\x72\xce\x22\x25\xac\x1d\x71\x12\x33\x05\x9e\x01\x5b\xa0\xb6\x72\x0e\x7c\x7c\xc3\x18\x63\x61\x35\xbe\xb3\xa8\x99\xa9\x67\x67\x18\x2f\x37\xdf\xf5\x98\xd9\x1d\x70\xbf\xd5\x6a\x25\x13\x06\xff\x30\xff\x69\x59\x00\xe3\xf4\x2a\x89\xc0\x54\x56\xbc\x5d\x1b\x52\xcc\x0c\xbe\xda\x42\xe8\x11\xff\xc8\x59\x84\xaa\xfe\xff\x3d\x1f\xff\x0e\x1a\x8c\x50\x61\x40\x71\xaf\x12\x50\x16\xd8\x8e\x26\xab\x44\xf4\x72\x58\xcf\xfb\x23\xf5\xe8\x78\x8f\xc8\x31\xc1\x82\x58\x21\x1c\x3c\x6d\xfb\x05\x84\x7d\x83\x8d\x64\x25\x2d\x3d\xc1\x82\x66\xb8\x60\xfe\x5d\x45\x99\xff\xd8\x48\x63\xff\x2f\x8c\xd4\x94\x30\xfe\xce\xbe\xb3\x9c\xf9\x8f\x06\x12\xb9\x60\xdc\xaf\xb9\xf5\x5b\xb5\xfc\x96\xf1\x7e\xcc\xdf\xd9\x13\x06\x6f\xf9\xea\x25\xd0\x99\x9c\x09\xcb\x72\x88\xa5\x60\xbf\x1e\x8f\x6b\x86\xa8\xbe\x82\x82\x68\x07\xd9\x67\x61\x1f\x2a\x89\x87\x90\x65\xc2\x4e\x2b\xdd\xfc\xf6\x54\x5c\x43\x63\x70\x2f\xfe\xd2\xa8\x33\x13\xfb\xd7\x97\xc9\x60\x6e\x4b\xa3\xa6\x97\xe5\x37\x11\x73\x34\x92\x80\x51\x66\xc0\x66\xa8\xe2\xe3\x51\x52\x8d\xf0\xcf\xe4\x5e\xd3\x23\x99\x0e\xe9\x5d\x23\xfb\xa9\x15\x7d\x10\x6f\x6b\xcd\xb4\xb3\xe6\x74\xea\xf7\x42\x36\x40\xaf\x00\x04\xf1\x25\x30\x7f\x69\x85\x0f\x07\xdd\xd9\x73\x51\xd4\xbd\x40\x94\xd0\x69\x29\x52\xa8\x11\xe5\x85\x12\x04\x8c\xd7\xd5\x62\x2a\x75\x82\x9c\xf1\x8c\xa8\xb0\xbf\x04\x41\x0c\x73\x50\x58\x80\xf1\x9b\x43\xe4\x47\x98\x07\xa0\x83\x18\x23\xbb\x99\xf5\x4a\x92\x4a\x92\x04\x1b\xd8\xb2\x28\xd0\x10\xc4\x5e\xab\xc7\x06\xa2\x90\x9e\x81\x04\x0c\xe8\x08\x82\x14\xc8\xcb\x40\x15\x9b\x05\x7e\x46\xb9\x1a\x18\xe6\xff\x09\x2d\x94\xba\x28\xa9\x2d\x62\x09\x9a\xdc\x8b\x50\x93\x41\xc5\x99\xfb\x1a\x71\x9c\x83\x79\x75\xd1\xc6\x19\x2d\x0b\x18\x71\xc7\x29\x67\x5a\xe4\x30\xe2\xab\xd5\xaa\xa1\xed\xd9\xd1\xf6\xdc\xd1\xf6\xdc\xd2\xe6\x4c\x7e\x5e\xaf\xd7\x9c\xcd\x85\x2a\xeb\x2d\x6d\x14\x4c\x84\x4e\xdd\x54\x8f\xbd\xc3\x92\x56\x4f\xad\x09\xff\xe7\x79\xec\x6f\x69\x25\x6a\xf6\xe9\xf1\x9e\x79\xde\x30\xe6\x37\xf5\xee\xe7\x1e\x7b\xdc\xaf\x11\x3a\x20\x06\x22\x85\x65\xec\xa7\x88\xa9\x82\x8a\xfe\x79\xb5\xb5\x0e\x81\x0d\xad\x06\x2c\x05\xf3\x9f\x02\x99\xd7\x9c\x6b\x8d\x24\x08\x8e\xa3\x75\xa7\x36\x4f\xc4\x0c\xf6\x54\xe6\x63\xf3\x6f\x8d\xd6\xaf\x24\x1e\x3c\x9b\x35\x3e\x5f\xb9\xc5\x17\x49\xc0\x1b\x76\x3e\xf0\xf1\x9d\x88\x60\x3f\x48\xa1\x53\x30\x4c\xc9\x17\x50\x32\x43\x3c\x21\x69\x6d\xf6\x3e\x94\x8a\x64\x5d\x9a\xdf\x3a\xc6\x19\xe1\x7f\x72\xba\x26\xdd\xf2\xce\x4f\xfb\x0e\x43\xe3\xa7\xc4\xed\xad\xec\x9c\x6e\x74\x3d\xdf\x32\xff\x5e\xc7\xb0\x38\x7b\x4e\x9b\xa9\xd2\x18\x88\xaf\xe4\x93\xdf\x6a\x6d\x27\x7a\xa5\xb1\xf5\x2a\x7e\xc9\x40\xc4\xaf\x20\xae\x15\x2c\x9f\x1b\x75\x27\x7a\xa6\xb5\xf6\x2a\xae\xf9\x86\xcb\x2b\x79\xe5\x0f\x5c\x9e\xe8\x90\x6f\xb8\xbc\x86\x2f\x76\x12\xac\xcb\x92\x67\xcd\xaf\x6e\x78\x68\x7a\xad\x0a\xef\x45\xb2\xeb\x6e\x0d\xd1\x71\x2e\xcc\xcb\x99\xcb\x48\x2d\x74\x78\x25\xa9\xd7\x5f\x01\x2e\xa6\x78\x5e\xa8\x98\xe2\x60\x98\x98\xe2\x8f\x41\x74\xdd\xce\xa4\x6d\x4f\x4f\xeb\x77\xde\xdc\xef\x7b\x21\x4f\x8e\xe8\x80\xbf\xeb\x7e\xb4\xa0\xd2\x08\xd5\x75\xaf\xbd\x7d\xd0\x91\xcd\x6c\x2e\x35\xb3\xa0\x49\xe6\xa0\x4f\x38\x91\xdd\xbd\xe4\x4e\xa1\xa0\x8f\x1f\xb6\xef\x26\x2d\x56\xff\x41\xea\xaf\xad\x8a\x83\x8c\xb6\xe0\xfc\x5c\xea\x69\x67\xd9\x05\x6e\x28\xb9\x58\x5c\x1e\xb9\x58\x9c\x82\x5c\x2c\x7e\x14\x79\x18\x6c\x3d\x9b\x85\x41\xf5\xa8\x36\xbe\x09\x83\x58\xce\xc7\x37\x9b\x86\xff\x66\xeb\xed\x6e\x3b\x08\xab\x97\x3b\xc1\x32\x03\x49\x7d\xd1\xa8\x2e\x1e\x24\x4c\x0a\x34\xe2\xd3\x99\x12\xfa\x85\x33\x03\x6a\xc4\x35\x62\x01\x1a\x0c\xd3\x58\x45\xa2\x01\xd3\xbe\xeb\xb9\xa3\xd0\xdd\x88\x04\x4b\x84\xa7\x52\xf7\xd7\xa9\xf0\x22\x69\x22\x05\x7c\x1c\x06\x6e\x99\xb3\x4d\x6c\x5b\xf6\x6f\x00\x00\x00\xff\xff\x70\xf3\x74\x7e\x55\x14\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigGeneral_confTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6e\xf3\x20\x10\x85\xf7\x3e\xc5\x68\xf6\xf9\x91\xfe\x35\x78\xd5\x03\xf4\x06\x15\x31\xe3\x08\x89\xcc\x58\x80\x69\xa3\x11\x77\xaf\x62\x27\x6a\xa2\x64\xf9\xbe\x07\xe2\xe3\xa9\x6a\xa0\x39\x32\x01\x9e\x88\x29\xfb\xf4\x35\x09\xcf\xd8\x7b\x1f\x6c\x88\x0d\xa6\xe4\x4b\x71\x58\xfd\x31\xd1\x21\x53\x59\x84\x4b\x6c\x84\xe3\x00\x00\x60\x37\xfe\x74\xe8\xd6\xec\xed\x51\xc2\xe5\x2f\xef\x2c\x3f\x83\x1d\x06\x98\x24\x95\xc5\xb3\xc3\xff\x38\x7e\x4a\x4a\x91\x4f\xf0\xb1\x66\x5f\xa3\xb0\x35\x35\xbc\xbd\xf5\x0a\xb7\x22\xf2\xb2\xd6\xbb\xd5\x2c\xf9\x7c\x98\x84\x6b\x96\x84\x70\x4d\x0e\xa5\x51\xfe\xce\xb1\x12\x42\xbd\x2c\xe4\xb0\xd2\x4f\x45\x60\x7f\x26\x87\xe1\xf6\x2a\x42\xf3\x69\x25\x87\xaa\xfa\xef\xae\xd2\x7b\xc7\x37\x2a\x2f\x82\xd6\x3c\x7e\xd4\x9a\x87\x29\xac\xd9\x86\x1a\x07\x6b\x42\x6c\xe3\xa0\xaa\xc4\xe1\xba\xf8\x6f\x00\x00\x00\xff\xff\x79\xb8\x48\x3d\x8e\x01\x00\x00")

func assetsTmplConfigGeneral_confTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigGeneral_confTmpl,
		"assets/tmpl/config/general_conf.tmpl",
	)
}

func assetsTmplConfigGeneral_confTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigGeneral_confTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/general_conf.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigModalTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x41\x6b\xdb\x4c\x10\xbd\x7f\xbf\x62\x98\x0f\x42\x72\x90\xd4\x90\x5b\x23\x19\x4a\xa1\x10\x68\x43\xa0\xbd\x87\xb1\x76\x64\x2f\xac\x76\xc5\x6a\xe5\xd8\x08\xfd\xf7\x22\xad\xec\x38\xcd\x4a\x56\x7b\x28\xf5\xc5\xda\xd1\xcc\xdb\xf7\xe6\xed\x8e\xda\xb6\x15\x5c\x48\xcd\x80\xa5\x11\xa4\xb0\xeb\xba\xff\x00\x00\x52\x21\x77\x90\x2b\xaa\xeb\xcc\xbf\x81\x82\x04\x23\x48\x91\x61\xdb\xb6\x96\x2b\x45\x39\x43\xfc\x64\xb9\x90\x7b\xc0\x18\x01\xa3\xbe\x3a\x2a\xa4\x72\x6c\xa3\xb6\x6d\xe3\x07\x2d\x78\xdf\x75\x1d\x82\xa3\xb5\xec\x17\x19\x46\xb7\x08\xd6\x28\xce\x50\x48\x52\x66\x83\x40\x56\x52\xa4\x68\xcd\x4a\xb1\x58\x1f\xfe\x00\x3f\x72\xd2\x29\x46\xa8\xdd\xa1\x07\x36\x3b\xb6\x85\x32\x2f\xd1\xe1\x63\x9d\x5b\xa3\x14\xae\x06\x4d\x41\x5d\xd1\x91\xc6\x48\xca\xe4\x4d\xc9\xda\x9d\x95\x84\xcb\x72\xa3\xdd\xfb\xbc\x70\xee\x96\x49\xb0\x0d\xa4\x0e\xe9\xeb\xc6\x39\xa3\xc1\x1d\x2a\xce\xd0\x2f\xf0\x58\x9f\x2b\x53\x33\x82\x20\x47\x91\x90\x75\x29\x4f\xa0\xb8\xba\x72\xb2\xe4\xfa\x3e\x4d\x7c\xcd\x04\xfa\xf6\xee\x2d\x97\xb1\x55\x4b\x7d\x7c\x0e\xf4\x39\xbc\x53\xff\xeb\x93\x1f\xa9\xe4\xe3\x29\x0a\x32\xaa\x4b\x52\x6a\xd5\xb6\xed\x80\x06\xd7\x41\x0e\x80\x37\x5d\xd7\xa5\x89\x4f\x0e\x4b\x4b\xb6\x77\x81\xee\x27\x42\xee\x96\x98\xb2\x36\xe2\x30\x65\xc9\xf6\x6e\xf5\xdd\x34\x36\xe7\xf0\x1e\xa3\x54\xc7\x65\xa5\xc8\x31\x60\x3d\x24\x3f\xe7\x46\x17\x72\x83\x70\xad\xf9\xe5\x1b\x55\x80\x3f\x0e\x15\x23\xc4\xfd\x1f\xa0\x47\x44\x88\x3f\x0f\x69\x0f\x8e\x4b\x40\xaf\x19\x8f\xe2\x6f\xa6\x3a\xd7\x53\xfa\x32\x38\xb2\x90\xd2\x68\xdf\x3c\x25\x8f\xf8\x86\x52\xec\x63\xef\x98\x01\x0e\xa7\x00\xc1\x9f\x86\x59\xa2\x9f\x72\x27\x8d\x5e\x48\x94\x86\xe4\x0b\x44\x3d\xe2\x5b\xa2\x3e\xb6\xac\x85\x8b\x4f\x45\x61\x8c\x9b\xbe\xaa\x9a\x76\x67\xe3\x2a\xc3\x38\x8e\x27\x6f\x43\xda\xa8\x23\x74\x45\x9b\x49\xcc\x53\x47\x64\x01\x1b\x37\x76\x17\x3e\xcc\xdd\xa0\x11\x5f\xc9\x13\xbe\xe5\x9d\x34\x4d\x3d\xbb\xc5\xa9\x8e\x82\xe3\xc4\x07\x9d\xd9\x6c\xfa\x31\x38\xc6\xb6\x96\x8b\x0c\xff\x5f\x3a\x90\x49\x88\xa3\x80\xe8\xb6\x9f\xfb\x4b\xf8\x0c\x9c\xea\x8a\xb4\xef\xec\x56\x0a\xc1\x3a\x43\x67\x1b\xc6\xd5\x95\x22\x6b\xef\xd3\xa4\x7f\xbf\x82\x27\xcb\xbb\x25\x0a\x13\xba\xb4\x71\x9a\x28\x79\xc1\x0f\xd6\x62\xde\x04\xef\x99\x3a\x79\x76\xed\xe5\x3b\x2e\xbf\xb2\x86\xe8\x76\xf2\x8a\x9c\xd1\x78\xf5\x50\xf3\x3e\xf4\x31\x09\xd4\xfc\x15\xff\x7e\xcb\xbe\x47\xde\xbb\x19\x0f\xed\x99\x87\xff\x86\x7d\x69\xd2\x4c\x7e\x54\x34\x85\x06\xc5\xfb\xf9\xf1\x4b\xe8\x6c\x39\x3e\xbe\x92\xf8\x19\x00\x00\xff\xff\x1c\x36\x2b\xda\x66\x09\x00\x00")

func assetsTmplConfigModalTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigModalTmpl,
		"assets/tmpl/config/modal.tmpl",
	)
}

func assetsTmplConfigModalTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigModalTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/modal.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigSourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\xc1\x4e\xe3\x30\x10\x86\xef\x7d\x8a\x91\x25\x24\x38\xd0\xbe\x40\xb6\x7b\x40\x7b\xe0\xb2\xcb\x16\xee\x91\x6b\x4f\x88\x85\xeb\x04\x7b\x52\x52\x59\x7d\xf7\x95\xe3\x6c\x0b\xac\x1d\x56\x05\x44\x6e\xed\x4c\xe7\xff\xe7\x6b\x3c\x63\xef\xbd\xc4\x4a\x19\x04\xe6\x9a\xce\x0a\x2c\x45\x63\x2a\x75\xcf\xf6\xfb\xfd\xac\x90\x6a\x0b\x42\x73\xe7\xbe\x31\xe2\x6b\x8d\x97\x16\x5d\xdb\x18\xa7\xb6\xc8\x96\x33\x00\x80\x62\xf8\xfe\x45\xd2\x18\x89\xd1\x75\x23\x77\xc7\xcf\xe1\xf1\xde\xab\x0a\xf0\x11\xe6\x77\xbb\x16\x81\xd1\x93\x22\x42\x3b\x08\xc2\xab\x27\xe6\x36\x16\xce\x43\xfe\x8d\xc5\x4a\xf5\x87\x5f\xcc\x49\x6d\x50\x2b\x83\x8e\x5d\xa4\x13\x2a\xbe\x6d\xac\xa2\x90\x90\xaa\x1e\x1d\xda\x65\x32\x10\x83\x72\xe9\x84\x45\x34\x60\xf8\x06\x5d\xb1\x20\x39\x9d\x9d\x0d\x8e\xdd\x68\xe5\xe8\x0e\x7b\x5a\x37\x3d\xcc\x6f\x07\xe0\xf3\xdb\x41\xe1\x67\x10\x80\xf3\xd6\x2a\x43\x15\xb0\x33\x77\xe6\xd8\xb1\xa3\x79\xb4\x51\x0e\x36\xd8\x05\x30\xda\xb5\xc8\x6b\xe4\xf2\x92\xf8\xbd\x53\xa6\xed\x28\x49\xf0\x60\x2e\x6b\xbd\x58\xa4\x10\x78\xef\xd1\xc8\xfc\x7f\x92\xc2\xed\x90\x5b\x51\xa3\xcb\x1a\x79\x13\xf6\x63\x87\x56\x7d\x16\xe7\xdf\xb1\x78\x9e\xf1\xa8\x1e\xf0\x7e\x39\xcb\xe3\xbb\x7d\x32\x4c\xec\x85\xee\x24\x82\xc5\x56\x87\xbe\xbf\xbf\x1f\xab\xa8\x51\x3c\x3c\x67\xfa\x23\x6a\xac\x46\x89\x2c\xda\xd1\x4b\x39\x7a\xc9\x9f\x47\x38\x81\xef\x7f\xd1\x50\xe6\x2f\x0d\x7a\x42\xa4\xcf\xc1\x71\x1d\x45\x56\x34\x81\x62\x34\x52\x5a\xfa\x60\x0c\x5f\x73\x64\x2d\xba\x4e\x13\x84\x79\xf4\x7e\xa0\x0e\x35\x8a\x17\x87\x76\x35\x94\x1f\x36\x45\x96\x68\xb4\x50\x06\x0b\xe1\xec\x5a\x14\x68\x88\x01\xdb\xa8\x1e\x25\x03\xd6\x36\x6d\xa7\x79\x7a\xc3\x1c\xdc\x7d\x18\xec\x2c\xb1\x00\xa0\x42\x12\x35\x88\xa6\x33\x34\xa1\x38\x45\xca\x7b\x4f\x71\xb0\xfd\xaa\xae\x0d\xdd\x90\x3d\xb0\xba\x0a\x65\xf3\x98\x06\xd5\x89\x4d\x98\xf4\xf3\x6f\xf7\xe9\xce\x5f\x6f\x75\xa7\xb9\x78\x48\x12\x9f\xe4\x23\x6a\x6e\x0c\xea\x89\x0d\xf0\x16\x9c\xd4\xe4\xbf\x1a\xab\x4e\xb0\x19\x33\x26\x67\xff\xe9\x84\x8a\xc5\xb3\x8b\x50\xb1\x18\xae\x49\xcb\x59\xb1\x90\x6a\xbb\x9c\x1d\xd3\xff\x04\x00\x00\xff\xff\x28\x09\x24\xc6\x8d\x09\x00\x00")

func assetsTmplConfigSourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigSourceTmpl,
		"assets/tmpl/config/source.tmpl",
	)
}

func assetsTmplConfigSourceTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigSourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/source.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4b\x8f\xdb\x36\x17\xdd\xcf\xaf\xb8\x1f\xbf\x2c\x32\x40\x65\x35\xc9\x2e\xb5\x0d\x14\x69\x5a\x04\x68\xd2\xa0\x99\x2e\xba\x1a\xd0\xe2\x95\xc4\x09\x45\x0a\x24\x65\x8f\x2b\xf8\xbf\x17\x24\x25\x59\xaf\x79\xbb\xde\xd8\x7a\x50\xf7\x9e\x73\xee\x21\x25\xde\xba\xae\x19\xa6\x5c\x22\x90\x44\xc9\x94\x67\xd7\x8c\x5a\x7a\xad\xd5\x8e\x1c\x0e\x87\x0b\x00\x80\xa5\xe0\x6b\x7f\xe0\x4f\x18\xdf\x42\x22\xa8\x31\x2b\xc2\x65\x59\xd9\x28\xd3\xaa\x2a\xc9\x71\x84\x1f\xe5\x6f\x41\xaa\x74\xb1\x22\x6a\x8b\x7a\xa7\xb9\x45\xd2\x3e\xe8\xae\x47\x89\x92\x56\x2b\x01\x21\x6d\xa4\xd5\x2e\x92\xb4\x40\x02\x76\x5f\xe2\x8a\x58\xbc\xb5\x04\xdc\x95\x15\xa9\xeb\x7a\xf1\x55\x63\xca\x6f\x0f\x87\xc3\x22\x8c\xda\x52\x51\x35\xb7\xbe\xd0\x02\x0f\x87\x03\x01\x63\xf7\x02\x57\x84\xc4\x8f\x43\x13\x12\xe5\x9c\x31\x94\xf3\xa9\x18\x0a\xb4\xc8\xba\x6c\x29\x15\x06\x27\xe1\xe7\x25\x89\x28\x63\x4a\x92\xf5\x92\x76\xb4\x29\xa4\x34\x12\x99\xfb\x45\xc6\x6d\x9f\xba\x3b\x27\xe0\xb4\x8f\xac\xca\x32\x47\xa3\x50\x8c\x0a\x02\xb9\xc6\x74\x45\xfe\x5f\xd7\xb5\xc6\x52\xd0\x04\xa1\x01\x08\x64\x41\x80\x44\xae\x4e\x51\xca\x85\x45\x1d\x39\xf4\x9f\x24\x43\x07\x9e\xac\x97\x31\x5d\x2f\x63\xc6\xb7\x27\xc0\x6b\x35\x35\x79\x1f\x70\x90\x86\x80\x92\x89\xe0\xc9\xf7\x15\x09\x17\xfe\x54\xbb\xd7\x36\xe7\xe6\x72\x36\x7d\xef\x74\x19\x3b\x5b\xd5\x75\x8d\x92\x39\xa7\x5d\x4c\x9d\x28\x71\x37\xe3\x46\x53\x50\x21\x7a\x21\x5d\x59\x81\x26\x96\x2b\x19\xca\xf7\xb3\x3f\xf6\x86\x28\xd0\xe6\x8a\xad\x48\xa9\x8c\xed\xdc\x57\x56\x42\x44\x9a\x67\xb9\x1d\xbb\x76\x53\x59\xab\x64\xe3\x0b\x53\x6d\x0a\x7e\x7c\x6a\x63\x25\x04\x41\x4a\x51\x99\x81\x6b\x71\xe7\xc8\x86\x87\xfb\x5c\x1d\xb2\x96\x6c\x83\xfa\x3e\xbe\x9e\xe2\xf2\x7f\xbf\xfc\xf1\xe1\xea\xef\xaf\x1f\x21\xb7\x85\x58\x5f\x2c\xdd\x1f\x08\x2a\xb3\x15\x41\x49\x7c\x04\x8b\x45\x29\xa8\x45\x20\x39\x52\x86\x9a\xc0\xa2\x53\x67\xa3\xd8\xbe\x87\xc1\x24\x9a\x97\x16\x8c\x4e\x56\x24\xa6\xc6\xa0\x35\xf1\x8d\x89\x1b\x81\x37\x98\x2a\x8d\x8b\x1b\xe3\xf0\x87\xa1\xeb\x8b\xd9\xa9\xee\x26\x2b\xe5\x12\xf5\x48\xb2\x01\x1a\x49\xb7\x1b\xda\xa2\x19\x2a\xeb\x8b\xc4\xd9\x60\xfa\xb5\x35\x6b\xd0\xc4\xe3\x72\xa1\x4c\x42\x25\x8a\x4a\x58\x5e\x52\x6d\xbd\xa2\x91\xb3\x84\x03\x1c\xe4\xbd\xd3\xda\x37\x55\xb1\x51\x56\x3b\x4b\x0f\xc6\xf8\x71\xf9\x9b\xf5\x07\x9f\xb5\xd2\xd4\xa1\x58\xc6\xf9\x9b\xb9\x61\x6f\xdb\x68\x02\x29\x23\xeb\x0f\x95\xb1\xaa\xe0\xff\x20\xec\x55\xa5\x41\xed\x24\x6c\x94\x05\x6a\xdc\x39\x48\x44\xb6\x8c\xf3\xb7\x23\x57\x05\xcf\x8f\x65\xe3\x29\x2c\x3e\xa3\x31\x34\xc3\xb6\x78\x03\x16\x4e\x2c\xd4\x5a\xe9\xa8\x08\xa3\x3a\x27\x52\x81\xda\x82\xff\x8d\x18\x95\x99\x2b\x8a\xf3\xfd\x31\xda\xcc\xa4\xef\x19\x6f\xc8\xf0\x5d\x37\x2d\x68\x86\x51\x63\xa8\xa9\x14\x57\x3b\x6e\x2d\x6a\xb8\xe2\x05\x0a\x2e\xd1\x4c\x46\x0c\xac\x30\x37\x83\xe1\xb5\xc4\xdd\x67\x5a\x02\x09\x33\x94\x40\x57\x7a\xdb\x46\x8d\x29\x63\xe4\x72\x22\x48\x9c\xbf\x1b\x89\x5a\x89\xae\x32\xdc\xd8\xa8\x92\x7e\xed\x67\x33\xc8\xdd\xc2\xe9\x54\x82\x57\xdc\xad\x8c\x3f\xc0\xab\x36\x1b\xbc\x5f\xc1\x22\xd8\x60\xd1\xf0\x5b\x74\xfc\xc6\x18\xee\xa3\x39\x43\x31\x2c\xd1\x04\x88\x6d\x02\x77\x14\x09\x90\x2f\xfe\x0d\xd6\xe1\xf0\x2f\x30\x20\x7e\xe1\x26\x0d\xcc\x89\x06\xc3\x22\x0e\xd5\xa9\xc4\xa4\xd8\xa7\xa2\x3c\xa0\xdb\xbc\x91\x3a\x92\x57\xfb\x12\x8f\x14\x09\x90\x10\xf9\x93\xc5\xa2\x47\x6f\xc4\x0c\x88\xbb\xff\xbb\x7b\xe5\xbe\x16\x28\xe1\xd5\x9d\x78\x2e\x9f\x21\xe3\x44\xb7\x53\x19\xff\x57\xba\x55\x6e\xdd\x3a\xad\xf1\xd3\x36\xea\x59\x8c\xdf\x66\x9b\x73\x41\xc7\xef\xd4\xc6\xef\x28\x1e\x2b\xd6\x5e\x3a\x83\xf1\x9f\x4d\xf9\x05\xc6\xef\x72\x3e\xd1\xf8\x1d\x9e\x39\xe3\x3f\x24\xe3\x7f\x66\xfc\x6f\x48\x75\x92\x9f\xd8\xf7\xa6\x09\x7a\x16\xdb\x87\x64\x73\x0e\x68\xb9\x9d\xda\xf3\x2d\xbd\x63\xad\xc2\x95\x33\x18\xfe\x79\x64\x5f\xe0\xf6\x26\xe1\x13\xbd\xde\x82\x99\xb3\xfa\xbd\xea\x9d\xdc\xe7\xdf\x04\x4d\xbe\x43\xf3\xf1\x74\x5a\x97\x37\x5f\x6e\xe7\x71\x79\x61\xb2\x7e\xd5\x3d\xad\xf6\x9b\xf0\x64\x06\x37\x3e\x6a\xcb\xeb\x58\xa0\xc2\x64\x67\xf0\xf6\x93\x29\x3e\xc6\xd6\x9e\xd2\xd8\xd4\x2e\xd3\x23\x1d\x3d\x44\x71\xf9\x04\xb1\x5e\x6a\xe5\xdf\x50\xa2\xa6\x62\xea\xa3\x01\xed\x2c\x8c\xba\x76\xd5\x25\xad\x76\xd3\x1c\xf7\xf6\x48\xda\xbd\x70\xd3\x06\xf9\xab\x64\x2e\x74\xd2\xdf\x41\x0d\x36\xca\x1b\x2b\x23\x53\x25\x09\x1a\x33\xde\x63\xe7\x7a\xbc\x67\xeb\xf6\x86\xcd\x9e\x3a\xe5\x02\xa3\xaa\x14\x8a\xb2\xc8\xdd\x9b\xee\x14\xdd\x88\x67\x6e\x17\xa7\x99\x1f\x08\x9e\xe1\xb8\x4d\xd0\x93\x6b\x56\x9d\x8f\xb7\xa5\xd2\x7e\x53\x48\x61\x71\x63\x94\x04\x17\x72\xaa\x4f\xe1\xff\x18\xa6\xb4\x12\xb6\x6b\x5e\x15\x54\x67\x5c\x46\x1b\x65\xad\x2a\xde\xbf\xf9\xb1\xbc\x1d\x2b\x38\xc7\xa4\x5f\xbd\x3b\x65\x9c\x45\xfb\xa9\xf0\x68\xfd\x7e\x76\x50\xd0\x47\xa1\x7e\x0e\x8c\xbb\x4a\xed\x8e\x7d\x80\x16\x69\x00\x10\xfa\x72\xc5\x7e\xa3\xec\xa2\x69\x94\xb4\x5a\x31\x6e\x4a\x41\xf7\xef\xb9\x74\xdf\xff\x3f\x8d\xa5\x0b\xda\xcd\x35\x9f\xe0\xe1\xde\x08\x4d\xdd\xab\x68\xd8\x1a\x09\x51\x42\x8b\x65\x19\x87\x06\xcd\x71\xce\xfe\x1b\x00\x00\xff\xff\xaa\x3c\xde\x59\x4b\x15\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x73\xdb\x36\x10\xbd\xfb\x57\x70\x70\x6d\x05\x98\x92\x12\x29\x1d\x51\x33\xae\xd3\xd8\x4e\xea\xc4\xf5\x57\x26\xbd\x81\xe0\x92\x04\x0d\x02\x0c\x76\x69\x8a\xd5\xf8\xbf\x77\x28\x25\x96\x94\x4a\x53\x66\xc6\x37\xee\xae\xf4\xde\xee\xbe\x07\x60\xb9\x5c\x26\x90\x6a\x0b\x01\xcb\x41\x26\xe0\xd9\xd3\xd3\xd3\xd1\xac\xfb\x9e\x1f\x05\x41\x10\xcc\x4a\x20\x19\xa8\x5c\x7a\x04\x8a\xd8\xdd\xed\xbb\xc1\x94\x6d\x97\xac\x2c\x21\x62\x8f\x1a\x9a\xca\x79\x62\x81\x72\x96\xc0\x52\xc4\x1a\x9d\x50\x1e\x25\xf0\xa8\x15\x0c\x56\xc1\xaf\x81\xb6\x9a\xb4\x34\x03\x54\xd2\x40\x14\xb2\xf9\xd1\x1a\x89\x34\x19\x98\x5f\xb6\xb1\xa3\x99\x58\x07\xdf\x2a\x46\xdb\x87\xc0\x83\x89\x18\x52\x6b\x00\x73\x00\x62\x41\xee\x21\x8d\x58\x4e\x54\xe1\x6f\x42\x94\x72\xa1\x12\xcb\x63\xe7\x08\xc9\xcb\xaa\x0b\x94\x2b\xc5\x73\x42\x8c\xf8\x88\x4f\x84\x42\xdc\xe4\x78\xa9\x2d\x57\x88\x2c\xd0\x96\x20\xf3\x9a\xda\x88\x61\x2e\x47\xd3\xf1\xe0\xf7\xfb\x2f\x5a\xdf\x5c\xbc\x83\x0f\x61\x72\x56\xbe\xbf\x3e\x79\x68\x55\x7d\x7e\x72\x7e\x9d\x8d\x86\x9f\xca\x3b\xd5\x34\x13\x67\x47\xd7\x5f\x92\x6c\x7c\x2f\x7f\xb9\x2a\x6f\x6e\xf1\x1f\xf1\xe1\xf5\xf4\x31\x4e\xfe\x28\xf2\x71\xcd\x02\xe5\x1d\xa2\xf3\x3a\xd3\x36\x62\xd2\x3a\xdb\x96\xae\xc6\xef\x8b\xeb\x33\x94\x4a\x6c\x81\x5c\x19\x57\x27\xa9\x91\x1e\x56\x13\xc9\x42\x2e\x84\xd1\x31\x8a\xd4\x59\x1a\xc8\x06\xd0\x95\x20\xc6\xfc\x35\x1f\xad\xc6\xdb\x4e\x3f\x4f\xd8\x83\x55\x48\x44\x20\x5c\x61\xa8\x1a\xc9\x95\x7d\xff\xd9\xb3\x5f\x6a\x2b\x90\x9d\xad\x78\x81\x83\x67\x11\x06\x1d\x5f\xc8\x87\x3c\xdc\xfc\xa0\xc0\xad\xc6\xd7\xfc\xa8\xbc\xae\x28\x40\xaf\x36\x7c\x1d\x34\xcf\x9c\xcb\x0c\xc8\x4a\xe3\x0f\x74\xc5\xd7\x1a\x7c\x2b\x42\x1e\x0e\xf9\xf8\x5b\xb4\x82\x2d\x90\xcd\x67\x62\x0d\x38\x3f\x8c\xde\xd7\x52\xc5\x8f\x8e\x2a\xf6\x1a\xea\x56\xbd\xba\xf8\x4b\xc7\xc7\xc3\xc9\xd7\xc7\xb6\xb8\xb9\x4c\xcf\x8b\x4f\x97\xf2\xcf\x87\xb4\xfe\x7c\xbf\xf8\x7b\x71\x77\x65\x4f\xdf\x9f\x4c\xcc\xb0\x3c\xfd\xfc\xf1\xa2\x3a\x7b\x53\x9e\x9d\xbe\x9d\x36\x67\x1f\x2f\xd4\xd5\xdb\xc9\xed\x42\x1e\x36\xd4\x66\x96\x17\x93\x6a\xa3\x0e\xc9\x0c\xb5\xad\x6a\x12\xc7\x7c\xca\x8f\xf7\x55\xb6\x6d\xb2\x6f\x91\x2f\xca\xf5\x5f\x01\x0f\x13\x57\x46\x52\xea\x7c\xc9\xa9\xd1\x44\xe0\x57\xc4\x8d\x4e\x32\x20\x5c\xa9\xf4\x7c\xa7\xd5\x94\x76\x77\x5a\x1f\xd0\xef\x58\x99\xa6\xbc\x8e\xb9\x76\x3b\xbe\x16\x1e\x0c\x48\x04\x14\x46\x12\x20\x6d\x15\xe3\xda\x26\x06\xfa\xba\xef\x7f\x96\x96\xcb\x0e\x2c\x96\xbe\x1b\x44\x8c\xf9\x31\x0f\xc3\xed\xe4\xcf\xac\xa9\xb6\xd5\x43\xb6\xc6\x5f\x68\x87\x22\xd1\x48\xeb\xcf\x9f\x82\xe9\x2d\x73\x59\x1b\xd2\x08\x06\x54\x27\xf4\x1b\x1e\xbe\xda\x39\x43\xdb\xf5\x43\xe7\xf5\x45\x2d\xbe\xa7\x9f\x9d\x67\x62\xa7\xa1\xce\xeb\x62\x7e\x34\x13\xeb\xf7\x71\xb9\x5c\x82\x4d\xba\x07\xf3\xdf\x00\x00\x00\xff\xff\xc1\xb9\xe9\xd8\x47\x07\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\xd5\xcb\x5a\xa0\x32\xd7\x1f\x18\x86\x8e\x11\x50\x24\x43\xdb\xa1\x5d\x83\x26\x1d\xd0\x47\x8a\x3c\x99\x6c\x28\x52\x23\x4f\x4e\x3c\x23\xff\xfb\x40\xca\x4e\xfd\x43\x4e\x9a\xa1\xc1\xda\xbc\x24\x8a\x8e\x77\xdf\x1d\xbf\xfb\xee\xec\xc5\x62\xa1\xb0\x31\x0e\xa1\x30\x4e\xe1\x65\x71\x75\x75\x75\xc0\x1f\x1c\xbf\x3f\x3a\xfb\x74\xf2\x3b\x68\x6a\x6d\x75\xc0\xd3\x2f\xb0\xc2\x4d\x0f\x0b\x74\x45\x75\xb0\x58\x2c\x08\xdb\xce\x0a\x42\x28\x34\x0a\x85\xa1\x80\x49\x3e\x5a\x7b\x35\xaf\x0e\x00\x00\xb8\x32\x33\x90\x56\xc4\x78\x58\x48\xef\x48\x18\x87\xa1\x18\xde\xa5\x9f\x0d\x27\x4e\xcc\x6a\xb1\x72\x72\x6d\xb2\xee\xe2\x73\xdf\xd6\x9e\x82\x77\x6b\x2e\xb2\x8d\x7e\x52\xbd\x9b\xd7\x9e\x38\xd3\x4f\xb6\x5f\x3d\x5d\x9d\xb6\x28\x54\x51\x89\x9e\x7c\x2b\xc8\x48\x61\xed\x1c\xa4\xb7\x16\x25\x81\x70\x0a\xea\xe0\x85\x92\x22\xa6\xa7\x39\x9c\x1b\xa7\x22\xf8\x06\x8c\x6b\x7c\x48\x27\xbc\x83\xc6\x07\x98\xfb\x9e\x33\xfd\xf4\x4b\x18\xce\x94\x99\x55\xe3\x88\x2f\xd0\xda\xa2\x3a\x45\x04\x2e\x40\x07\x6c\x0e\x0b\x4d\xd4\xc5\x17\x8c\x4d\x0d\xe9\xbe\x9e\x48\xdf\x32\x73\x21\x48\x9c\x0b\xd6\xa6\x1c\x8a\xea\x95\xa1\xd7\x7d\xcd\x99\xa8\x72\xc0\xd6\x07\x04\x85\x51\x06\xd3\x25\x14\x11\x44\xed\x7b\x02\xd2\x26\x82\xe8\xba\xc9\x0e\x80\x07\x65\x09\x7f\x99\x98\x10\xbf\x3c\x79\x03\x01\x63\x6f\x09\xca\x72\x0d\xb3\x7e\x5a\xbd\x69\xc5\x14\xe1\xa5\x13\x76\x1e\x4d\x84\x0f\xd9\x2a\x6e\xe5\xa6\xc3\xda\x43\x37\x54\x19\xb4\x88\x20\xa0\x41\x41\x7d\x40\x20\x0f\x22\x39\xf9\x07\x01\xdb\x1a\x95\x42\x05\x26\xf9\x8e\x50\xcf\xa1\x8f\xc6\x4d\xe1\x95\xf7\x53\x8b\xeb\xa0\x4c\x03\xe8\x44\x6d\x51\x4d\x36\x2e\xec\x93\xef\x41\x0a\x07\x52\xa3\x3c\x07\xd2\xb8\x84\x1f\x41\x63\xc0\x7c\x51\x53\x24\x68\x10\x55\x2d\xe4\x79\x5c\xdd\x49\x00\xe9\x5d\x63\xa6\x7d\xc8\x57\x35\xe1\xac\xdb\x40\xfe\xde\x0d\xce\xcc\x54\x13\x74\xc2\x61\x3a\x94\x23\x45\xc4\xfc\x4a\xac\x2a\xb1\xac\x57\x4e\xf2\x73\xf4\x0e\x08\x2f\x69\x13\xe5\x51\x46\xb7\x73\xa7\xd2\xfa\x5e\x4d\xa6\x39\xd9\x7c\xb3\xb3\x9c\x30\x53\x5e\x46\x16\xb0\xc1\x80\x4e\x22\x0b\x18\x89\xcd\x9e\xb0\xa1\x4a\x4c\x38\xe7\x49\x10\x16\xd5\x51\x3a\xbf\x5e\xa5\xf7\x4d\x63\xa4\x11\x16\x3a\x31\xc5\x6d\x46\x90\x30\x36\xe6\x44\x61\x94\x7c\x29\x4b\x9b\x73\xb5\x65\x62\xf1\x76\xd7\x6c\x9b\x96\xa9\x8d\x8d\x9b\x6e\xd9\x2d\x1b\xd5\x34\x30\xc9\x94\x59\x31\xe6\x58\x10\xa6\x56\xdd\xb6\xe5\xfa\xd9\xa6\x5b\x32\x64\xb1\xa8\x76\x39\x30\x50\x0e\x1e\x2e\x16\x8b\x51\xd7\x8f\x38\xd3\xcf\x46\xc1\xa0\x8d\xdf\x24\xf6\xfe\x00\x4e\x6d\xfb\x5f\xb6\xd9\xcd\x25\x4c\xda\x77\x4b\xfd\x3e\x7e\x78\x3b\x0a\x7d\xcd\x57\xf0\x17\x23\x4e\xb6\xad\xa4\xb7\x65\xab\xca\x5f\xf6\x98\x66\xf3\x15\x43\xaf\x4b\x7c\xea\xfb\x20\x53\xed\x8a\x8a\x9b\x76\x0a\x31\xc8\xb5\xb7\x03\xb6\x62\x15\xc1\xb4\xd3\x32\x60\xec\xbc\x8b\x66\x86\xc5\x63\x10\x96\x0e\x8b\x41\x38\x96\x3d\xaf\x52\x93\xef\x94\xb7\xa8\x12\x59\xc7\x33\xd8\x2d\xe3\x8d\xc9\x41\xa4\xb9\xc5\xc3\xc2\xcf\x30\x34\xd6\x5f\xbc\x48\x0a\xfe\x5b\x2b\x2e\x4b\x8d\xa9\x99\x5f\x3c\xff\xf5\xe7\xee\xf2\xa6\x1a\x74\x01\x2b\x2e\xbd\xc2\x6a\x87\x68\x03\x0b\xae\xae\xae\x38\xcb\x06\x9c\x25\xe3\xbb\xe0\xde\xf3\xef\x9b\x38\x8a\x6d\xf5\xa7\x27\x9d\x74\x91\x3c\x44\xed\x2f\x38\xc3\xf6\x3f\xd2\x70\x54\xfc\x5f\xa3\xb0\xa4\x97\x12\x9a\x44\x76\x47\xfc\x4f\x82\x97\x18\xe3\xd2\xb2\x1c\x4c\xcf\x92\xe9\xcd\x03\xe0\x8d\x83\x3c\x03\x1e\x27\xc9\x4c\x7a\x1c\x10\x5a\x61\x9c\x9d\x67\x0d\xad\xd1\xfa\x0b\xe8\x06\xe7\x18\xa1\xc3\x00\x7d\xc4\xb0\xa9\x9e\xc3\x14\xe9\x82\x9f\x19\x85\x5b\xa3\xe4\x5a\xf7\x4d\x80\x48\x82\xfa\xe4\xa6\x46\x29\xfa\x88\xc0\xeb\xca\xe4\xf1\xe3\x7e\x22\x08\x28\xa4\x4e\x47\x52\xe0\x38\xa4\x19\xd0\xa2\x88\x08\x73\x24\xce\xea\x6a\xb2\x01\xbd\xc9\x92\x9f\xe4\x9e\xc7\x2e\x8d\x98\xe5\x5e\x20\x6a\x4c\xab\x4d\x8d\xb6\x54\xc2\x4d\xd3\x86\x72\x4a\xbe\xe3\x2c\x59\x55\x79\xee\x3c\x86\x6e\x70\xec\x3c\x99\x66\x9e\x67\x9e\x6a\x8d\x33\x91\x82\x20\x1f\xe2\xd6\xbc\xd9\x78\x58\x63\x75\x46\xb9\xde\x52\x5b\x7a\x32\x64\xb1\x6e\x3c\x42\x6c\x4e\x49\xa8\xf7\xb0\x94\xc2\x0d\x9d\x40\x6a\x75\xf1\x9c\xd1\x1e\x0f\x2b\xc3\xd3\x5c\xfc\xfd\x76\x9c\x8d\x85\xe2\x6c\x0f\x38\x4e\x5f\xd6\xc2\x3b\x83\x3e\xbb\x30\x44\x18\xe0\xd8\x84\xb4\xad\xbd\xc3\x18\x93\x04\xbd\x35\x91\xd0\x61\xb8\x3d\x99\xbd\x2f\xe1\x5a\x9c\xf1\x6f\x98\x2c\xe3\x0c\x7e\x8f\xdf\x0d\x25\x00\x0a\xfd\x68\x23\x6f\x04\xd1\xcf\xab\xbd\xac\x8a\xbd\x4c\x35\x2f\xc0\xa8\xc3\x82\x86\x18\xa5\x6a\x4b\xbb\xc4\x5f\x0e\x44\x2f\xaa\x97\x92\xcc\x0c\x97\xc4\xe3\x4c\x3f\xbf\x15\xf8\x3e\x91\xf9\x6a\x6c\x4b\xc6\xdf\x0a\x6d\xad\x23\xbe\x0e\xd8\xae\x72\x6d\x60\xba\x23\xaf\xe0\x2e\x34\x39\x33\x2d\xda\xf4\x81\xe6\x7e\x09\xf2\x31\x62\x88\xf7\xca\x91\x24\x9d\xdf\x2d\x4b\xc6\xc1\xfd\x48\x3c\x39\xf1\xd6\xa6\x29\xfc\x87\xaf\xe1\x61\x5a\xac\x1b\x31\xf3\xc1\x50\x9a\x49\x4e\x41\x44\x11\xa4\xc6\xf8\xe8\x5b\xd3\xe7\x04\x83\xf1\xca\xc8\x7b\xe5\x4e\xb7\x0c\x52\x7e\xf6\xf5\xf7\x46\x9d\x51\x6c\x3f\x02\x73\x4e\xad\x90\xe7\x70\xa4\x85\x4b\x1f\xad\xbe\xb9\xbc\x64\xf7\x2b\xaf\xf7\xc2\x8e\x98\x22\x7c\x77\x92\xb2\x07\xd5\xff\xcc\x08\xce\x46\x76\x16\xce\xf2\x5a\xb6\xb3\x80\xaf\xfd\xc9\xd9\x70\x8c\xb3\xe1\xbb\xb3\x2f\xc8\xfe\x0d\x00\x00\xff\xff\x41\x05\xaa\x28\x6b\x13\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x4f\x6f\xa3\x3a\x10\xc0\xef\xf9\x14\x96\xdf\x99\xf8\xfe\x94\xa0\x27\x55\x4f\xef\xd2\xf6\xf0\xb6\x7b\xef\x80\x07\x62\xd5\xb1\x29\x1e\x68\x57\x88\xef\xbe\xb2\x0d\x09\xa5\x69\x95\x4d\xd2\xec\x5e\x12\x33\xcc\x1f\xcf\x6f\x66\xb0\xbb\xae\x93\x58\x28\x83\x8c\x1b\x68\x33\xa8\x79\xdf\xf7\x8b\x95\x81\x96\xe5\x1a\x9c\x5b\x0f\x62\x16\xff\x12\x89\x05\x34\x9a\xc6\x47\x65\x5a\xac\x1d\x8e\x8f\x85\x7a\x45\x99\x90\xad\x78\xba\x60\x8c\xb1\x95\x54\x3b\x3f\xb9\x35\x04\xca\x60\x9d\x14\xba\x51\x72\xd0\x98\x6b\x0d\x8e\x36\x08\x12\xeb\x89\x4e\xd0\xcb\x1a\x22\x6b\x66\xaa\x64\xcb\x52\x23\xcb\xad\xd6\x50\x39\x94\x9c\x49\x20\x18\xc4\x3e\x6c\x94\x8f\x62\xa8\x4b\xa4\x35\xff\x2b\x5a\xdf\xa1\x69\x1c\x67\x50\x2b\x48\xf0\xb5\x02\x23\x51\xae\x79\x01\xda\xe1\x2c\x78\xd8\x80\xab\x60\x17\x5e\xe5\xd6\x24\x1e\x58\xba\x12\x5e\x7e\x4d\xf5\x95\x88\x28\x66\x52\x98\xa1\xc9\x6a\x30\x92\xb3\x4d\x8d\xc5\x9a\x0b\x9e\xde\xfd\xc8\x2c\xad\x04\x4c\xd0\x0b\xa9\xda\x4f\x2b\x31\xf2\x63\x7b\x90\x4a\x8e\x6f\x23\xbe\xd9\x2e\x1a\x3d\x71\x31\x76\x86\x81\xf6\x10\x50\xad\x26\xba\x89\x22\xdc\x76\x5d\xa7\x0a\x86\xcf\x6c\x79\x1f\x2c\xef\x61\x8b\xec\xf1\xc6\x9a\x42\x95\x8f\x7d\xdf\x43\x4e\xaa\xc5\xae\xeb\xd0\xc8\xbe\xef\x0f\x38\x7d\x87\x22\xd1\xca\x3c\xed\x30\xe4\xc1\x95\xe0\x69\xf4\xd9\xd4\x40\xca\x9a\x37\x54\xf6\x74\xb4\x9a\x83\x6f\x74\xba\xf8\xfa\x7c\x1f\x5e\x14\x11\xd6\x37\x56\xbb\x8b\x24\x4d\xd1\x5f\xa8\x26\xe6\x3e\x61\x27\x78\x3a\x44\x61\x37\x7b\xe9\x17\x70\x18\x97\xb5\x2a\x37\x74\x60\xeb\x91\x80\x41\xb6\x1c\xf6\x13\x10\xf0\xf0\x21\x3a\x02\xe0\xc7\x30\x62\xee\x1b\xa2\xca\xfd\x2d\x46\x04\xcb\xdc\x6e\x45\xd7\x75\xd3\x60\x1e\xe9\xe8\x36\x23\xc3\x32\x32\x89\x2e\xc3\x9f\xb3\xb9\x02\x9d\xf8\x71\x0c\xcf\x83\x97\x0f\x82\xb2\xf9\x18\x17\xc0\x0a\xf0\xbe\x0a\x18\x4d\xfd\x32\xd6\x73\x37\xdb\xec\x9f\xf7\x1b\x3a\x9c\xd4\x71\xd5\x19\xa8\xa2\x76\x07\x3d\x9d\x01\x11\xaa\xca\x2d\x27\x24\xaf\x8b\xad\x02\xe7\xa6\xdc\x2e\xc1\x28\x0c\xd4\xe2\x93\xa6\xfc\xa6\x21\x7f\x7a\x40\xd8\x5e\xae\x25\x7d\xb5\x83\xdb\xef\xff\xdf\xfe\x42\xef\x39\x6f\x72\x0a\xc2\x60\xf8\x61\xdf\xed\x12\xfc\xe3\xba\x4e\x40\x43\x1b\x11\xd3\xbe\x1a\xa3\x2b\x36\xd9\x19\x83\x98\x5b\xe3\xac\xc6\xa5\xc4\x16\xb5\xad\xb0\x76\xcb\xd2\xda\x52\x63\xf8\xbe\x41\xa5\x9c\xff\x11\xad\x72\xca\x9a\xe1\x95\x97\x86\xd7\xcf\x8d\x25\x70\xc7\x22\x8d\xc6\xa7\x30\x8d\x96\x7e\xb5\x3f\xe5\xfe\x0b\xb2\x7f\x0d\x64\x1a\x25\xa3\xba\xc1\x37\xe7\x5b\x6c\x9e\xa1\x06\x93\x03\xef\x42\xc5\x38\x83\x78\xa9\x68\xd3\x64\x81\x9f\x7a\x01\x82\x27\x10\x5b\x7f\x9f\x3a\x1a\x63\xb0\x3f\x09\x63\xb0\x3c\x30\xbf\xbf\x81\x86\xd0\xb6\xb4\x0d\x8d\xa7\x29\x7f\x77\xe3\x38\x65\xf4\x54\x69\x12\xdb\xd0\xfe\xbb\x74\x1b\x82\x9c\x93\xde\xec\x82\x32\xb9\xe7\x0e\xcb\x95\x30\xd0\xa6\x8b\xfd\x74\xfe\x0c\x00\x00\xff\xff\x26\x65\x2d\xa6\x0a\x0d\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x41\x6b\xf3\x38\x10\xbd\xe7\x57\xcc\xea\x9e\xe8\x6b\x8f\xc5\x36\x2c\xe9\x1e\x4a\x29\xbb\xd0\xee\x61\x4f\x41\x96\x26\xb1\x36\xb2\x24\xa4\x71\xb2\xc6\xe4\xbf\x2f\xb2\x93\x36\x69\x9d\x74\x29\xfb\x41\x7a\x49\x10\x33\xf3\x3c\xef\x69\xf4\x98\xae\xeb\x14\x2e\xb5\x45\x60\x11\xa9\xf1\x6c\xb7\xdb\x4d\xb2\x5f\xee\x7f\x9f\xbf\xfc\xf5\xc7\x6f\x50\x51\x6d\x8a\x49\x96\xfe\xc0\x08\xbb\xca\x19\x5a\x56\x4c\x00\x00\xba\xae\x23\xac\xbd\x11\x84\xc0\x2a\x14\x0a\x03\x83\x59\x2a\x4f\xd1\xac\x74\xaa\x1d\x12\xfb\xa3\xd2\x1b\x90\x46\xc4\x98\x33\xe9\x2c\x09\x6d\x31\xb0\xb7\xf8\x07\x40\x2b\x36\xa5\x38\x06\x1c\x43\xfa\xbb\xa9\x4b\x47\xc1\xd9\x77\x48\x7d\x5e\x75\x53\x3c\x27\x46\x19\xaf\x6e\xc6\xc2\xb7\x07\x14\x83\x42\xb1\xe2\xa5\xd2\x11\x74\x04\xaa\x10\x96\x3a\x44\x82\x48\xe8\x81\x1c\x34\x11\xe1\xa9\x2d\x1d\x65\xbc\xba\x1d\x41\x5a\xba\x50\x83\x56\xf9\x5e\x40\x10\x92\xb4\xb3\x39\xe3\xfd\x99\x33\xa8\x91\x2a\xa7\x72\xe6\x5d\x24\x06\x68\x25\xb5\x1e\x73\x56\x37\x86\xb4\x17\x81\x78\x42\x98\x2a\x41\x82\x15\x59\x7f\x38\xfd\x4a\xc6\x95\xde\x14\x93\xf7\x62\xe9\x25\xcc\x9e\x30\x46\xb1\xc2\x4b\x22\x09\x83\x81\xa0\xff\x9d\x2a\x61\x57\x49\xf7\xae\xeb\x8e\x4a\xf7\xf8\xef\xe0\xd1\xaa\x04\xfb\x9f\x70\xb7\x22\x58\x6d\x57\x23\xd7\x30\x37\x5a\xae\x21\x13\x50\x05\x5c\xe6\xac\x22\xf2\xf1\x8e\x73\xe1\x7d\x9c\xd1\x56\x13\x61\x98\x49\x57\x33\x20\x11\x56\x48\x39\x5b\x94\x46\xd8\x35\x2b\x2a\x0c\x98\x71\x51\xa4\x1b\x90\x01\x05\x21\x97\x15\xca\x35\xb4\xae\x09\xe0\xb6\x16\x5e\x86\x72\xf8\xd5\xfb\x31\xb9\xce\xf5\x4d\xa2\x34\x38\x0d\x18\xbd\xb3\x51\x6f\x70\x6c\x76\xfa\x9c\x93\x82\x91\xac\x21\xf3\x74\xce\x3f\xc6\xc3\xf9\xe0\x90\xa0\x8a\x03\x91\xb9\xb3\xb1\xa9\x31\xc0\x23\xb6\x19\x27\xf5\x79\xe5\xc5\x84\x3e\x49\x5b\xdf\xd0\x81\x49\x3f\x67\xe9\xf9\x05\x67\x18\xa4\xd3\xeb\xd0\x0e\x23\xe9\x45\x8c\x5b\x17\x14\x03\x2b\x6a\xdc\x07\x0f\xf7\xb4\x90\xfb\xfe\x16\x6b\x6c\x19\x6c\x84\x69\x30\x67\x69\x94\xf6\x04\x0e\xfd\x3f\x62\xbb\xdb\xed\xce\x28\xf6\xda\xd9\x45\x82\x19\xbf\x24\xdc\xd7\x54\x7d\x46\x19\x90\xae\x5a\xd8\xd8\xb7\x78\x49\xdb\x81\xc4\xcf\x93\x37\xe3\x67\x26\x3a\xe3\xfd\x3b\xf8\xdc\x99\xfe\x47\x8f\xd0\xb3\x68\x84\x5c\x27\x83\xe8\x1d\xe3\x2b\x2e\xf1\x9c\x10\xbe\xbf\x47\x0c\x34\xe6\x46\xa3\x25\x78\xb8\xbf\xa6\x29\xee\xef\x68\x21\xfb\xd6\x16\x5a\x9d\x4c\x6f\xdf\xf6\xd0\xf5\xc3\xfd\x15\x98\xc2\x89\x8c\xd7\x67\x08\x27\x52\x8e\x98\xc1\x91\x9c\xdf\xc0\x08\x06\x45\x46\xc8\xc7\xa6\xac\xf5\x1b\xb3\x3f\xbd\x4a\x3b\x9f\x74\x76\xa9\x57\x4d\x10\x69\x7d\x62\x07\x25\x4b\xb2\x50\x92\x9d\xc6\x46\x4a\x8c\x91\x41\xa4\xd6\xa4\xed\x49\x84\x95\xb6\xd3\xd2\x11\xb9\xfa\xee\xe6\xc7\x0f\xff\x0f\x3b\x6a\xe0\xe8\x81\x67\x7c\x20\x92\xf1\x61\x9b\x7d\xdb\x6d\xfe\x0d\x00\x00\xff\xff\xcb\x16\x2b\x32\xfd\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xbf\x6e\xdb\x3c\x10\xdf\xfd\x14\xf7\xf1\xcb\x18\x4b\x48\xc6\x80\x16\x50\xa4\x1d\x8b\x76\x70\x87\x8c\x27\xf1\x24\x31\xa6\x49\x95\x3c\xc9\x30\x08\xbd\x7b\x21\xc9\x8a\x6c\x25\x01\x8a\x7a\x31\x41\xdf\xfd\xfe\xdd\x99\x31\x46\x45\xa5\xb6\x04\x82\x4f\x9a\x99\xfc\xb3\x33\x41\xf4\x7d\xbf\x91\xff\x7d\xfd\xf1\xbc\x7f\xf9\xf9\x0d\x6a\x3e\x9a\x6c\x23\x87\x2f\x30\x68\xab\x9d\x20\x2b\xb2\x4d\x8c\x91\xe9\xd8\x18\x64\x02\x51\x13\x2a\xf2\x02\x92\xb1\x35\x77\xea\x9c\x6d\x00\x00\xa4\xd2\x1d\x14\x06\x43\xd8\x89\xc2\x59\x46\x6d\xc9\x8b\xe9\xb7\xe1\x73\x03\x62\xb1\xcb\x71\x06\x79\x2b\xb9\x86\x78\x6d\x8f\xb9\x63\xef\xec\x15\xc4\x58\x53\x3f\x64\xfb\xc9\x00\x3c\x3b\x63\xa8\x60\xed\x6c\x90\x69\xfd\xb0\x2e\x7c\x9c\xb1\x0c\xa1\x12\xd9\xaf\xa0\x6d\x05\x73\x6f\xb1\xf4\x02\x3b\x08\xec\x3c\xc1\xd9\xb5\x1e\x4a\xec\x9c\xd7\x4c\xc0\x27\x22\x0e\xa0\x03\x28\x42\x65\xce\xd0\x06\x2a\x5b\x23\xd3\xfa\x71\xa1\x92\xa9\xd2\x5d\xf6\xb1\x87\x13\x19\xb3\x92\xff\xe2\x5a\x28\xd0\x42\x51\x53\x71\x98\xf8\x3e\x52\x54\x93\xa7\x7b\xc8\x5b\x86\xca\x0d\xf2\x24\x42\xed\xa9\xdc\x89\x9a\xb9\x09\x4f\x69\x3a\x6a\x53\x54\x1c\x92\xcb\x34\x93\xc2\x1d\x53\x91\xed\xe7\x7b\x99\x62\x06\xa5\xf3\x70\x1c\x8c\x29\x62\xd4\x26\x24\x9f\xcb\x6e\xcd\xac\xda\x62\x07\x16\xbb\x6d\xa3\x8d\x09\xe3\xe9\xb5\x0d\xac\x4b\x4d\xea\xc6\x4c\x8c\xd1\xa3\xad\x08\xee\x0e\x74\xbe\x87\xbb\x0e\x0d\x3c\xed\x20\x59\xa6\xf2\x1d\x9b\x61\xbe\x57\x33\x31\x1a\xbc\x33\xb4\x13\x8d\xa7\x40\x96\x71\x28\x13\x33\x73\x8c\x51\x97\x40\xbf\xe1\x2e\xf9\x52\xb0\xee\x68\x81\x1a\x49\xfa\xbe\xc7\xf1\x3e\xc6\x48\x56\xf5\x7d\x2f\x32\x89\xa0\x90\x71\xcb\xae\xaa\x06\x60\xc6\x5c\x5c\xb2\xfa\x3f\xc6\x78\x69\x13\xd9\x72\x1e\x92\x91\xa9\xd1\x2b\x2f\x13\xe0\x55\x40\xad\xf9\x64\xac\x8c\xf9\x76\xd8\x70\xb2\xbc\x9a\xee\x3f\x44\x72\x81\xd6\x6a\xb4\x3f\xcb\xbd\xa6\x6a\xd0\x12\x94\xa8\xe8\x2f\xe2\xd1\x16\xde\x25\x74\x43\x36\x12\xe2\x1b\xfc\xb4\x3b\xdb\xca\x6b\x35\xa7\x36\xa8\xe8\xd0\x4c\xe1\xa6\xb8\xfa\x53\x4d\x6b\xb3\xf2\xfc\x2e\xba\x65\xb7\x2e\x67\x99\x4e\x0f\x85\x4c\xa7\x27\x66\x69\xfa\x13\x00\x00\xff\xff\x2f\x94\x81\x14\x98\x04\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config/general_conf.tmpl": assetsTmplConfigGeneral_confTmpl,
	"assets/tmpl/config/modal.tmpl": assetsTmplConfigModalTmpl,
	"assets/tmpl/config/source.tmpl": assetsTmplConfigSourceTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
				"general_conf.tmpl": &bintree{assetsTmplConfigGeneral_confTmpl, map[string]*bintree{}},
				"modal.tmpl": &bintree{assetsTmplConfigModalTmpl, map[string]*bintree{}},
				"source.tmpl": &bintree{assetsTmplConfigSourceTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

