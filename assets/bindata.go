// Code generated by go-bindata.
// sources:
// assets/js/config_after.js
// assets/js/config_before.js
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config/modal.tmpl
// assets/tmpl/config/source.tmpl
// assets/tmpl/config/twitter_conf.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x8f\x94\x40\x10\x86\xef\xfc\x8a\x0a\xd1\x34\x93\xec\x80\xf1\x88\xc3\xf8\x91\x98\x78\x55\xd7\x83\x51\x33\xa9\xa5\x6b\xa1\xd7\xa6\xbb\xb7\xab\x19\x82\x84\xff\x6e\xe8\x65\xc6\x71\xd5\x83\x17\xd2\x55\xef\x4b\x7d\x3c\xa9\x23\x7a\x08\x83\x0a\x81\xfc\xeb\xba\xb6\xbd\x09\x0c\x15\x18\x1a\xe0\x8d\xb6\x56\xb6\xb6\x37\x32\x9b\x12\x00\x89\xa1\xef\xae\xed\x77\x32\xea\x07\xf9\xf2\x42\xce\xc3\x29\xcb\xf9\xd0\xaa\x40\xec\xb0\xa6\xab\x04\xe0\xbe\x27\x3f\xfe\xe7\x3f\x9e\x3a\x1b\xa8\x84\xa5\x27\x40\xef\x75\x09\xa2\x58\x27\x2c\x7a\x26\xcf\x05\x13\xfa\xba\x2d\x5e\xde\x57\x4f\xdf\x7f\x7a\xfb\xe1\xb3\xb8\x8a\xde\x41\x69\x59\xa3\x97\x25\x88\x35\x9f\x00\xcc\xc9\xbc\x79\x91\x24\x71\xcd\xd1\x11\xb6\x84\xf2\x23\x85\xa0\x4c\xb3\x2c\xba\x74\x31\xd8\x51\x09\x62\xed\xb1\xc5\x15\x43\xac\x2a\x15\x3b\x8d\x63\x09\x82\x6b\x4f\x64\x0e\x8b\x39\x2a\x6c\x7b\x5f\x53\xf9\x18\xde\x22\x05\xea\x9c\xc6\x40\x7c\xda\x82\x3a\x17\xc6\x12\xbe\xc4\x00\x40\xec\xa4\x3a\x42\xad\x91\xb9\x4a\xa3\xb6\xed\x88\x19\x1b\x4a\xd7\x55\x00\xc4\xf5\xe8\x08\xd0\x8c\xa1\x55\xa6\x81\x96\x3c\xfd\xd2\x76\x85\x54\xc7\xbd\x88\xe1\xb7\xfc\xce\x2a\x93\x89\xaf\x46\x6c\x1e\x0c\xdc\x37\x0d\x71\x50\xd6\x94\xf0\x0e\x8d\xd4\x74\x83\x9e\xf3\xda\x76\x4e\x69\xca\x7e\x9b\x62\x7f\x51\x54\x75\x0d\xb0\xaf\xab\x74\x9a\x9c\xb7\xb7\x4a\xd3\x41\x75\xd8\xd0\xa1\xf7\x7a\x9e\x53\x40\x1d\xaa\x74\x55\x20\x2a\x29\xb4\xa4\x9a\x36\x54\xe9\xf3\x67\x29\x0c\x4a\x86\x36\x3e\x8b\xcb\xb2\xec\xd0\xec\xa7\x69\x01\x37\xcf\xaf\xa6\xe9\x02\xe4\x3c\xef\x8a\x28\x3f\xb2\x9f\xd8\x68\xbc\x21\x0d\xf1\xbb\x75\x5e\x75\xe8\xc7\x74\x7f\x6b\xb5\xb6\x03\xf9\x85\xee\x74\x0e\x0e\x11\xff\xdf\x0a\xfe\x83\xd5\xe6\xe1\x38\x92\xe4\x49\x26\x94\x71\x7d\xc8\xcf\xf7\xb1\x0d\xd8\x70\xcc\x89\x4d\x7e\x7e\x67\xd3\xd9\x70\xc7\xe5\x9f\xd7\xb4\xdc\xd9\xcf\x00\x00\x00\xff\xff\x35\xe1\xcb\x5c\x4e\x03\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 846, mode: os.FileMode(420), modTime: time.Unix(1530108596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5f\xcb\xd3\x30\x18\xc5\xef\xf3\x29\x0e\x2f\xf2\xa6\x63\x23\xf3\xbe\xe6\x4e\x41\x41\x87\xcc\x89\x17\xe2\x45\xb6\x3c\x5d\x03\x6d\x52\x92\xa7\x9b\x22\xfd\xee\xd2\x7f\x73\x9b\xc2\xbb\x5e\x85\x9e\x5f\xcf\x73\xd2\xf3\x14\xad\x3f\xb0\x0b\x1e\x96\x2a\x62\xda\x86\x73\xb6\x6f\x99\x83\x5f\xe0\xb7\x00\x80\x93\x89\xe0\x08\x8d\xf1\xb5\x6a\x4c\x24\xcf\x9b\x60\xe9\xea\x98\x0f\x68\x11\x22\xb2\x9e\x77\xd0\x78\x9d\xc3\xe1\x0d\x38\xaa\x43\xe9\x2a\xdb\x53\x49\x55\xe4\x8f\x5c\xe6\x70\xcb\xe5\xec\x3f\xcf\x18\x28\xe8\xdb\x0f\xbe\xbb\x1f\xf9\x85\x72\x05\xb2\x41\x52\xfc\xab\x21\x68\xad\x21\x4b\x67\x2d\x79\x89\xe7\xe7\xd1\x40\xf9\x60\x69\x63\xea\x49\xfe\xb0\xf9\xfc\x75\x37\xa8\x89\xe3\x3b\x6f\xd3\x37\xc7\xe5\x64\xe2\x4d\x4d\x2b\xc8\xf1\xde\x56\x2e\xae\x03\xcd\xe3\xfa\x30\x95\x49\xe9\xaf\xe3\x05\xbf\xa3\xfb\x67\xf4\x3d\x99\xaa\x25\x68\xc8\xc2\x54\x89\x64\xfe\x0f\x76\x6b\x0a\xf9\x1f\x64\xfa\xd7\xce\x7b\x8a\xef\x77\x9f\x3e\xf6\xd8\xdb\x61\xf2\x1d\xdc\x81\xaa\x44\x2f\x67\xe1\xd8\x3e\x12\x65\xbe\xdd\x63\x89\xb6\x74\xa2\xc8\xf7\x89\xc4\xed\xa9\x13\x9d\x10\xeb\x35\xbe\x84\x9a\xb0\x8f\xe1\x9c\x28\x26\xd8\xe0\x25\x23\xb5\x4d\x13\x22\xf7\xe5\x38\x7f\x54\x34\x15\x84\x79\x29\x95\xb8\xac\xe7\x75\x7f\x89\xe3\x0a\xa9\x2d\x0a\xf7\x73\xae\x21\x12\xb7\x71\xa0\x54\x6d\xf8\x50\x66\xa3\xbc\x7c\x7a\xf5\xb4\x80\xd6\x13\x9d\x8b\x4e\xfc\x09\x00\x00\xff\xff\x5b\x0f\xcb\xb1\xf1\x02\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 753, mode: os.FileMode(420), modTime: time.Unix(1530108640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6a\xeb\x40\x0c\x46\xdf\xbd\x0a\x6d\x60\x4c\x20\x17\x6e\x99\x40\xf6\x22\x8f\x14\x67\x5a\x47\x1a\x64\x25\x4d\x5a\xba\xf7\x62\xc7\x31\x53\x28\xa1\x7e\xf0\xd3\xd1\xd1\xcf\x37\x9d\xd2\x0d\x3e\x1b\x58\xbe\x82\x44\x59\xfa\xe0\x5a\x22\xfc\xdf\x94\xeb\xae\xf9\x6a\x9a\xf6\xf5\x7c\xea\xd4\x4d\xa5\x42\x3b\x4c\x6f\xbd\xe9\x59\x28\x24\x1d\xd4\x22\xb8\xa1\x8c\x05\x8d\xc5\x77\x2b\xe6\x7c\xf5\x80\x43\xee\x25\x42\x62\x71\xb6\xbb\x32\xa9\x38\x66\x61\xab\x94\x27\xbc\x86\xf7\x4c\x7e\x8c\xf0\xb2\x79\x34\xa7\x7c\xa9\xfa\x23\x8c\x05\xa5\x3d\x60\x55\x76\x50\xf1\x30\xe6\x0f\x8e\xf0\xef\x51\x55\x8c\xeb\x59\xd5\x88\x2d\x82\xa8\xf0\xee\xaf\x1b\x4c\x53\x1e\x30\x60\xf2\x7c\xa9\x65\x0b\x4b\x4a\x3d\x5b\x37\x9c\x79\x45\x0b\x8e\xe3\xaf\x6c\x6f\x7c\x9b\x29\xc7\x6e\x60\xd8\x83\x1f\x19\xe9\xe9\x31\x71\xc8\x89\x57\xfb\x5c\xd7\xce\xff\x30\xba\xe5\xc2\x34\x59\xe6\xf4\xf6\xe0\xd6\x12\x0f\xec\x5c\x2b\xb5\x60\xca\x7e\x8b\xb0\x69\xb7\xcf\x76\x5e\x67\x9b\x0e\xed\xd8\x85\x29\x19\x16\xff\x91\x8b\xf5\x59\xee\x8f\x62\xbb\x5c\xf8\x3b\x00\x00\xff\xff\x0a\xc5\xa6\x4c\x39\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1503580372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x8a\xdb\x30\x10\xc6\xef\x79\x8a\x41\xb0\xb0\x39\x54\xa6\xb4\x47\xad\xa1\x2c\xf4\x58\x96\xdd\xd0\x6b\x91\xad\x71\x23\xe2\x4a\xae\x34\x4d\xb2\x98\xbc\x7b\x89\xa5\x34\xff\xec\x54\x0e\xc9\xd1\x23\xcd\xcc\xf7\xfb\x32\x13\xbb\x6d\x5b\x85\x95\x36\x08\x4c\x96\xa4\xad\xf9\x51\x5a\x53\xe9\x9f\x6c\xb3\xd9\x4c\x84\xd2\x4b\x28\x6b\xe9\xfd\x13\x23\x59\xd4\xf8\xc1\xa1\x6f\xac\xf1\x7a\x89\x2c\x9f\x00\x00\x88\x2e\x7e\x74\x09\xc2\x55\x4f\x4e\x37\xa8\xe2\x53\x61\x9d\x42\x87\x2a\xa6\x85\xd4\x39\x4a\xb5\x7f\x0e\x31\x77\x1c\x08\x41\x95\x8b\x8c\x54\xff\xc9\x37\xf9\x0b\x87\x4f\xbf\xcb\xfa\x4f\xcf\xb1\xc8\x0e\x1b\x89\xec\x44\x8a\xa0\xc2\xaa\xf7\xe3\x94\xb6\x6d\x75\x05\xd6\xc1\x23\xfe\x06\x3e\x7b\x6f\x10\x98\xaf\x65\xb9\x60\xd3\xc3\xd0\x0a\x8b\xb9\xb5\x0b\x36\xdd\x1a\x98\x82\x06\xce\xae\x7c\x23\xcd\x13\xfb\xc8\xf2\xd9\x4a\x13\xa1\x1b\xe6\xa1\x15\x22\x0d\x1f\x9f\x05\xa3\xf2\x72\x8e\xe5\xa2\xb0\x6b\xe0\x5f\xba\x5f\x99\xc7\x46\x7c\xb6\xad\x07\x8f\x8d\xd3\x86\x2a\x60\x0f\xfe\xc1\x33\xe0\x2f\x0e\x2b\xbd\x06\xc6\xc3\x4c\x70\x8a\xb7\xbb\xee\xe7\x68\xd1\xc3\x8b\x1e\x47\x21\x68\xd4\x69\x76\x30\x76\xef\x60\x6c\xc6\xc6\x1b\xf8\x29\xc1\x40\x87\xb7\xb6\xf0\x35\x54\x4c\x36\x31\x2a\xb8\xde\xc6\xc1\x25\xa9\xe4\xd2\x3a\x4d\x17\xd6\x61\x34\xdc\xd7\x58\x32\x99\x6e\xa7\xe1\x0e\x78\xa5\xad\x6b\xec\xba\xf9\xf1\x84\xb5\xf6\x34\xc3\x35\xf5\x41\x3e\xef\x0b\x27\x73\x1e\x88\x61\x53\x60\x67\xd3\x9a\x4a\x9b\xb6\x13\xe1\x8f\x66\xfc\x46\x7c\x66\xf9\xdb\x36\x75\xd8\xaf\x46\x9b\x1b\x8c\x4b\xd7\x84\xbf\x68\xf3\x5f\xff\x3a\x12\xde\x68\x73\x87\x01\xf1\x24\x2f\x6c\xfe\x48\x98\x37\x92\x2e\x91\x66\xdb\xf7\x0e\x38\x0e\xe5\x2d\xa7\x3d\x60\xbd\xee\x8a\x26\xb2\xfd\x13\x71\x87\x29\xef\x25\x1f\x7a\x1d\x40\x6f\xef\x93\xf7\xe7\x85\x61\xef\x97\xb0\x33\xb2\x9c\x4b\x63\xb0\xbe\xa9\xd5\xcf\xb1\x66\xa2\xd3\x3b\x09\x57\x1b\x2d\xb2\x83\xcf\x16\x91\x75\x1f\x5e\xf9\x44\x64\x4a\x2f\xf3\xc9\x1e\xff\x6f\x00\x00\x00\xff\xff\x65\xbc\xb4\xb0\xf3\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2547, mode: os.FileMode(420), modTime: time.Unix(1530105051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x98\xcb\x6e\xeb\x36\x10\x86\xf7\x7e\x8a\x29\x81\x03\xf4\x2c\x2c\x03\x41\xd0\x76\x21\x0b\x48\x17\x6e\x52\x38\xad\x91\xa4\xd9\xda\xb4\x35\x92\x99\x50\xa4\x4a\xd2\x37\x08\x7e\xf7\x82\xba\x39\x4a\xad\x48\x76\xac\x83\x2c\x4d\x71\x2e\xdf\x3f\x23\x72\xac\x24\x49\x7c\x0c\x98\x40\x20\x01\xe3\x06\xd5\x74\x21\x45\xc0\x42\xb2\xdf\xef\x7b\xae\xcf\xd6\xb0\xe0\x54\xeb\x21\x31\x74\xce\xb1\xaf\x50\xc7\x52\x68\xb6\x46\xe2\xf5\x00\x00\xdc\x74\xbd\xb2\x09\xb2\xad\xda\x28\x16\xa3\x9f\xff\x9a\x4b\xe5\xa3\x42\x3f\x37\xcb\x4c\x97\x48\xfd\xc3\xef\x6c\x4d\x55\x17\xb2\x45\x1f\x16\x92\xeb\x98\x8a\x21\xb9\x22\x9e\x3b\x30\xfe\xd1\x5d\xde\x5f\x34\xc2\xfa\xa7\xcf\x94\xaf\x8e\x3c\x76\x07\x6f\x83\xba\x83\x77\x69\xb9\x66\x2e\xfd\x5d\x8b\x34\x93\x24\x61\x01\xe0\xbf\xe0\x3c\xed\x62\x04\x62\x36\xcc\x18\x54\xa9\x92\xc7\x90\x94\xdc\x64\x48\xbf\x92\x0a\xde\x1f\x28\x50\x51\x7e\x9c\x23\x49\x12\xe4\x1a\xa1\x12\x49\x73\xba\x78\x6d\x8e\x73\x75\x62\x1c\xe1\xd7\xb8\xf4\x62\x6a\xc9\x84\xae\xd7\xfa\x7f\x8b\xb9\x53\xce\xb4\x79\xc2\xad\x99\xcb\x2d\x38\xa3\xb4\xe3\x9c\x49\xee\x0d\x7e\x8e\x15\x13\x26\x00\xf2\x4d\x7f\xd3\x04\x9c\x89\xc2\x80\x6d\x81\x38\x59\x6b\x3a\x45\x58\xf2\x1d\xc8\x71\xdc\x86\xe2\xc2\x07\x2d\xe6\x2d\xa9\x86\x08\x7d\x46\x4f\xa7\x9a\x4b\xc9\x1f\x91\xe3\xa2\xc2\x75\x4b\xf5\xbd\xf5\xd7\xc8\xb5\xa4\x7a\x9a\x46\x26\xdf\xcf\xa5\x6a\xdb\x7c\xb5\xf4\x2b\xc5\xe1\xb2\x65\xfd\xe7\x61\xdc\xba\xb2\x2b\xc5\xa7\xdd\x56\x57\xa1\xd9\x20\x1a\xf4\x2f\x55\xdd\x87\xc2\x61\x23\x5c\x19\xfa\xfc\xf2\xd6\x62\x05\x74\x2d\x15\x33\x08\x66\xa9\x50\x2f\x25\x3f\x83\xcf\x64\x85\xfb\x3b\xb8\x13\x66\x62\x54\x49\x38\xca\x7d\x3f\x15\xae\x1b\x49\x8b\x6c\xa6\x65\x36\x1d\x20\x97\x72\x76\xc1\x5c\x56\xb5\x3d\x74\x99\x4f\xa7\xd4\x9c\x8a\xf0\x44\x4c\x97\x89\x78\x65\x20\x90\x2a\x1a\x12\xb9\x46\xb5\xb1\xb5\x21\x60\x76\x31\x0e\x89\x55\x80\x80\xa0\x11\x0e\x49\x92\x24\x39\xe4\xcc\x42\xce\x4a\xc8\x59\x01\x69\xc3\xcf\xf6\xfb\x3d\x81\xb5\xbd\x45\x53\x93\x42\xb3\x31\x15\xa1\x7d\x74\x24\xb5\x76\x27\xd7\x91\x9b\xc6\xfd\xa9\xdf\x87\x67\xa6\x99\x14\x70\x33\xb9\x83\x7e\xbf\xe5\xa0\x50\xde\x76\xbf\x11\x2f\xb3\xaf\x55\xad\x72\x1b\x8e\xe9\x1c\x6b\xee\xc2\x53\x0f\xbe\x2c\xac\x93\x7a\x6c\xec\x9e\x75\xb6\x99\xdb\xcd\x9d\x9c\x7c\x07\x45\xae\x89\x37\xa2\x8b\x0f\x06\x24\x2a\x42\x54\xc0\xd9\x2b\x72\xb6\x94\xf2\xd4\xd7\xea\x92\xfd\x96\xcb\x12\xd0\x05\x3a\x69\x5a\xd3\x43\x5a\x75\x7d\x98\xeb\x6e\x19\x9d\x1b\x6b\x33\x2e\x4d\xce\x6f\xcf\xda\x17\x72\xce\x57\x4a\xa1\xff\xf5\xe4\xca\x13\x7b\x2f\xd8\xac\x41\xb1\xdf\x33\xb3\x4e\x35\xb3\x93\xf5\x06\xe9\x17\xec\xb1\x22\xb3\x13\xdb\xec\x36\x37\xeb\x54\xb5\x17\xb9\xfb\x7a\x82\xbd\xc8\xdd\x89\x5a\xfd\x29\x77\x5d\xca\x54\x39\xcd\xed\x91\x7c\xd1\xc3\xdc\x2e\xb7\x3d\xcb\x53\x51\x3b\x39\xca\xab\x17\x96\xf0\x23\xaa\x5e\x2f\x7c\x67\x65\x4e\xdb\x5f\x5b\xd9\xfe\x1f\x80\x2b\x43\x79\x59\x54\x19\xca\xd6\x98\x32\x94\x9f\x43\xb4\xe3\x8c\x9d\x93\x56\x34\xc4\x33\x07\x9a\x77\x7f\xdf\x0b\x6f\xf5\xa2\x44\x4c\x80\x46\x61\x58\x84\xe2\x8c\xb7\xa1\x1c\x91\x47\x5c\x52\xf3\xcb\xf5\xdb\x31\xb9\x08\xee\xdc\x33\xf1\x58\x84\x68\x54\x93\x17\x56\x11\x13\xd3\x32\xb3\x0e\x86\xe5\x88\x6e\xbb\x27\xa7\xdb\x73\xc8\xe9\xf6\xb3\xe4\xee\xe0\xcd\x17\x29\x77\x90\x7e\x5f\xf3\x7a\xee\xc0\x67\x6b\xaf\x77\x98\xa6\xff\x0b\x00\x00\xff\xff\xac\x35\x20\x72\xda\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5082, mode: os.FileMode(420), modTime: time.Unix(1530105051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigModalTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x51\x6b\xdb\x30\x10\x7e\xdf\xaf\x38\x6e\x50\xda\x07\xdb\x2b\x7d\x5b\x6d\xc3\x18\x0c\x0a\x5b\x29\x6c\xef\x45\xb1\xce\x89\x40\x96\x8c\x2c\xa7\x31\xc6\xff\x7d\x58\x8a\x53\x77\x95\x53\x77\x0f\x63\x79\x48\xa2\xcb\xdd\xa7\xef\xbe\x2f\x77\xee\xfb\x9e\x53\x29\x14\x01\x56\x9a\x33\x89\xc3\x30\x7c\x00\x00\x48\xb9\xd8\x43\x21\x59\xd3\x64\xfe\x17\x28\x19\x27\x04\xc1\x33\xec\xfb\xde\x50\x2d\x59\x41\x10\x3f\x18\x2a\xc5\x01\x30\x46\xc0\x68\xac\x8e\x4a\x21\x2d\x99\xa8\xef\xfb\xf8\x4e\x71\x3a\x0c\xc3\x80\x60\xd9\x46\x8c\x87\x0c\xa3\x6b\x04\xa3\x25\x65\xc8\x05\x93\x7a\x8b\xc0\x8c\x60\x91\x64\x1b\x92\x92\xf8\xa6\xfb\x0b\xfc\xc8\x0a\x2b\x09\xa1\xb1\xdd\x08\xac\xf7\x64\x4a\xa9\x9f\xa2\xee\x73\x53\x18\x2d\x25\xe6\xae\xa7\x60\x5f\xd1\x44\xe3\x48\x4a\x17\x6d\x45\xca\xce\x4a\xc2\x65\x85\x56\xf6\x75\x5e\x38\x77\x47\x8c\x93\x09\xa4\xba\xf4\x4d\x6b\xad\x56\x60\xbb\x9a\x32\xf4\x07\x9c\xea\x0b\xa9\x1b\x42\xe0\xcc\xb2\x88\x8b\xa6\x12\x27\x50\xcc\x2f\xac\xa8\xa8\xb9\x4d\x13\x5f\xb3\x80\xbe\xbb\x79\xc9\xe5\x28\xd5\x5a\x1f\x1f\x03\x3a\xe7\x69\x53\x33\x35\xc1\x3a\xe7\xc0\xbd\x47\xb5\x11\x15\x33\x1d\xe6\x7d\xdf\xbb\x5c\xb8\x0c\xde\x00\x78\x35\x0c\x43\x9a\x8c\x38\x39\x8c\x57\xdc\xb3\x8a\x5c\x68\x77\x13\x50\x34\xe1\x62\xbf\x46\xe8\x8d\xe6\xdd\x92\xcc\xbb\x9b\xfc\xa7\x6e\x4d\x41\xe1\x3b\xc6\xd7\xc8\x9a\xaa\x5a\x32\x4b\x80\x8d\x4b\x7e\x2c\xb4\x2a\xc5\x16\xe1\x52\xd1\xd3\x0f\x56\x03\xfe\xea\x6a\x42\x88\xc7\x0f\x40\x8f\x88\x10\x7f\x75\x69\x77\x96\x2a\x40\xdf\x29\x4e\x2d\x5f\x4d\x33\x15\xa2\xf4\xcd\xa9\xbc\x92\xd2\xd1\x92\xf3\x94\x3c\xe2\x0b\x4a\xb1\x8f\xbd\x8f\xd9\x97\xc2\x0a\xad\x56\x32\x63\x2e\xf9\x0d\x66\x1e\xf1\x25\x33\x1f\x5b\xc7\x6c\xf5\xdf\xa0\xd4\xda\x2e\xcf\x9b\x62\xfb\xd9\xce\xc9\x30\x8e\xe3\x85\x54\x80\xb4\x95\x13\x74\xcd\xb6\x8b\x98\x27\x45\x44\x09\x5b\x0b\x7e\x60\xe0\xd3\x92\xbc\x33\x7c\x29\x4e\xf8\x86\xf6\x42\xb7\xcd\xd9\x2b\x4e\x75\x2c\xb8\x13\x7c\xd0\xea\xed\x76\xdc\x65\xc7\xd8\xce\x50\x99\xe1\xc7\xb5\x5b\x95\x71\x3e\x35\x10\x5d\x8f\xcb\x7b\x0d\x1f\xc7\xc9\x6d\x05\xa7\xec\x4e\x70\x4e\x2a\x43\x6b\x5a\xc2\xfc\x42\x32\x63\x6e\xa7\x69\x7f\x30\xb4\x5f\xd3\x61\xc2\xde\xba\x38\x4d\xa4\x78\xc3\x0f\x52\xfc\xbc\x09\xde\x33\x79\xf2\xec\xd2\xb7\x6f\xa9\xfa\x4e\x0a\xa2\xeb\xc5\x11\x99\xd1\x78\xf6\x50\xd1\x21\xf4\x44\x08\xd4\xfc\x13\xff\xde\x65\xdf\x3d\x1d\xec\x19\x0f\xcd\xcc\xc3\xff\xc3\xbe\x34\x69\xe5\xc2\x88\x27\x8a\x85\x16\xc5\xeb\xfd\xf1\x47\x68\x76\x3c\x7e\x7d\x26\xf1\x3b\x00\x00\xff\xff\x1b\x8c\x03\x99\x2b\x09\x00\x00")

func assetsTmplConfigModalTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigModalTmpl,
		"assets/tmpl/config/modal.tmpl",
	)
}

func assetsTmplConfigModalTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigModalTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/modal.tmpl", size: 2347, mode: os.FileMode(420), modTime: time.Unix(1530109394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigSourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\xcf\x6e\xe3\x20\x10\xc6\xef\x79\x8a\x11\x52\xa5\xf6\xd0\xf8\x05\xbc\xb9\x54\x7b\xe8\x65\xb7\x9b\x54\x7b\x8d\x88\x19\x37\x68\x09\xb8\x30\xce\x26\xb2\xf2\xee\x2b\x03\xca\xbf\x82\xbb\x4a\x53\xf5\x68\xf8\x98\xef\xe3\x67\xc3\xb8\xeb\x3a\x81\xb5\xd4\x08\xcc\x99\xd6\x56\x38\xaf\x8c\xae\xe5\x0b\xdb\xed\x76\xa3\x52\xc8\x35\x54\x8a\x3b\xf7\x8d\x11\x5f\x28\xbc\xb7\xe8\x1a\xa3\x9d\x5c\x23\x9b\x8c\x00\x00\x4a\x3f\x7e\x22\x82\x20\x75\x64\x65\x83\x22\x3e\x2d\x8c\x15\x68\x51\xc4\x65\x61\xe9\x12\xb9\x38\x3c\x87\x31\x7b\x3a\x10\x06\xc5\xe4\x07\x5f\x61\x59\x90\x48\xcf\xfe\xe6\xaa\x4d\x4c\x97\xc5\x71\xb9\xb2\x38\x33\x2c\x69\x61\xc4\xf6\x74\x49\xd7\x75\xb2\x06\x7c\x85\xf1\xf3\xb6\x41\x60\xf4\x57\x12\xa1\xf5\x38\xce\x9d\x83\xd6\x58\xb8\xed\xf5\x4f\x16\x6b\xb9\xd9\xaf\x18\x93\x5c\xa1\x92\x1a\x1d\xbb\x4b\x0b\x6a\xbe\x36\x56\x52\x2f\x48\x55\xcf\xe2\x38\xde\xb8\xab\x2c\xa2\x06\xcd\x57\xe8\xd2\x78\x8e\xd5\xd9\xc9\xb8\x1b\x25\x1d\x3d\xe3\x86\x16\x66\x03\xe3\x99\xff\x1c\xc6\x33\xef\xd0\xe3\x77\x70\xdb\x58\xa9\xa9\x06\x76\xe3\x6e\x1c\x3b\xec\x68\x1c\x62\xcc\x7d\x0c\x76\x07\x8c\xb6\x0d\xf2\x1e\xf6\x3d\xf1\x17\x27\x75\xd3\x52\x92\xe0\x3e\x5c\x36\xfa\xe9\x2b\x3c\xca\x8a\x5a\xe4\xdf\x49\x0a\xb7\x43\x6e\xab\x25\xba\x6c\x90\x77\x61\xbf\xb6\x68\xe5\x67\x71\xfe\x15\x8a\xe7\x19\x47\xf7\x1e\xef\x97\xb3\x3c\x7c\xdb\x17\xc3\xc4\x4d\xa5\x5a\x81\x60\xb1\x51\x57\x81\xba\x30\x46\xcd\x50\x61\x75\x82\xf5\x7b\xb0\x99\x06\x97\x3c\xdd\x18\x67\x1e\xe3\xe4\x8f\x24\x5c\x80\xf8\xbf\x80\x48\x1d\x81\xd0\xa7\xc1\x78\x0c\x16\x53\x1a\x00\x11\x63\xcc\x2d\x5d\x19\xc2\xd7\x9c\x59\x8b\xae\x55\x04\xfd\x85\xf4\x71\xaa\xee\x0d\xd1\xa9\x2f\xef\x5b\x45\x96\x68\x88\x30\xef\x23\xf8\xc3\x0b\xcc\x62\x85\x9a\x18\xb0\x95\xdc\xa0\x60\xc0\x1a\xd3\xb4\x8a\xa7\xbb\xcc\x3e\xe0\xd5\x78\x67\xa1\xf5\x0c\x2a\xd3\x6a\x1a\xf0\x1a\xc2\xd4\x75\x1d\x85\x6b\xed\x67\xfd\xa8\xe9\x89\xec\x1e\xd4\x43\x5f\x36\xcf\xc8\xbb\x0e\xf4\xc1\x74\xe7\x7f\xb3\xef\xf4\x9e\xcf\x7b\xba\x53\xbc\xfa\x93\x64\x3d\x4c\x66\xc9\xb5\x46\x35\x70\x3a\xdf\x83\x93\xba\xf7\x1f\x62\xd5\x01\x36\x51\x31\x78\xf3\x5f\x4e\xa8\x2c\x8e\x7e\x83\xca\xc2\xff\xae\x4d\x46\x65\x21\xe4\x7a\x32\x3a\xc8\xff\x05\x00\x00\xff\xff\x2c\x0d\xc3\xe9\x29\x0a\x00\x00")

func assetsTmplConfigSourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigSourceTmpl,
		"assets/tmpl/config/source.tmpl",
	)
}

func assetsTmplConfigSourceTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigSourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/source.tmpl", size: 2601, mode: os.FileMode(420), modTime: time.Unix(1530105221, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTwitter_confTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x8b\xdb\x30\x10\xbd\xe7\x57\x0c\xba\xaf\x0d\x3d\xcb\x86\x42\x2f\xbd\x6c\x0b\xfd\xb8\x2e\x8a\x34\xde\x88\xca\x92\x91\xc6\x76\x82\xf0\x7f\x2f\xb2\xdd\x5d\x67\xa3\x4d\x5a\x68\x0b\x9b\x53\xf4\xe6\x49\x6f\xde\x3c\x33\x31\x46\x85\x8d\xb6\x08\x8c\x46\x4d\x84\xfe\x41\x3a\xdb\xb0\x69\x9a\x76\x5c\xe9\x01\xa4\x11\x21\x54\x8c\xc4\xde\xe0\x9d\xc7\xd0\x39\x1b\xf4\x80\xac\xde\x01\x00\xf0\x19\x3f\x23\xc1\x42\x0d\xe4\x75\x87\x6a\x3d\xed\x9d\x57\xe8\x51\xad\xd7\x96\xab\x07\x14\xea\xf9\xbc\x60\xfe\x1c\x58\x40\x05\xd2\x99\xd0\x09\x5b\xb1\x77\xac\xbe\x17\x2d\xf2\x92\x54\x96\x59\x7f\x17\xa6\xcf\x94\x79\xb9\x7d\x9a\x97\x2f\xc4\x39\xed\x9d\x3a\xfd\x66\x33\xde\x8d\x4f\xcd\x7c\xb4\x84\x5e\x48\xd2\xce\xbe\xde\x53\x7b\x0a\x68\x9a\xd7\xeb\x17\x60\xfa\xc5\x18\xe5\x01\xe5\x8f\xbd\x3b\x42\xb1\x91\x29\xde\x1b\xe3\xc6\x2f\x68\x9a\xa7\xc8\x0a\xbd\x29\x8b\x54\x7e\x48\x82\x73\x88\x17\x7a\x37\x46\x73\xcd\x79\xed\xe8\x80\x1e\xfa\x80\x3e\xfc\xb9\x1b\xa3\x03\x7d\xc5\x23\x5d\x18\xfa\x96\xde\xcb\x9b\x99\xa5\x18\x30\x3a\x75\x28\x52\x64\x77\x24\x1e\x83\xb6\x5d\x4f\x7f\xdd\xdd\x59\xae\x9f\x8d\x90\x08\xf7\x8e\x74\xa3\xa5\xf8\xd7\xf1\x6e\x75\x8a\x59\x3a\x97\xb2\xdd\xb2\xba\x99\xf5\x36\xc2\xce\xd8\x7b\x91\x79\xc6\xda\xff\x8c\xbe\xfe\x94\xbc\x5e\xb1\xd9\x39\x63\xb4\x7d\x04\xd5\xfb\x1b\x1f\x43\x76\x20\x7c\x6e\x1b\x1a\xe7\xdb\x8a\xb9\x01\xfd\xe8\x35\x21\x83\xe4\xad\x62\x84\x47\x62\x60\x45\x9b\xfe\xaf\x03\xf9\x25\xc4\x60\x48\x0b\xad\x62\x31\xc6\xe2\xc3\x0a\x4e\xd3\xc4\x32\xea\xb7\x97\xde\xf3\x92\xe3\xe5\xbc\x98\xeb\x1d\x2f\x95\x1e\xea\x5d\x8c\x11\xad\x4a\x73\xfd\x19\x00\x00\xff\xff\x42\xf3\xa8\x8f\x12\x06\x00\x00")

func assetsTmplConfigTwitter_confTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTwitter_confTmpl,
		"assets/tmpl/config/twitter_conf.tmpl",
	)
}

func assetsTmplConfigTwitter_confTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTwitter_confTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/twitter_conf.tmpl", size: 1554, mode: os.FileMode(420), modTime: time.Unix(1530106127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4d\x8f\xdb\x36\x10\xbd\xef\xaf\x98\xb2\x01\x9a\x05\x62\xab\x49\x6e\xa9\x6c\xa0\x48\xd2\x22\x40\x93\x06\xcd\xf6\xd0\xd3\x82\x12\xc7\x36\x37\x14\x29\x90\x63\x7b\x0d\xc1\xff\xbd\xa0\x28\xc9\xd6\x87\xb5\xbb\xce\x07\x02\x6c\x0e\x59\x8b\x92\x66\xde\xbc\x37\x8f\xb4\xa7\x28\x0a\x81\x0b\xa9\x11\x58\x6a\xf4\x42\x2e\xaf\x89\x27\x0a\xaf\x57\xc8\x05\x5a\xb6\xdf\xef\x2f\x00\x00\x62\xf2\x0b\xf3\xf2\x73\xb8\xb6\x87\x8b\xb0\x20\xe6\x1f\x78\x86\x71\x44\xa2\x7f\xe7\x0d\x12\x97\xca\x0d\xdf\x6c\xaf\xc6\x51\x1d\x3a\x8e\xaa\xa4\x45\x51\xa0\x16\x1e\xca\x45\x1f\xae\xe0\xc4\xaf\xad\xd9\x1e\x41\x3d\x82\x16\x4b\x9d\xaf\x09\x16\xc6\x66\x33\x66\x36\x68\xb7\x56\x12\x32\xa0\x5d\x8e\x33\xb6\x92\x42\xa0\x66\xa0\x79\x86\x33\x56\x14\xc5\xf4\xa3\xc5\x85\xbc\xdd\xef\xf7\x53\x81\x0a\x09\x05\x83\x0d\x57\x6b\x9c\xb1\x05\x57\x0e\x59\x74\x4c\x41\xb7\x96\xd1\x5c\x84\xb7\x34\x9c\xc9\xaf\x35\x69\xfc\x2d\xcf\xe3\x7e\xbf\x6f\x25\x6b\x73\xd4\x4b\x9d\xac\x89\x8c\xae\x52\x85\x0b\x06\xa9\xe2\xce\xcd\x58\x42\x1a\x12\xd2\x93\xdc\xca\x8c\xdb\x1d\x03\x4f\xd9\x84\xcc\x72\xa9\x70\xc6\x32\x23\xb8\xaa\xd7\xb8\x5d\x22\xcd\xd8\xcf\x45\x51\x58\xcc\x15\x4f\x11\x2a\xa0\xc0\xa6\x0c\xd8\xc4\xb3\x3c\x59\x48\x45\x68\x27\x1e\xea\x3b\x2d\xd0\x17\xc1\xda\x78\xfc\xbf\xd7\x4a\xa6\x9f\x61\x85\x16\xdb\x50\xa3\x00\xef\xeb\xd6\x26\xb8\x5e\xa2\x65\x60\x74\xea\xd3\xce\x58\x90\xef\x1f\xb3\x7d\x4a\x2b\xe9\x2e\xd9\xfc\x4d\xb9\x30\x96\x3d\x74\xde\x68\xb3\x69\xdc\xde\xd5\x70\x3d\xf8\xbe\x1f\x80\xa7\x24\x8d\x0e\xf2\xfe\x5e\x7e\xf6\xa4\x41\x86\xb4\x32\x62\xc6\x72\xe3\x68\x80\xc2\xaa\xa3\x42\xe5\x6e\x9d\x64\x92\x9a\x46\xf9\x80\xdb\x93\x0a\x47\x1d\x08\x91\xc7\x30\x46\xf8\xd8\xca\xdd\xb4\x94\x4c\xc4\x3f\xbd\xf9\xfb\xf5\xd5\x7f\x1f\xdf\xc2\x8a\x32\x35\xbf\x88\xfd\x1f\x50\x5c\x2f\x67\x0c\x35\x2b\x23\x10\x66\xb9\xe2\x84\xc0\xaa\xed\x05\xa6\x0d\x89\x89\x11\xbb\x23\x08\x2e\xb5\x32\x27\x70\x36\x9d\xb1\x88\x3b\x87\xe4\xa2\x1b\x17\x55\x3a\x24\xb8\x30\x16\xa7\x37\x8e\xcd\xe3\x28\x3c\x3a\xbf\x38\xbc\x2c\xe4\xa6\xa6\x26\x35\x9a\xb8\xd4\x68\x3b\xf4\xb6\xd0\x68\xbe\x49\x78\x8d\x66\x40\x3d\x29\x5a\x86\xae\xc5\xac\xd0\x44\x1d\x1d\x01\x75\x1a\x24\xcb\xd6\x8a\x64\xce\x2d\x95\x02\x4c\x7c\xe7\x78\xc0\x41\x8d\x76\x9e\x23\xc8\x37\xeb\x2c\x31\x64\x8d\x1e\xea\x88\xd5\xf3\xf9\xeb\x32\xeb\xda\x72\x8f\x22\x8e\x56\xcf\x87\x1e\x7b\x51\x47\x53\xc8\x05\x6b\xde\x41\xd8\x99\xb5\x05\xb3\xd5\x90\x18\xfa\xc5\x81\x33\x6b\x9b\xa2\x7b\x06\xc1\xd4\x0e\xb8\x16\x55\x81\x2e\x8e\x56\x2f\xba\x9d\x24\xe4\xa6\x03\xbd\x28\x0a\xb9\x80\xe9\x7b\x74\x8e\x2f\xb1\xd6\xb3\x55\x98\xe7\x0f\xad\x35\x76\x92\x85\xa7\x9a\xce\xe5\x0a\x2d\x41\xf9\x7f\xed\xe1\xb9\xf7\xc8\x21\x5a\x95\xb2\x93\xb1\xee\xc5\x76\xd1\x2f\xe7\x57\x5b\x49\x84\x16\xae\x64\x86\x4a\x6a\xf4\x35\xbc\x9c\x9f\xa4\xba\x3c\xeb\x26\x16\x5d\x6e\xb4\x93\x1b\x1c\x62\xbc\x7c\xa6\xf5\x02\x84\xd7\x1c\x59\x99\xa3\xa8\xae\x12\x63\x05\x5a\x14\x03\x21\x7a\xfd\x36\x76\xd2\xf6\xf3\xb7\x9d\x31\x10\xd8\x7a\xe2\xe0\x89\xf4\x7b\xf1\x33\x78\x42\x55\xed\xf0\x6a\x06\xd3\x20\xfc\xb4\xe2\x65\xda\xf0\x72\x2a\xdd\x18\xde\x66\xe7\x83\xa7\x1a\xb7\xef\x79\x0e\x2c\x1c\x0e\x0c\x18\x55\x09\xea\xe4\x8e\x01\xfb\x50\x1e\x6c\x0d\x9e\xf2\x5c\x03\x56\x1e\x19\xac\x82\x7b\x39\x86\xe3\xa0\xf3\x43\x50\xb6\xf6\xe8\x03\xd2\xb0\xeb\x32\x68\x5c\xdb\x20\x8d\xb8\x10\xec\x24\x90\x38\x3a\x21\x40\x1c\x95\xfa\xdd\xcb\x20\x5f\x4b\xa1\x56\xbd\xd5\xc9\xdd\x54\x78\xb5\xcb\xf1\xa0\x04\x03\x16\x22\xbf\x23\xcc\x8e\x54\xe8\x08\x00\xcc\xdf\xff\xcb\x7f\x0b\x7a\xaa\x50\xc3\x93\x93\x78\x2e\xcf\x50\xbb\xc7\xea\x3d\xac\xfb\x07\xdf\x18\xbf\xcf\x3e\x46\xeb\x2e\xaa\xda\x87\x1a\xa3\xe1\xe5\x5b\x59\xb7\x4e\x7e\x24\x66\xbd\xf4\x83\x59\xb7\x41\xfa\xfd\xad\x7b\xb6\x42\x5f\x60\xdd\x26\xe7\x03\xad\xdb\xe0\x19\xb2\xee\x5d\x6a\x9f\x63\xdd\x4f\xc8\x6d\xba\x7a\x94\xce\x75\x65\xe9\x43\x5d\x51\x93\xf2\xad\x6c\xeb\xaa\xf8\x07\x1d\xc3\xca\x0f\xe6\xd9\x1a\xe6\xf7\xb7\xec\x79\xd2\x7c\x81\x5f\xab\x84\x0f\x74\x6b\x0d\x66\xc8\xac\xa3\x1a\x9f\xe3\xd4\x3f\x51\xa3\xe5\x0a\x3e\x21\x91\xd4\xcb\x01\xc7\xb6\xea\xaf\x70\x5c\x7b\x2d\x59\x97\xc6\xc1\x44\x9f\x14\x4f\x3f\x43\xf5\x35\xfe\x31\x6e\x08\x99\x5b\x1e\xb7\x5c\xc9\x47\xfd\xb3\xe6\xab\xef\x05\xae\x8c\x5e\xfd\xb8\x3a\xea\x92\xcc\x2d\x7f\xb0\x6d\xa0\xc6\xf8\xfd\xb7\x81\x07\x0b\x72\x9f\x1d\xa0\x24\xbe\xeb\x7f\x9f\xe9\x9e\xe6\x6f\xa3\xb8\x7c\x80\xa4\xf7\x76\xfd\xe8\x54\xb2\x33\x54\xfa\x37\x17\xbe\xda\xf4\x78\xc2\xd0\x9b\x32\xb9\x75\x9a\xa2\x73\xac\x3b\xc2\x58\xd9\xee\x4a\x33\x3c\x09\x01\x27\x0b\xa9\x70\xb2\xce\x95\xe1\x62\xe2\xef\xf5\x47\x29\xfe\x89\x33\xe7\x29\xfd\xcc\x77\x04\x5f\xe2\x43\x67\x6e\x6f\x6f\x73\x63\x09\xb8\x03\x0e\xd3\x1b\x67\x34\xf8\x90\x7d\x82\xb2\x30\x93\xc4\x05\x5f\x2b\x62\xe0\x68\x57\x4e\x5a\xb9\x5d\x4a\x3d\x49\x0c\x91\xc9\x5e\x3d\xff\x35\xbf\x65\xe3\x73\xba\x9e\x7c\x27\x69\x1c\x44\xfb\x2e\x2b\xd1\x96\x03\x9f\x96\xa2\xf7\x42\x7d\x0e\x8c\x53\x52\xfb\xcf\x65\x80\x1a\x69\x00\x10\x86\xe1\xd9\x2e\x31\x34\xad\x26\x89\x35\x57\x42\xba\x5c\xf1\xdd\x2b\xa9\xfd\x6f\xc9\xdf\xba\xd4\x05\xee\x2e\x3a\x1b\x40\x73\x39\x3e\x3c\xe4\x0b\x7f\xa4\xb6\x67\x87\x21\x4a\xd8\x73\xe2\x28\x4c\x30\x0f\x86\xfa\x3f\x00\x00\xff\xff\xe4\xdb\xdd\x2d\x25\x19\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 6437, mode: os.FileMode(420), modTime: time.Unix(1530108923, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x51\x73\xe2\x36\x10\x7e\xcf\xaf\xf0\xe8\xb5\x45\xc2\x40\x0f\xda\xc1\xcc\xa4\xb9\x1e\xe1\xae\xb9\x4b\x13\x92\x9b\xf4\x4d\x96\xd7\xb6\x8c\x2d\x39\xda\x35\xc6\x65\xf2\xdf\x3b\x86\x04\x68\x4a\xa6\x74\x26\x6f\xda\x5d\xfb\xfb\xf4\xed\x7e\xa3\x5d\xaf\xd7\x11\xc4\xda\x80\xc7\x52\x90\x11\x38\xf6\xf4\xf4\x74\x36\x6e\xcf\x93\x33\xcf\xf3\xbc\x71\x01\x24\x3d\x95\x4a\x87\x40\x01\xbb\x9b\x7f\xea\x8c\xd8\x61\xc9\xc8\x02\x02\xb6\xd4\x50\x97\xd6\x11\xf3\x94\x35\x04\x86\x02\x56\xeb\x88\xd2\x20\x82\xa5\x56\xd0\xd9\x04\x3f\x7a\xda\x68\xd2\x32\xef\xa0\x92\x39\x04\x3e\x9b\x9c\x6d\x91\x48\x53\x0e\x93\xab\x26\xb4\x34\x16\xdb\xe0\xb9\x92\x6b\xb3\xf0\x1c\xe4\x01\x43\x6a\x72\xc0\x14\x80\x98\x97\x3a\x88\x03\x96\x12\x95\xf8\x8b\x10\x85\x5c\xa9\xc8\xf0\xd0\x5a\x42\x72\xb2\x6c\x03\x65\x0b\xb1\x4b\x88\x3e\xef\xf3\xa1\x50\x88\xfb\x1c\x2f\xb4\xe1\x0a\x91\x79\xda\x10\x24\x4e\x53\x13\x30\x4c\x65\x7f\x34\xe8\xfc\x7a\xff\xa0\xf5\xed\xec\x13\x7c\xf1\xa3\x69\xf1\xf9\xe6\x7c\xd1\xa8\xea\xf2\xfc\xf2\x26\xe9\xf7\xbe\x15\x77\xaa\xae\x87\xd6\xf4\x6f\x1e\xa2\x64\x70\x2f\x7f\xb8\x2e\x6e\xe7\xf8\x97\xf8\xf2\x61\xb4\x0c\xa3\xdf\xb2\x74\x50\x31\x4f\x39\x8b\x68\x9d\x4e\xb4\x09\x98\x34\xd6\x34\x85\xad\xf0\xa5\x71\xa7\x88\x52\x91\xc9\x90\xab\xdc\x56\x51\x9c\x4b\x07\x1b\x45\x32\x93\x2b\x91\xeb\x10\x45\x6c\x0d\x75\x64\x0d\x68\x0b\x10\x03\xfe\x81\xf7\x37\xf2\x0e\xd3\x3b\x85\x27\xb0\x0a\x89\x08\x84\x1b\x0c\x55\x21\xd9\xe2\xd4\x3f\x4f\xbc\x2f\x35\x25\xc8\xd6\x56\x3c\xc3\xce\x6e\x08\x9d\x96\xcf\xe7\x3d\xee\xef\x3f\xc8\xf0\xe0\xe2\x5b\x7e\x54\x4e\x97\xe4\xa1\x53\x7b\xbe\x16\x9a\x27\xd6\x26\x39\xc8\x52\xe3\x2b\xba\xec\xb1\x02\xd7\x08\x9f\xfb\x3d\x3e\x78\x8e\x36\xb0\x19\xb2\xc9\x58\x6c\x01\x27\x6f\xa3\x9f\x6a\xa9\xec\xb5\xa3\xb2\xa3\x86\x9a\xab\x9f\x66\x7f\xe8\xb0\xdb\x1b\x3e\x2e\x9b\xec\xf6\x2a\xbe\xcc\xbe\x5d\xc9\xdf\x17\x71\xf5\xfd\x7e\xf5\xe7\xea\xee\xda\x5c\x7c\x3e\x1f\xe6\xbd\xe2\xe2\xfb\xd7\x59\x39\xfd\xb9\x98\x5e\x7c\x1c\xd5\xd3\xaf\x33\x75\xfd\x71\x38\x5f\xc9\xb7\x0d\xb5\xd7\xf2\x6e\xa3\xda\x4f\x87\x64\x82\xda\x94\x15\x89\x2e\x1f\xf1\xee\xb1\xca\xa1\x4d\x8e\x35\xf2\x5d\xb9\xfe\x3d\xc0\xb7\x89\xcb\x5c\x52\x6c\x5d\xc1\xa9\xd6\x44\xe0\x36\xc4\xb5\x8e\x12\x20\xdc\x4c\x69\xf7\xa6\x55\x14\xb7\x6f\xda\x29\xa0\x2f\x58\x89\xa6\xb4\x0a\xb9\xb6\xff\xf0\xb5\x70\x90\x83\x44\x40\x91\x4b\x02\xa4\x83\x62\x58\x99\x28\x87\x53\xdd\xf7\x1f\x4d\x4b\x65\x0b\x16\x4a\xd7\x0a\x11\x03\xde\xe5\xbe\x7f\x98\xfc\x3f\x6d\xaa\x4c\xb9\x48\xb6\xf8\x2b\x6d\x51\x44\x1a\x69\x7b\x3c\x02\x33\x16\xdb\xc5\xb0\x5e\xaf\xc1\x44\xed\xa6\xf8\x3b\x00\x00\xff\xff\x43\xe0\x04\x39\x40\x06\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1600, mode: os.FileMode(420), modTime: time.Unix(1529763681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\xe5\xd3\x06\x4c\xd1\xda\x06\xc3\xd0\xd1\x02\x82\x65\xd8\x3a\x34\x5b\xd0\xb4\x03\xf6\x48\x91\x67\x89\x0d\x45\x6a\xe4\xc9\x89\x27\xf8\x7f\x1f\x28\xd9\x89\x62\x4b\xce\x3c\x24\x58\xe2\x07\xdb\x32\xef\xbe\xef\xbb\xe3\xc7\x1f\x6e\xdb\x56\xe1\x5c\x5b\x04\xa6\xad\xc2\x1b\xb6\x5a\xad\x8e\xf8\xab\xb3\xdf\x7f\xfc\xf4\xe7\xc5\x4f\x50\x52\x65\xb2\x23\x1e\x3f\xc0\x08\x5b\xcc\x18\x5a\x96\x1d\xb5\x6d\x4b\x58\xd5\x46\x10\x02\x2b\x51\x28\xf4\x0c\x8e\xbb\xd4\xdc\xa9\x65\x76\x04\x00\xc0\x95\x5e\x80\x34\x22\x84\x19\x93\xce\x92\xd0\x16\x3d\xeb\xc7\xe2\xeb\x1e\x88\x15\x8b\x5c\x6c\x40\x6e\x43\x86\x10\x5f\x9a\x2a\x77\xe4\x9d\x1d\x40\x74\x31\xe5\xeb\xec\x7c\x99\x3b\xe2\x69\xf9\x7a\x7b\xe8\xcd\x26\xdb\xa0\x50\x2c\x13\x0d\xb9\x4a\x90\x96\xc2\x98\x25\x48\x67\x0c\x4a\x02\x61\x15\xe4\xde\x09\x25\x45\x88\x4f\x4b\xb8\xd2\x56\x05\x70\x73\xd0\x76\xee\x7c\xcc\x70\x16\xe6\xce\xc3\xd2\x35\x3c\x2d\xdf\xdc\xd1\xf0\x54\xe9\x45\x36\x50\xfc\x2a\x49\xe0\x0f\x1d\x62\xc2\xe9\xc5\x7b\xf0\x18\x1a\x43\x90\x24\xd9\x68\x51\xb5\xb0\x68\xa0\x7b\x4f\x22\xd7\x76\x6d\xdb\xa1\x49\x6c\xb6\xb6\xc5\x56\xdc\xba\x9d\x7a\x0e\xc7\xef\x2b\x51\xe0\xa9\x15\x66\x19\x74\x38\x13\x84\xb1\xa1\xdb\xb1\xbc\x7c\x7b\x1f\x96\x34\x19\x64\xd9\xcf\xce\x15\x06\x87\xfa\x3f\xf6\xfa\xbf\x6a\xdb\x76\x14\xfa\x6b\x9e\x96\x6f\x47\xc5\xa0\x09\x8f\xc2\x3d\x4d\x60\xd5\x36\xfe\x7a\x36\xf6\xb7\x30\x3a\xf4\x81\xfe\x7d\xfe\xf8\x61\x54\xfa\x00\xcb\xbb\xeb\x11\x90\xed\x28\xe9\x4c\x52\xa9\xe4\xbb\x89\xd0\x2e\x5c\x40\xe9\x71\x3e\x63\xb7\x2d\xbe\x74\x8d\x97\xb1\x77\x2c\xe3\xba\x2a\x20\x78\x39\x18\xed\xb5\xb1\x0d\x83\xae\x8a\xc4\x63\xa8\x9d\x0d\x7a\x81\xec\x1b\x10\x86\x66\xac\x8b\x04\x11\xe7\xea\x6f\x54\x90\x2f\x61\xa7\xbd\x2c\xe3\xa9\x98\xa8\x60\xb7\x8d\x7b\x8b\x83\x40\x4b\x83\x33\xe6\x16\xe8\xe7\xc6\x5d\xbf\x8b\xeb\xec\x87\x4a\xdc\x24\x25\xea\xa2\xa4\x77\x27\xdf\x7f\x5b\xdf\xec\xeb\x41\xed\x31\xe3\xd2\x29\xcc\x76\x8c\xd6\xbb\x60\xb5\x5a\xf1\xb4\x0b\xe0\x69\x0c\x3e\x44\xf7\xc4\xcf\xfb\x3c\x8a\x55\xf6\x9b\xa3\x52\xdb\x02\xc8\x41\x28\xdd\x35\x4f\xb1\xfa\x8f\x36\x1c\xdd\x23\x7e\x41\x61\xa8\x94\x25\xca\x2b\x20\x91\x1b\x9c\xdc\x23\xba\xd1\xe1\x1c\x6f\x19\xbc\xcf\x1e\x06\xf7\x80\x49\x20\xaf\x6b\x54\xeb\xa7\xdc\x79\x85\x1e\xd5\xc8\x34\x70\x8a\xdb\xca\x44\x4f\xc9\xef\x99\x37\x52\xd9\x85\x77\x12\x43\xe0\x29\x4d\x20\x6c\x02\x87\x15\x6f\x96\xf6\x54\x0e\x4f\xc7\x68\x79\x3a\x21\x94\xd3\xdd\xb1\x73\x70\x01\x9f\xae\x35\x11\x7a\x38\xd3\x3e\x9e\x06\xe7\x18\x42\x5c\x3c\x1f\x74\x20\xb4\xe8\x1f\x2e\x6c\x72\x10\x6e\xb7\x15\xfc\x0b\x8e\xd7\x3c\x3d\xee\xd9\xf9\x25\x09\x6a\x02\x90\x6f\x46\x2d\x78\x8f\xa4\x3c\xc9\x78\xa8\x85\xbd\x3d\xcd\x44\x8e\xf1\x40\xce\xd1\x24\xa1\x91\xb1\xff\x0c\xb4\x9a\x31\xea\x39\x12\x55\x25\x66\xad\x3f\x09\x1d\x11\xcb\x4e\x25\xe9\x05\xf2\x34\x02\x65\x3c\x2d\x4f\x1e\x14\x3e\xb5\x3c\xfe\xb5\x36\x25\x6c\x11\xaf\x06\x0f\x49\xbb\x24\x57\x1f\x24\x6c\x77\xcd\xdd\xd3\x74\xa0\xaf\xe0\x10\x9b\x7c\x0e\xe8\x9f\xd8\x1c\x91\x22\x3c\xa9\x3f\x9a\x80\xfe\xd9\x3a\x64\x5c\xdc\x4b\xf2\xc8\x05\x7a\xed\x94\x96\xf0\xab\xcb\x1f\xdb\x22\x1b\xec\x27\xf5\x47\xbd\x26\x49\xbe\xb8\xfc\xb9\xd9\x63\x54\xdb\x4b\x70\xc7\xa5\x11\xf2\xea\xf1\xb7\x8e\x0e\x76\x83\xfa\x24\xae\x08\x91\xe1\xd9\x6d\x17\x13\xaa\xfe\x67\x27\xf0\x74\xe4\x2e\xc2\xd3\xee\x0e\xb6\x73\x25\x1c\x7c\xe5\x69\x9f\xc6\xd3\xfe\x3f\xf7\x9d\xb2\x7f\x02\x00\x00\xff\xff\x80\xd4\xd7\x1a\xa3\x0f\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4003, mode: os.FileMode(420), modTime: time.Unix(1529764333, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x4f\x6f\xa3\x3a\x10\xc0\xef\xf9\x14\x96\xdf\x99\xf8\xfe\x94\xa0\x27\x55\x4f\xef\xd2\xf6\xf0\xb6\x7b\xef\x80\x07\x62\xd5\xb1\x29\x1e\x68\x57\x88\xef\xbe\xb2\x0d\x09\xa5\x69\x95\x4d\xd2\xec\x5e\x12\x33\xcc\x1f\xcf\x6f\x66\xb0\xbb\xae\x93\x58\x28\x83\x8c\x1b\x68\x33\xa8\x79\xdf\xf7\x8b\x95\x81\x96\xe5\x1a\x9c\x5b\x0f\x62\x16\xff\x12\x89\x05\x34\x9a\xc6\x47\x65\x5a\xac\x1d\x8e\x8f\x85\x7a\x45\x99\x90\xad\x78\xba\x60\x8c\xb1\x95\x54\x3b\x3f\xb9\x35\x04\xca\x60\x9d\x14\xba\x51\x72\xd0\x98\x6b\x0d\x8e\x36\x08\x12\xeb\x89\x4e\xd0\xcb\x1a\x22\x6b\x66\xaa\x64\xcb\x52\x23\xcb\xad\xd6\x50\x39\x94\x9c\x49\x20\x18\xc4\x3e\x6c\x94\x8f\x62\xa8\x4b\xa4\x35\xff\x2b\x5a\xdf\xa1\x69\x1c\x67\x50\x2b\x48\xf0\xb5\x02\x23\x51\xae\x79\x01\xda\xe1\x2c\x78\xd8\x80\xab\x60\x17\x5e\xe5\xd6\x24\x1e\x58\xba\x12\x5e\x7e\x4d\xf5\x95\x88\x28\x66\x52\x98\xa1\xc9\x6a\x30\x92\xb3\x4d\x8d\xc5\x9a\x0b\x9e\xde\xfd\xc8\x2c\xad\x04\x4c\xd0\x0b\xa9\xda\x4f\x2b\x31\xf2\x63\x7b\x90\x4a\x8e\x6f\x23\xbe\xd9\x2e\x1a\x3d\x71\x31\x76\x86\x81\xf6\x10\x50\xad\x26\xba\x89\x22\xdc\x76\x5d\xa7\x0a\x86\xcf\x6c\x79\x1f\x2c\xef\x61\x8b\xec\xf1\xc6\x9a\x42\x95\x8f\x7d\xdf\x43\x4e\xaa\xc5\xae\xeb\xd0\xc8\xbe\xef\x0f\x38\x7d\x87\x22\xd1\xca\x3c\xed\x30\xe4\xc1\x95\xe0\x69\xf4\xd9\xd4\x40\xca\x9a\x37\x54\xf6\x74\xb4\x9a\x83\x6f\x74\xba\xf8\xfa\x7c\x1f\x5e\x14\x11\xd6\x37\x56\xbb\x8b\x24\x4d\xd1\x5f\xa8\x26\xe6\x3e\x61\x27\x78\x3a\x44\x61\x37\x7b\xe9\x17\x70\x18\x97\xb5\x2a\x37\x74\x60\xeb\x91\x80\x41\xb6\x1c\xf6\x13\x10\xf0\xf0\x21\x3a\x02\xe0\xc7\x30\x62\xee\x1b\xa2\xca\xfd\x2d\x46\x04\xcb\xdc\x6e\x45\xd7\x75\xd3\x60\x1e\xe9\xe8\x36\x23\xc3\x32\x32\x89\x2e\xc3\x9f\xb3\xb9\x02\x9d\xf8\x71\x0c\xcf\x83\x97\x0f\x82\xb2\xf9\x18\x17\xc0\x0a\xf0\xbe\x0a\x18\x4d\xfd\x32\xd6\x73\x37\xdb\xec\x9f\xf7\x1b\x3a\x9c\xd4\x71\xd5\x19\xa8\xa2\x76\x07\x3d\x9d\x01\x11\xaa\xca\x2d\x27\x24\xaf\x8b\xad\x02\xe7\xa6\xdc\x2e\xc1\x28\x0c\xd4\xe2\x93\xa6\xfc\xa6\x21\x7f\x7a\x40\xd8\x5e\xae\x25\x7d\xb5\x83\xdb\xef\xff\xdf\xfe\x42\xef\x39\x6f\x72\x0a\xc2\x60\xf8\x61\xdf\xed\x12\xfc\xe3\xba\x4e\x40\x43\x1b\x11\xd3\xbe\x1a\xa3\x2b\x36\xd9\x19\x83\x98\x5b\xe3\xac\xc6\xa5\xc4\x16\xb5\xad\xb0\x76\xcb\xd2\xda\x52\x63\xf8\xbe\x41\xa5\x9c\xff\x11\xad\x72\xca\x9a\xe1\x95\x97\x86\xd7\xcf\x8d\x25\x70\xc7\x22\x8d\xc6\xa7\x30\x8d\x96\x7e\xb5\x3f\xe5\xfe\x0b\xb2\x7f\x0d\x64\x1a\x25\xa3\xba\xc1\x37\xe7\x5b\x6c\x9e\xa1\x06\x93\x03\xef\x42\xc5\x38\x83\x78\xa9\x68\xd3\x64\x81\x9f\x7a\x01\x82\x27\x10\x5b\x7f\x9f\x3a\x1a\x63\xb0\x3f\x09\x63\xb0\x3c\x30\xbf\xbf\x81\x86\xd0\xb6\xb4\x0d\x8d\xa7\x29\x7f\x77\xe3\x38\x65\xf4\x54\x69\x12\xdb\xd0\xfe\xbb\x74\x1b\x82\x9c\x93\xde\xec\x82\x32\xb9\xe7\x0e\xcb\x95\x30\xd0\xa6\x8b\xfd\x74\xfe\x0c\x00\x00\xff\xff\x26\x65\x2d\xa6\x0a\x0d\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3338, mode: os.FileMode(420), modTime: time.Unix(1529738002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x41\x6b\xe3\x3a\x10\xbe\xe7\x57\xcc\xd3\x3d\x11\xed\xf1\x61\x1b\x1e\xe9\x3b\x94\x52\xde\x83\xf4\xb2\xa7\x30\xb6\x26\xb1\x36\xb2\x24\xa4\x71\x8a\x31\xf9\xef\x8b\xed\xa4\x4d\x52\x27\x5d\xba\x2c\x2d\xec\x25\xb1\x98\x99\xcf\xdf\x7c\x33\xfa\x70\xdb\xb6\x8a\x56\xda\x12\x88\x48\x5c\x7b\xb1\xdb\xed\x26\xc9\x5f\x77\xff\xcd\x9f\xbe\xfd\xff\x2f\x94\x5c\x99\x6c\x92\x74\x7f\x60\xd0\xae\x53\x41\x56\x64\x13\x00\x80\xb6\x6d\x99\x2a\x6f\x90\x09\x44\x49\xa8\x28\x08\x98\x75\xe5\x5d\x34\xc9\x9d\x6a\x86\xc4\xfe\xa8\xf4\x16\x0a\x83\x31\xa6\xa2\x70\x96\x51\x5b\x0a\xe2\x35\xfe\x06\xd0\xe2\x36\xc7\x63\xc0\x31\xa4\xef\x75\x95\x3b\x0e\xce\x9e\x21\xf5\x79\xe5\x4d\xb6\xe8\x3a\x4a\x64\x79\x33\x16\xbe\x3d\xa0\x18\x42\x25\xb2\xa7\x52\x47\xd0\x11\xb8\x24\x58\xe9\x10\x19\x22\x93\x07\x76\x50\x47\x82\xc7\x26\x77\x9c\xc8\xf2\x76\x04\x69\xe5\x42\x05\x5a\xa5\x7b\x01\x01\x0b\xd6\xce\xa6\x42\xf6\x67\x29\xa0\x22\x2e\x9d\x4a\x85\x77\x91\x05\x90\x2d\xb8\xf1\x94\x8a\xaa\x36\xac\x3d\x06\x96\x1d\xc2\x54\x21\xa3\xc8\x92\xfe\x30\xf2\x16\x6d\x7d\xcd\xd0\x05\x5f\x5e\x34\xc0\xc4\x3a\xaf\x34\x0b\xd8\xa2\xa9\x29\x15\x0b\xdc\x92\x38\xb4\x96\xb3\x85\x9c\xed\xd4\x07\x5d\x61\x68\xfa\x67\xb3\x3e\x53\x2b\x91\x4a\x6f\xb3\xc9\xf9\x2c\xf4\x0a\x66\x8f\x14\x23\xae\xe9\xda\x0c\xd0\x50\x60\xe8\x7f\xa7\x0a\xed\xba\x1b\x6b\xdb\xb6\x47\xa5\x7b\xfc\x33\x78\xb2\xaa\x83\xfd\x29\x5c\x6d\x57\x6e\x6c\xc4\x08\x65\xa0\x55\x2a\x4a\x66\x1f\xff\x96\x12\xbd\x8f\x33\x7e\xd6\xcc\x14\x66\x85\xab\x04\x30\x86\x35\x71\x2a\x96\xb9\x41\xbb\x11\xd9\xdc\xe8\x62\x03\x25\x05\xea\x26\x5b\x04\x42\x26\x59\x94\x54\x6c\xa0\x71\x75\x00\xf7\x6c\xe1\x69\x00\x80\x7f\xbc\x4f\x24\x8e\x6a\x75\x89\x34\x63\x6e\x68\x1a\x28\x7a\x67\xa3\xde\xd2\x18\xe9\x3e\xe7\xa4\x00\x86\xb2\xc8\x41\x7b\x52\xfb\x53\xee\x82\xa2\x40\x6a\x04\x62\x80\x39\xbd\x60\x6f\xe3\xe1\x72\x70\x48\x50\xd9\xa1\xd3\xb9\xb3\xb1\xae\x28\xc0\x03\x35\x89\x64\xf5\x7e\xe5\xd5\x04\xb8\xba\xaf\x1e\x63\x7c\x76\x41\x09\xb0\x58\xd1\x3e\x78\x98\xda\xb2\xd8\x53\x59\x6e\xa8\x79\xd9\xe9\x6e\x9f\xf6\x5c\x0f\x54\x1f\xa8\xd9\xed\x76\x17\xc4\x79\x21\x71\xb5\x97\x44\x5e\xd3\xe8\x63\x02\x2e\xa8\x08\xc4\x5f\x45\xc3\xd8\xb3\xb9\x26\xe3\xc0\xf7\xf7\x29\x99\xc8\x0b\x7b\x9a\xc8\x7e\xcd\xdf\x77\xa2\x5f\xf7\x04\x3d\x8b\x06\x8b\x4d\x67\x08\xbd\x43\x7c\xcc\x15\x16\x1d\xc6\x1f\xe0\x09\x43\x9f\x73\xa3\xc9\x32\xdc\xdf\x7d\xd2\x2a\xf7\x13\x5b\x16\x3d\x8b\xa5\x56\x27\x2b\xdc\x33\x1c\x08\xde\xdf\x7d\x01\x13\x38\x51\xec\x53\x0d\xe0\x44\xb5\x91\xcb\x7f\xa4\xdc\xd7\xbe\xf8\x47\x57\x2a\x91\x03\x4e\x22\x87\x6f\xd1\xd7\x4f\x87\x1f\x01\x00\x00\xff\xff\x20\x45\xb9\x70\xbb\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2747, mode: os.FileMode(420), modTime: time.Unix(1529738002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x41\x8f\x9b\x30\x10\x85\xef\xf9\x15\x53\x37\xc7\x26\x68\xf7\x58\x39\x96\xaa\xb4\xc7\xaa\x3d\x6c\x0f\x3d\x0e\x78\x00\x6f\x1d\x9b\xda\x03\xab\xc8\xe2\xbf\x57\x40\x58\x08\xdb\x43\x55\x2e\x58\x30\xf3\x3d\xbf\xe7\x71\x4a\x49\x53\x69\x1c\x81\xe0\x17\xc3\x4c\xe1\xec\x6d\x14\x7d\xdf\xef\xe4\xbb\xcf\xdf\xce\x4f\x3f\xbf\x7f\x81\x9a\x2f\x56\xed\xe4\xf0\x02\x8b\xae\x3a\x09\x72\x42\xed\x52\x4a\x4c\x97\xc6\x22\x13\x88\x9a\x50\x53\x10\x70\x1c\x5b\x73\xaf\xaf\x6a\x07\x00\x20\xb5\xe9\xa0\xb0\x18\xe3\x49\x14\xde\x31\x1a\x47\x41\x4c\xff\x86\xe7\x0e\xe2\xb0\xcb\x71\x86\xbc\x96\xac\x11\xcf\xed\x25\xf7\x1c\xbc\x5b\x21\xc6\x9a\xfa\x41\x3d\x4d\x06\xe0\xec\xad\xa5\x82\x8d\x77\x51\x66\xf5\xc3\xb6\xf0\x71\x66\x59\x42\x2d\xd4\x8f\x68\x5c\x05\x73\x6f\xb1\xf4\x02\x7b\x88\xec\x03\xc1\xd5\xb7\x01\x4a\xec\x7c\x30\x4c\xc0\x2f\x44\x1c\xc1\x44\xd0\x84\xda\x5e\xa1\x8d\x54\xb6\x56\x66\xf5\xe3\x22\x25\x33\x6d\x3a\xb5\xf2\xd0\xda\x59\xd6\x61\x07\x0e\xbb\x43\x63\xac\x8d\xe3\xea\xb9\x8d\x6c\x4a\x43\xfa\xce\x54\x4a\x29\xa0\xab\x08\xf6\xbf\xe8\xfa\x01\xf6\x1d\x5a\xf8\x78\x82\xe3\x62\xef\x2b\x36\x43\x50\x2b\x73\xd6\x40\xf0\x96\x4e\xa2\x09\x14\xc9\x31\x0e\x65\x62\x56\x4e\x29\x99\x12\xe8\x37\xec\x8f\x9f\x0a\x36\x1d\x2d\xa8\x51\xa4\xef\x7b\x1c\xbf\xa7\x94\xc8\xe9\xbe\xef\x85\x92\x08\x1a\x19\x0f\xec\xab\x6a\x00\x33\xe6\x02\xea\x40\xe5\x49\xbc\x4f\x29\xdd\xda\x84\x5a\xd6\x32\x43\x25\x33\x6b\x36\x5e\x26\xe0\x2a\xa0\xd6\xaa\xbf\x9f\x31\x63\x7e\x18\x46\x85\x1c\x6f\x4e\xf9\x3f\x22\xb9\xa1\x8d\x1e\xed\xcf\xdb\x5d\x4b\x35\xe8\x08\x4a\xd4\xf4\x0f\xf1\x18\x07\x6f\x12\xba\x13\x1b\x05\xf1\x15\x3f\x4d\xd5\xa1\x0a\x46\xcf\xa9\x0d\xbb\xe8\xd0\x4e\xe1\x66\xb8\x99\xce\x69\x6c\x36\x9e\xdf\x44\xb7\xcc\xd6\x6d\x2d\xb3\xe9\xc6\xc9\x6c\xba\xab\x4b\xd3\x9f\x00\x00\x00\xff\xff\xcb\x5b\xce\x43\xe1\x03\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 993, mode: os.FileMode(420), modTime: time.Unix(1529738002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config/modal.tmpl": assetsTmplConfigModalTmpl,
	"assets/tmpl/config/source.tmpl": assetsTmplConfigSourceTmpl,
	"assets/tmpl/config/twitter_conf.tmpl": assetsTmplConfigTwitter_confTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
				"modal.tmpl": &bintree{assetsTmplConfigModalTmpl, map[string]*bintree{}},
				"source.tmpl": &bintree{assetsTmplConfigSourceTmpl, map[string]*bintree{}},
				"twitter_conf.tmpl": &bintree{assetsTmplConfigTwitter_confTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

