// Code generated by go-bindata.
// sources:
// assets/js/config_after.js
// assets/js/config_before.js
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config/modal.tmpl
// assets/tmpl/config/source.tmpl
// assets/tmpl/config/twitter_conf.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x8f\x94\x40\x10\x86\xef\xfc\x8a\x0a\xd1\x34\x93\xec\x80\xf1\x88\xc3\xf8\x91\x98\x78\x55\xd7\x83\x51\x33\xa9\xa5\x6b\xa1\xd7\xa6\xbb\xb7\xab\x19\x82\x84\xff\x6e\xe8\x65\xc6\x71\xd5\x83\x17\xd2\x55\xef\x4b\x7d\x3c\xa9\x23\x7a\x08\x83\x0a\x81\xfc\xeb\xba\xb6\xbd\x09\x0c\x15\x18\x1a\xe0\x8d\xb6\x56\xb6\xb6\x37\x32\x9b\x12\x00\x89\xa1\xef\xae\xed\x77\x32\xea\x07\xf9\xf2\x42\xce\xc3\x29\xcb\xf9\xd0\xaa\x40\xec\xb0\xa6\xab\x04\xe0\xbe\x27\x3f\xfe\xe7\x3f\x9e\x3a\x1b\xa8\x84\xa5\x27\x40\xef\x75\x09\xa2\x58\x27\x2c\x7a\x26\xcf\x05\x13\xfa\xba\x2d\x5e\xde\x57\x4f\xdf\x7f\x7a\xfb\xe1\xb3\xb8\x8a\xde\x41\x69\x59\xa3\x97\x25\x88\x35\x9f\x00\xcc\xc9\xbc\x79\x91\x24\x71\xcd\xd1\x11\xb6\x84\xf2\x23\x85\xa0\x4c\xb3\x2c\xba\x74\x31\xd8\x51\x09\x62\xed\xb1\xc5\x15\x43\xac\x2a\x15\x3b\x8d\x63\x09\x82\x6b\x4f\x64\x0e\x8b\x39\x2a\x6c\x7b\x5f\x53\xf9\x18\xde\x22\x05\xea\x9c\xc6\x40\x7c\xda\x82\x3a\x17\xc6\x12\xbe\xc4\x00\x40\xec\xa4\x3a\x42\xad\x91\xb9\x4a\xa3\xb6\xed\x88\x19\x1b\x4a\xd7\x55\x00\xc4\xf5\xe8\x08\xd0\x8c\xa1\x55\xa6\x81\x96\x3c\xfd\xd2\x76\x85\x54\xc7\xbd\x88\xe1\xb7\xfc\xce\x2a\x93\x89\xaf\x46\x6c\x1e\x0c\xdc\x37\x0d\x71\x50\xd6\x94\xf0\x0e\x8d\xd4\x74\x83\x9e\xf3\xda\x76\x4e\x69\xca\x7e\x9b\x62\x7f\x51\x54\x75\x0d\xb0\xaf\xab\x74\x9a\x9c\xb7\xb7\x4a\xd3\x41\x75\xd8\xd0\xa1\xf7\x7a\x9e\x53\x40\x1d\xaa\x74\x55\x20\x2a\x29\xb4\xa4\x9a\x36\x54\xe9\xf3\x67\x29\x0c\x4a\x86\x36\x3e\x8b\xcb\xb2\xec\xd0\xec\xa7\x69\x01\x37\xcf\xaf\xa6\xe9\x02\xe4\x3c\xef\x8a\x28\x3f\xb2\x9f\xd8\x68\xbc\x21\x0d\xf1\xbb\x75\x5e\x75\xe8\xc7\x74\x7f\x6b\xb5\xb6\x03\xf9\x85\xee\x74\x0e\x0e\x11\xff\xdf\x0a\xfe\x83\xd5\xe6\xe1\x38\x92\xe4\x49\x26\x94\x71\x7d\xc8\xcf\xf7\xb1\x0d\xd8\x70\xcc\x89\x4d\x7e\x7e\x67\xd3\xd9\x70\xc7\xe5\x9f\xd7\xb4\xdc\xd9\xcf\x00\x00\x00\xff\xff\x35\xe1\xcb\x5c\x4e\x03\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 846, mode: os.FileMode(420), modTime: time.Unix(1530108596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5f\xcb\xd3\x30\x18\xc5\xef\xf3\x29\x0e\x2f\xf2\xa6\x63\x23\xf3\xbe\xe6\x4e\x41\x41\x87\xcc\x89\x17\xe2\x45\xb6\x3c\x5d\x03\x6d\x52\x92\xa7\x9b\x22\xfd\xee\xd2\x7f\x73\x9b\xc2\xbb\x5e\x85\x9e\x5f\xcf\x73\xd2\xf3\x14\xad\x3f\xb0\x0b\x1e\x96\x2a\x62\xda\x86\x73\xb6\x6f\x99\x83\x5f\xe0\xb7\x00\x80\x93\x89\xe0\x08\x8d\xf1\xb5\x6a\x4c\x24\xcf\x9b\x60\xe9\xea\x98\x0f\x68\x11\x22\xb2\x9e\x77\xd0\x78\x9d\xc3\xe1\x0d\x38\xaa\x43\xe9\x2a\xdb\x53\x49\x55\xe4\x8f\x5c\xe6\x70\xcb\xe5\xec\x3f\xcf\x18\x28\xe8\xdb\x0f\xbe\xbb\x1f\xf9\x85\x72\x05\xb2\x41\x52\xfc\xab\x21\x68\xad\x21\x4b\x67\x2d\x79\x89\xe7\xe7\xd1\x40\xf9\x60\x69\x63\xea\x49\xfe\xb0\xf9\xfc\x75\x37\xa8\x89\xe3\x3b\x6f\xd3\x37\xc7\xe5\x64\xe2\x4d\x4d\x2b\xc8\xf1\xde\x56\x2e\xae\x03\xcd\xe3\xfa\x30\x95\x49\xe9\xaf\xe3\x05\xbf\xa3\xfb\x67\xf4\x3d\x99\xaa\x25\x68\xc8\xc2\x54\x89\x64\xfe\x0f\x76\x6b\x0a\xf9\x1f\x64\xfa\xd7\xce\x7b\x8a\xef\x77\x9f\x3e\xf6\xd8\xdb\x61\xf2\x1d\xdc\x81\xaa\x44\x2f\x67\xe1\xd8\x3e\x12\x65\xbe\xdd\x63\x89\xb6\x74\xa2\xc8\xf7\x89\xc4\xed\xa9\x13\x9d\x10\xeb\x35\xbe\x84\x9a\xb0\x8f\xe1\x9c\x28\x26\xd8\xe0\x25\x23\xb5\x4d\x13\x22\xf7\xe5\x38\x7f\x54\x34\x15\x84\x79\x29\x95\xb8\xac\xe7\x75\x7f\x89\xe3\x0a\xa9\x2d\x0a\xf7\x73\xae\x21\x12\xb7\x71\xa0\x54\x6d\xf8\x50\x66\xa3\xbc\x7c\x7a\xf5\xb4\x80\xd6\x13\x9d\x8b\x4e\xfc\x09\x00\x00\xff\xff\x5b\x0f\xcb\xb1\xf1\x02\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 753, mode: os.FileMode(420), modTime: time.Unix(1530108640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6a\xeb\x40\x0c\x46\xdf\xbd\x0a\x6d\x60\x4c\x20\x17\x6e\x99\x40\xf6\x22\x8f\x14\x67\x5a\x47\x1a\x64\x25\x4d\x5a\xba\xf7\x62\xc7\x31\x53\x28\xa1\x7e\xf0\xd3\xd1\xd1\xcf\x37\x9d\xd2\x0d\x3e\x1b\x58\xbe\x82\x44\x59\xfa\xe0\x5a\x22\xfc\xdf\x94\xeb\xae\xf9\x6a\x9a\xf6\xf5\x7c\xea\xd4\x4d\xa5\x42\x3b\x4c\x6f\xbd\xe9\x59\x28\x24\x1d\xd4\x22\xb8\xa1\x8c\x05\x8d\xc5\x77\x2b\xe6\x7c\xf5\x80\x43\xee\x25\x42\x62\x71\xb6\xbb\x32\xa9\x38\x66\x61\xab\x94\x27\xbc\x86\xf7\x4c\x7e\x8c\xf0\xb2\x79\x34\xa7\x7c\xa9\xfa\x23\x8c\x05\xa5\x3d\x60\x55\x76\x50\xf1\x30\xe6\x0f\x8e\xf0\xef\x51\x55\x8c\xeb\x59\xd5\x88\x2d\x82\xa8\xf0\xee\xaf\x1b\x4c\x53\x1e\x30\x60\xf2\x7c\xa9\x65\x0b\x4b\x4a\x3d\x5b\x37\x9c\x79\x45\x0b\x8e\xe3\xaf\x6c\x6f\x7c\x9b\x29\xc7\x6e\x60\xd8\x83\x1f\x19\xe9\xe9\x31\x71\xc8\x89\x57\xfb\x5c\xd7\xce\xff\x30\xba\xe5\xc2\x34\x59\xe6\xf4\xf6\xe0\xd6\x12\x0f\xec\x5c\x2b\xb5\x60\xca\x7e\x8b\xb0\x69\xb7\xcf\x76\x5e\x67\x9b\x0e\xed\xd8\x85\x29\x19\x16\xff\x91\x8b\xf5\x59\xee\x8f\x62\xbb\x5c\xf8\x3b\x00\x00\xff\xff\x0a\xc5\xa6\x4c\x39\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1503580372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x8a\xdb\x30\x10\xc6\xef\x79\x8a\x41\xb0\xb0\x39\x54\xa6\xb4\x47\xad\xa1\x2c\xf4\x58\x96\xdd\xd0\x6b\x91\xad\x71\x23\xe2\x4a\xae\x34\x4d\xb2\x98\xbc\x7b\x89\xa5\x34\xff\xec\x54\x0e\xc9\xd1\x23\xcd\xcc\xf7\xfb\x32\x13\xbb\x6d\x5b\x85\x95\x36\x08\x4c\x96\xa4\xad\xf9\x51\x5a\x53\xe9\x9f\x6c\xb3\xd9\x4c\x84\xd2\x4b\x28\x6b\xe9\xfd\x13\x23\x59\xd4\xf8\xc1\xa1\x6f\xac\xf1\x7a\x89\x2c\x9f\x00\x00\x88\x2e\x7e\x74\x09\xc2\x55\x4f\x4e\x37\xa8\xe2\x53\x61\x9d\x42\x87\x2a\xa6\x85\xd4\x39\x4a\xb5\x7f\x0e\x31\x77\x1c\x08\x41\x95\x8b\x8c\x54\xff\xc9\x37\xf9\x0b\x87\x4f\xbf\xcb\xfa\x4f\xcf\xb1\xc8\x0e\x1b\x89\xec\x44\x8a\xa0\xc2\xaa\xf7\xe3\x94\xb6\x6d\x75\x05\xd6\xc1\x23\xfe\x06\x3e\x7b\x6f\x10\x98\xaf\x65\xb9\x60\xd3\xc3\xd0\x0a\x8b\xb9\xb5\x0b\x36\xdd\x1a\x98\x82\x06\xce\xae\x7c\x23\xcd\x13\xfb\xc8\xf2\xd9\x4a\x13\xa1\x1b\xe6\xa1\x15\x22\x0d\x1f\x9f\x05\xa3\xf2\x72\x8e\xe5\xa2\xb0\x6b\xe0\x5f\xba\x5f\x99\xc7\x46\x7c\xb6\xad\x07\x8f\x8d\xd3\x86\x2a\x60\x0f\xfe\xc1\x33\xe0\x2f\x0e\x2b\xbd\x06\xc6\xc3\x4c\x70\x8a\xb7\xbb\xee\xe7\x68\xd1\xc3\x8b\x1e\x47\x21\x68\xd4\x69\x76\x30\x76\xef\x60\x6c\xc6\xc6\x1b\xf8\x29\xc1\x40\x87\xb7\xb6\xf0\x35\x54\x4c\x36\x31\x2a\xb8\xde\xc6\xc1\x25\xa9\xe4\xd2\x3a\x4d\x17\xd6\x61\x34\xdc\xd7\x58\x32\x99\x6e\xa7\xe1\x0e\x78\xa5\xad\x6b\xec\xba\xf9\xf1\x84\xb5\xf6\x34\xc3\x35\xf5\x41\x3e\xef\x0b\x27\x73\x1e\x88\x61\x53\x60\x67\xd3\x9a\x4a\x9b\xb6\x13\xe1\x8f\x66\xfc\x46\x7c\x66\xf9\xdb\x36\x75\xd8\xaf\x46\x9b\x1b\x8c\x4b\xd7\x84\xbf\x68\xf3\x5f\xff\x3a\x12\xde\x68\x73\x87\x01\xf1\x24\x2f\x6c\xfe\x48\x98\x37\x92\x2e\x91\x66\xdb\xf7\x0e\x38\x0e\xe5\x2d\xa7\x3d\x60\xbd\xee\x8a\x26\xb2\xfd\x13\x71\x87\x29\xef\x25\x1f\x7a\x1d\x40\x6f\xef\x93\xf7\xe7\x85\x61\xef\x97\xb0\x33\xb2\x9c\x4b\x63\xb0\xbe\xa9\xd5\xcf\xb1\x66\xa2\xd3\x3b\x09\x57\x1b\x2d\xb2\x83\xcf\x16\x91\x75\x1f\x5e\xf9\x44\x64\x4a\x2f\xf3\xc9\x1e\xff\x6f\x00\x00\x00\xff\xff\x65\xbc\xb4\xb0\xf3\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2547, mode: os.FileMode(420), modTime: time.Unix(1530105051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x8f\xdb\x36\x13\xbe\xef\xaf\xe0\x4b\x20\xc0\x9b\x83\x24\x34\x08\xda\xa2\x90\x5d\xa4\x87\x6d\x52\x38\xed\x22\xd9\xe6\xea\x1d\x8b\x23\x99\x59\x8a\x54\x49\xca\x1f\x10\xfc\xdf\x0b\xea\xcb\xf6\x46\x5e\x4b\x8e\x55\xec\x1e\x16\x30\xc5\xf9\x78\xe6\x19\xce\x0c\x59\x14\x05\xc3\x98\x4b\x24\x34\xe6\xc2\xa2\x9e\x47\x4a\xc6\x3c\xa1\xbb\xdd\xee\x26\x64\x7c\x45\x22\x01\xc6\x4c\xa8\x85\x85\x40\x4f\xa3\xc9\x94\x34\x7c\x85\x74\x7a\x43\x08\x21\x61\xb9\x7e\xb4\x89\x54\x5b\x8d\xd5\x3c\x43\x56\xff\x5a\x28\xcd\x50\x23\xab\xc5\x2a\xd1\x25\x02\xdb\xff\xae\xd6\xf4\xf1\x42\xb5\xc8\x48\xa4\x84\xc9\x40\x4e\xe8\x1b\x3a\x0d\x03\xcb\x3a\x77\x4d\xff\x84\x14\x4f\x7f\xfd\x02\x22\xef\xf8\x1c\x06\x87\x46\xc3\xe0\x89\x5b\xa1\x5d\x28\xb6\xed\xe1\x66\x51\x14\x3c\x26\xf8\x0f\xf1\xef\xb7\x19\x12\x6a\xd7\xdc\x5a\xd4\x65\x24\xbb\x20\x69\xb5\xae\x20\xfd\x44\x8f\xe0\xfd\x8e\x12\x35\x88\x6e\x1c\x45\x51\xa0\x30\x48\x8e\x2c\x19\x01\xd1\xe3\x79\x3b\x6f\x06\xda\x91\xec\x84\xca\xa9\xc5\x8d\x25\x19\x38\x78\xd2\x9c\x0e\xf8\x37\x8b\xb5\x66\xc1\x8d\xbd\xc7\x8d\x5d\xa8\x0d\xf1\x6f\xcb\xb4\xf3\xef\x6a\x6d\xe4\xff\x99\xe6\xd2\xc6\x84\xbe\x32\xaf\x0c\x25\xfe\x9d\xc6\x98\x6f\x08\xf5\xab\xfc\xf4\x1b\xb3\xf4\x35\xa1\xdd\x98\xcf\x30\x4c\x9e\xc9\xb3\xe9\x12\x0c\x49\x91\x71\x20\xbf\x0e\xc7\xb5\x50\x4a\x7c\x46\x81\xd1\x11\xb2\xf7\x60\x3e\x96\x1a\xcf\x21\x5b\x82\x99\x97\xb6\xe9\xeb\x4b\x71\xf5\xcd\xc1\x93\xf8\x73\x2d\xae\x4c\xec\xdf\x9f\x66\xbd\xb9\xcd\xb5\x98\x8f\xcb\xaf\x46\xbb\x46\xb4\xc8\xae\xc7\xef\xa7\x56\xe5\x39\x78\xad\xf1\xcb\x09\x3e\x09\x2c\x86\x95\xd2\xdc\x22\xb1\x4b\x8d\x66\xa9\x04\x1b\x8e\xcf\x56\xd4\xfd\x15\x7f\x90\xf6\xce\xea\x16\xe1\x6d\xad\xfb\xbe\x51\x7d\x16\x69\xe3\xcd\xbc\xf5\x66\x04\xc8\x7b\x2e\x47\xc0\xdc\xb2\xda\x1f\x74\xeb\xcf\xa8\xa8\x3b\x81\x08\x90\x49\x0e\x09\x56\x88\xd2\x4c\x80\x45\x42\xab\x56\x3e\xe7\x32\x56\x94\xd0\xa5\xb5\x99\xf9\x25\x08\x18\xae\x50\xa8\x0c\xb5\x5f\x57\x07\x3f\x52\x69\x80\x32\x60\x2a\x32\xfb\xaf\x5e\x6e\xb9\xe0\x96\xa3\x09\x4c\x9e\x65\x4a\x5b\x64\x5e\x63\xc7\x04\x90\x71\x4f\x63\x8c\x1a\x65\x84\x41\x82\xd6\x5b\xa2\xc8\xf6\x1b\xfc\xa5\x4d\x45\xcf\xf3\xfb\x2c\xb4\x90\xcb\x2c\xb7\x24\x56\x3a\x9d\x50\xb5\x42\xbd\x76\x89\x45\x89\xdd\x66\x38\xa1\x8e\x3e\x4a\x24\xa4\x38\xa1\x45\x51\xd4\x0c\x3d\x38\x86\x1e\x5a\x86\x1e\x1a\x86\x9c\x77\x0f\xbb\xdd\x8e\x92\x95\x9b\x05\x4a\x91\x86\xf0\x19\xc8\xc4\x7d\xea\x70\xad\x5f\xe1\xed\xe8\x97\xe1\xff\x3c\x8f\x7c\xe1\x86\x2b\x49\xde\xdd\x7d\x20\x9e\xd7\x73\xdc\x69\x7b\xf6\xcf\x1d\xfe\xb8\xbf\x5a\x69\x0f\xba\x23\xa1\x72\xe6\x27\x4a\x25\x02\x4b\xa6\x57\xa5\x68\xc5\xf6\x9e\x41\x8d\xc6\x06\xab\x1f\x02\x9e\x56\xf4\x4a\xa9\x2c\x58\x1c\xc6\xe0\xd1\x7c\x31\x83\x05\x9e\x98\x2e\x86\xf6\x90\x0a\xad\x5f\x6a\x3c\x7b\x0c\x2b\x7c\xbe\x70\x9b\x47\x69\x22\x7b\x76\xde\xd2\xe9\x2d\x44\xcf\x8c\x9c\x20\x13\xd4\x44\xf0\x47\x14\x7c\xa9\xd4\xd0\xfa\x74\xcd\xdc\xaf\xc3\x12\x43\x84\x7e\xe9\xd6\x7c\xef\xd6\xa9\x33\x51\xc7\xdd\x61\xf4\xdf\x39\x99\x59\x2b\x72\xf9\x51\x39\x59\xd9\x16\x22\xd7\x1a\xd9\xcb\x0b\x57\xed\xd8\xd3\x80\x3d\x9c\x89\xd8\x6f\x95\xd8\xa8\x31\x73\x77\x95\x35\xc2\x0b\xcc\xb1\xc6\xb3\x81\x69\xf6\xbe\x16\x1b\x35\x6a\x5f\xd5\xf6\xe5\x05\xec\xab\xda\x0e\x8c\xd5\x1f\x6a\x3b\x66\x98\x8e\xaa\xb9\x2b\xc9\x57\x2d\xe6\x6e\xb9\x6f\x2d\x2f\x83\x3a\x4a\x29\x3f\x6e\x58\x92\xa5\xa0\x1f\xaf\xdc\xb3\x2a\xa5\xfd\xdb\x56\xb5\xff\x3f\x80\xab\x12\x75\x5d\xa8\x2a\x51\xbd\x61\xaa\x44\x7d\x1f\x44\x37\x5a\xcd\x9a\xb1\xf7\xb2\xe1\xea\xc9\x83\x48\x27\xe4\xd9\x80\xc9\xfa\x9b\x51\x4b\x82\xcd\x35\x88\x76\x2a\xee\x1c\xba\x06\x0e\xc9\x29\x97\xc4\xa0\xb4\x3c\x45\x79\xc1\x89\x6c\xef\x3b\xb7\x42\x81\xfd\xf1\xed\xe1\x9d\xa7\xc1\xea\x7f\xe4\xf2\x73\x63\xe2\x2c\xa3\x0d\x38\x3f\xe5\x72\xde\x7a\x36\xc2\xcd\x27\x85\xcd\xf8\xc8\x61\x73\x09\x72\xd8\x7c\x2f\xf2\x30\x38\x78\x67\x0c\x83\xf2\xd5\x74\x7a\x13\x06\x8c\xaf\xa6\x37\xfb\xdb\xc5\xcd\xc1\x83\xed\x61\x12\x96\xcf\xb5\x40\x96\x1a\xe3\xaa\x5d\x94\xed\xc3\x82\x4e\xd0\x4e\xe8\x7c\x21\x40\x3e\x52\xa2\x51\x4c\xa8\x54\x2a\x43\x89\x9a\x48\x55\x66\xa2\x46\xdd\x3c\xe6\xba\xa3\xd0\xbc\xe5\xc6\x40\x62\xf0\x44\xe2\xfe\x3b\x13\x5e\xc4\x75\x24\x90\x4e\xc3\xc0\x6d\x73\xbe\xc1\xa1\x67\xff\x06\x00\x00\xff\xff\x67\xa3\xeb\xc0\x4a\x16\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5706, mode: os.FileMode(420), modTime: time.Unix(1530113468, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigModalTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x51\x6b\xdb\x30\x10\x7e\xdf\xaf\x38\x6e\x50\xda\x07\xdb\x2b\x7d\x5b\x6d\xc3\x18\x0c\x0a\x5b\x29\x6c\xef\x45\xb1\xce\x89\x40\x96\x8c\x2c\xa7\x31\xc6\xff\x7d\x58\x8a\x53\x77\x95\x53\x77\x0f\x63\x79\x48\xa2\xcb\xdd\xa7\xef\xbe\x2f\x77\xee\xfb\x9e\x53\x29\x14\x01\x56\x9a\x33\x89\xc3\x30\x7c\x00\x00\x48\xb9\xd8\x43\x21\x59\xd3\x64\xfe\x17\x28\x19\x27\x04\xc1\x33\xec\xfb\xde\x50\x2d\x59\x41\x10\x3f\x18\x2a\xc5\x01\x30\x46\xc0\x68\xac\x8e\x4a\x21\x2d\x99\xa8\xef\xfb\xf8\x4e\x71\x3a\x0c\xc3\x80\x60\xd9\x46\x8c\x87\x0c\xa3\x6b\x04\xa3\x25\x65\xc8\x05\x93\x7a\x8b\xc0\x8c\x60\x91\x64\x1b\x92\x92\xf8\xa6\xfb\x0b\xfc\xc8\x0a\x2b\x09\xa1\xb1\xdd\x08\xac\xf7\x64\x4a\xa9\x9f\xa2\xee\x73\x53\x18\x2d\x25\xe6\xae\xa7\x60\x5f\xd1\x44\xe3\x48\x4a\x17\x6d\x45\xca\xce\x4a\xc2\x65\x85\x56\xf6\x75\x5e\x38\x77\x47\x8c\x93\x09\xa4\xba\xf4\x4d\x6b\xad\x56\x60\xbb\x9a\x32\xf4\x07\x9c\xea\x0b\xa9\x1b\x42\xe0\xcc\xb2\x88\x8b\xa6\x12\x27\x50\xcc\x2f\xac\xa8\xa8\xb9\x4d\x13\x5f\xb3\x80\xbe\xbb\x79\xc9\xe5\x28\xd5\x5a\x1f\x1f\x03\x3a\xe7\x69\x53\x33\x35\xc1\x3a\xe7\xc0\xbd\x47\xb5\x11\x15\x33\x1d\xe6\x7d\xdf\xbb\x5c\xb8\x0c\xde\x00\x78\x35\x0c\x43\x9a\x8c\x38\x39\x8c\x57\xdc\xb3\x8a\x5c\x68\x77\x13\x50\x34\xe1\x62\xbf\x46\xe8\x8d\xe6\xdd\x92\xcc\xbb\x9b\xfc\xa7\x6e\x4d\x41\xe1\x3b\xc6\xd7\xc8\x9a\xaa\x5a\x32\x4b\x80\x8d\x4b\x7e\x2c\xb4\x2a\xc5\x16\xe1\x52\xd1\xd3\x0f\x56\x03\xfe\xea\x6a\x42\x88\xc7\x0f\x40\x8f\x88\x10\x7f\x75\x69\x77\x96\x2a\x40\xdf\x29\x4e\x2d\x5f\x4d\x33\x15\xa2\xf4\xcd\xa9\xbc\x92\xd2\xd1\x92\xf3\x94\x3c\xe2\x0b\x4a\xb1\x8f\xbd\x8f\xd9\x97\xc2\x0a\xad\x56\x32\x63\x2e\xf9\x0d\x66\x1e\xf1\x25\x33\x1f\x5b\xc7\x6c\xf5\xdf\xa0\xd4\xda\x2e\xcf\x9b\x62\xfb\xd9\xce\xc9\x30\x8e\xe3\x85\x54\x80\xb4\x95\x13\x74\xcd\xb6\x8b\x98\x27\x45\x44\x09\x5b\x0b\x7e\x60\xe0\xd3\x92\xbc\x33\x7c\x29\x4e\xf8\x86\xf6\x42\xb7\xcd\xd9\x2b\x4e\x75\x2c\xb8\x13\x7c\xd0\xea\xed\x76\xdc\x65\xc7\xd8\xce\x50\x99\xe1\xc7\xb5\x5b\x95\x71\x3e\x35\x10\x5d\x8f\xcb\x7b\x0d\x1f\xc7\xc9\x6d\x05\xa7\xec\x4e\x70\x4e\x2a\x43\x6b\x5a\xc2\xfc\x42\x32\x63\x6e\xa7\x69\x7f\x30\xb4\x5f\xd3\x61\xc2\xde\xba\x38\x4d\xa4\x78\xc3\x0f\x52\xfc\xbc\x09\xde\x33\x79\xf2\xec\xd2\xb7\x6f\xa9\xfa\x4e\x0a\xa2\xeb\xc5\x11\x99\xd1\x78\xf6\x50\xd1\x21\xf4\x44\x08\xd4\xfc\x13\xff\xde\x65\xdf\x3d\x1d\xec\x19\x0f\xcd\xcc\xc3\xff\xc3\xbe\x34\x69\xe5\xc2\x88\x27\x8a\x85\x16\xc5\xeb\xfd\xf1\x47\x68\x76\x3c\x7e\x7d\x26\xf1\x3b\x00\x00\xff\xff\x1b\x8c\x03\x99\x2b\x09\x00\x00")

func assetsTmplConfigModalTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigModalTmpl,
		"assets/tmpl/config/modal.tmpl",
	)
}

func assetsTmplConfigModalTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigModalTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/modal.tmpl", size: 2347, mode: os.FileMode(420), modTime: time.Unix(1530109394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigSourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x4f\x6f\xe3\x2c\x10\xc6\xef\xf9\x14\x23\xa4\x4a\xed\xa1\xf1\x17\xf0\x9b\xf7\x50\xed\xa1\x97\xdd\x6e\x52\xed\x35\x22\x30\x6e\xd0\x12\x70\x61\x9c\x26\xb2\xf2\xdd\x57\x36\x6c\xfe\x15\xdc\x55\xda\xaa\x47\xc3\xcc\x3c\xcf\xfc\x6c\x3c\xb4\x6d\x2b\xb1\x52\x06\x81\x79\xdb\x38\x81\x73\x61\x4d\xa5\x9e\xd8\x6e\xb7\x1b\x95\x52\xad\x41\x68\xee\xfd\x7f\x8c\xf8\x42\xe3\xad\x43\x5f\x5b\xe3\xd5\x1a\xd9\x64\x04\x00\x50\xf6\xeb\x27\x41\x10\x42\x3d\x39\x55\xa3\x8c\x4f\x0b\xeb\x24\x3a\x94\x31\x2d\xa4\x2e\x91\xcb\xc3\x73\x58\x73\xa7\x0b\x61\x51\x4e\xbe\xf3\x15\x96\x05\xc9\xf4\xee\x2f\xae\x9b\xc4\x76\x59\x1c\x97\x2b\x8b\x33\xc1\x92\x16\x56\x6e\x4f\x53\xda\xb6\x55\x15\xe0\x33\x8c\x1f\xb7\x35\x02\xa3\x17\x45\x84\xae\xc7\x71\xae\x1c\x62\xad\x83\xeb\x2e\xfe\xc1\x61\xa5\x36\xfb\x8c\x31\xa9\x15\x6a\x65\xd0\xb3\x9b\x74\x40\xc5\xd7\xd6\x29\xea\x02\x52\xd5\xb3\x38\x8e\x1b\xf7\xc2\x21\x1a\x30\x7c\x85\x3e\x8d\xe7\x38\x3a\xbb\x19\xbb\xd1\xca\xd3\x23\x6e\x68\x61\x37\x30\x9e\xf5\x9f\xc3\x78\xd6\x2b\x74\xf8\x3d\x5c\xd7\x4e\x19\xaa\x80\x5d\xf9\x2b\xcf\x0e\x1d\x8d\x83\x8d\x79\x6f\x83\xdd\x00\xa3\x6d\x8d\xbc\x83\x7d\x4b\xfc\xc9\x2b\x53\x37\x94\x24\xb8\x37\x97\xb5\x7e\xfa\x0a\x8f\xbc\xa2\x91\xf9\x77\x92\xc2\xed\x91\x3b\xb1\x44\x9f\x35\xf2\x26\xec\xe7\x06\x9d\xfa\x2c\xce\x3f\x43\xf1\x3c\xe3\xa8\xde\xe1\xfd\x72\x96\x87\x6f\xfb\x62\x98\xb8\x11\xba\x91\x08\x0e\x6b\xdd\xf5\xfd\xff\xfb\xb1\x2e\xac\xd5\x33\xd4\x28\x4e\xc0\x7e\x0b\x42\xd3\xa8\x93\xe5\x1b\x0d\xcd\xa3\xa1\xfc\xa1\x84\x0b\x20\xff\x13\x12\x65\xfe\x22\xa1\x17\x44\xfa\x44\x26\xf7\x41\x69\x4a\x03\x3c\xa2\x9b\xb9\xa3\x0f\x66\xf1\x35\x87\xd7\xa1\x6f\x34\x41\xf7\x67\x7a\x3f\x55\xff\x8a\xe8\xb4\x2f\xdf\xcf\x8c\x2c\xd1\x60\x61\xde\x59\xe8\x4f\x31\x30\x87\x02\x0d\x31\x60\x2b\xb5\x41\xc9\x80\xd5\xb6\x6e\x34\x4f\x8f\x9b\xbd\xc1\x0f\xe3\x9d\x85\xd6\x31\xa8\x90\xc4\x12\x84\x6d\x0c\x0d\x28\x0e\xc1\x6a\xdb\x96\xc2\x5f\xee\x47\x75\x6f\xe8\x81\xdc\x1e\xd7\x5d\x57\x36\x4f\xaa\x57\x1d\x18\x8b\xe9\x8b\xc0\xab\xee\xd3\x9d\x9f\x8f\x78\xaf\xb9\xf8\x9d\x24\x3e\xc8\x47\x2c\xb9\x31\xa8\x07\xc6\xc1\x5b\x70\x52\x63\xe0\x2e\x56\x1d\x60\x13\x23\x06\x07\xc1\xe5\x84\xca\xe2\xe8\x56\x54\x16\xfd\xed\x6d\x32\x2a\x0b\xa9\xd6\x93\xd1\x21\xfc\x4f\x00\x00\x00\xff\xff\x17\x84\x37\xbb\x38\x0a\x00\x00")

func assetsTmplConfigSourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigSourceTmpl,
		"assets/tmpl/config/source.tmpl",
	)
}

func assetsTmplConfigSourceTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigSourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/source.tmpl", size: 2616, mode: os.FileMode(420), modTime: time.Unix(1530112784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTwitter_confTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x8b\xdb\x30\x10\xbd\xe7\x57\x0c\xba\xaf\x0d\x3d\xcb\x86\x42\x2f\xbd\x6c\x0b\xfd\xb8\x2e\x8a\x34\xde\x88\xca\x92\x91\xc6\x76\x82\xf0\x7f\x2f\xb2\xdd\x5d\x67\xa3\x4d\x5a\x68\x0b\x9b\x53\xf4\xe6\x49\x6f\xde\x3c\x33\x31\x46\x85\x8d\xb6\x08\x8c\x46\x4d\x84\xfe\x41\x3a\xdb\xb0\x69\x9a\x76\x5c\xe9\x01\xa4\x11\x21\x54\x8c\xc4\xde\xe0\x9d\xc7\xd0\x39\x1b\xf4\x80\xac\xde\x01\x00\xf0\x19\x3f\x23\xc1\x42\x0d\xe4\x75\x87\x6a\x3d\xed\x9d\x57\xe8\x51\xad\xd7\x96\xab\x07\x14\xea\xf9\xbc\x60\xfe\x1c\x58\x40\x05\xd2\x99\xd0\x09\x5b\xb1\x77\xac\xbe\x17\x2d\xf2\x92\x54\x96\x59\x7f\x17\xa6\xcf\x94\x79\xb9\x7d\x9a\x97\x2f\xc4\x39\xed\x9d\x3a\xfd\x66\x33\xde\x8d\x4f\xcd\x7c\xb4\x84\x5e\x48\xd2\xce\xbe\xde\x53\x7b\x0a\x68\x9a\xd7\xeb\x17\x60\xfa\xc5\x18\xe5\x01\xe5\x8f\xbd\x3b\x42\xb1\x91\x29\xde\x1b\xe3\xc6\x2f\x68\x9a\xa7\xc8\x0a\xbd\x29\x8b\x54\x7e\x48\x82\x73\x88\x17\x7a\x37\x46\x73\xcd\x79\xed\xe8\x80\x1e\xfa\x80\x3e\xfc\xb9\x1b\xa3\x03\x7d\xc5\x23\x5d\x18\xfa\x96\xde\xcb\x9b\x99\xa5\x18\x30\x3a\x75\x28\x52\x64\x77\x24\x1e\x83\xb6\x5d\x4f\x7f\xdd\xdd\x59\xae\x9f\x8d\x90\x08\xf7\x8e\x74\xa3\xa5\xf8\xd7\xf1\x6e\x75\x8a\x59\x3a\x97\xb2\xdd\xb2\xba\x99\xf5\x36\xc2\xce\xd8\x7b\x91\x79\xc6\xda\xff\x8c\xbe\xfe\x94\xbc\x5e\xb1\xd9\x39\x63\xb4\x7d\x04\xd5\xfb\x1b\x1f\x43\x76\x20\x7c\x6e\x1b\x1a\xe7\xdb\x8a\xb9\x01\xfd\xe8\x35\x21\x83\xe4\xad\x62\x84\x47\x62\x60\x45\x9b\xfe\xaf\x03\xf9\x25\xc4\x60\x48\x0b\xad\x62\x31\xc6\xe2\xc3\x0a\x4e\xd3\xc4\x32\xea\xb7\x97\xde\xf3\x92\xe3\xe5\xbc\x98\xeb\x1d\x2f\x95\x1e\xea\x5d\x8c\x11\xad\x4a\x73\xfd\x19\x00\x00\xff\xff\x42\xf3\xa8\x8f\x12\x06\x00\x00")

func assetsTmplConfigTwitter_confTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTwitter_confTmpl,
		"assets/tmpl/config/twitter_conf.tmpl",
	)
}

func assetsTmplConfigTwitter_confTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTwitter_confTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/twitter_conf.tmpl", size: 1554, mode: os.FileMode(420), modTime: time.Unix(1530106127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x8f\xdb\xb6\x13\xbd\xef\xa7\x98\x1f\x7f\x39\x64\x81\xda\x6a\x92\x5b\x2a\x1b\x28\x36\x69\x11\xa0\x49\x83\x66\x7b\xe8\x69\x41\x89\x63\x9b\x1b\x8a\x14\xc8\xb1\xbd\xae\xe0\xef\x5e\x50\x94\x64\xeb\x8f\xb5\xbb\xce\x1f\x04\xd8\x1c\xb2\x16\x25\xcf\x3c\xbe\x37\x6f\x68\x4d\x51\x14\x02\x17\x52\x23\xb0\xd4\xe8\x85\x5c\xde\x10\x4f\x14\xde\xac\x90\x0b\xb4\x6c\xbf\xdf\x5f\x00\x00\xc4\xe4\x17\xe6\xe5\xe7\x70\x6d\x0f\x17\x61\x41\xcc\x3f\xf0\x0c\xe3\x88\x44\xff\xce\x1b\x24\x2e\x95\x1b\xbe\xd9\x5e\x8d\xa3\x3a\x74\x1c\x55\x49\x8b\xa2\x40\x2d\x3c\x94\x8b\x3e\x5c\xc1\x89\xdf\x58\xb3\x3d\x82\x7a\x04\x2d\x96\x3a\x5f\x13\x2c\x8c\xcd\x66\xcc\x6c\xd0\x6e\xad\x24\x64\x40\xbb\x1c\x67\x6c\x25\x85\x40\xcd\x40\xf3\x0c\x67\xac\x28\x8a\xe9\x47\x8b\x0b\x79\xb7\xdf\xef\xa7\x02\x15\x12\x0a\x06\x1b\xae\xd6\x38\x63\x0b\xae\x1c\xb2\xe8\x98\x82\xee\x5e\x46\x73\x11\xde\xd1\x70\x26\xbf\xd6\xa4\xf1\xb7\x3c\x8f\xfb\xfd\xbe\x95\xac\xcd\x51\x2f\x75\xb2\x26\x32\xba\x4a\x15\x2e\x18\xa4\x8a\x3b\x37\x63\x09\x69\x48\x48\x4f\x72\x2b\x33\x6e\x77\x0c\x3c\x65\x13\x32\xcb\xa5\xc2\x19\xcb\x8c\xe0\xaa\x5e\xe3\x76\x89\x34\x63\xff\x2f\x8a\xc2\x62\xae\x78\x8a\x50\x01\x05\x36\x65\xc0\x26\x9e\xe5\xc9\x42\x2a\x42\x3b\xf1\x50\xdf\x69\x81\x7e\x13\xac\x8d\xc7\xff\xbb\x52\x32\xfd\x0c\x2b\xb4\xd8\x86\x1a\x05\x78\x5f\x77\x6f\x82\xeb\x25\x5a\x06\x46\xa7\x3e\xed\x8c\x05\xf9\xfe\x32\xdb\xe7\xb4\x92\xee\x92\xcd\xdf\x94\x0b\x63\xd9\x43\xe5\x8d\x16\x9b\xc6\xed\x7d\x05\xd7\x83\xef\xeb\x01\x78\x4a\xd2\xe8\x20\xef\xaf\xe5\x67\x4f\x1a\x64\x48\x2b\x23\x66\x2c\x37\x8e\x06\x28\xac\x2a\x2a\xec\xdc\xad\x93\x4c\x52\x53\x28\x1f\x70\x7b\x52\xe1\xa8\x03\x21\xf2\x18\xc6\x08\x1f\x5b\xb9\x9f\x96\x92\x89\xf8\x7f\x6f\xfe\xbc\xba\xfe\xe7\xe3\x5b\x58\x51\xa6\xe6\x17\xb1\xff\x03\x8a\xeb\xe5\x8c\xa1\x66\x65\x04\xc2\x2c\x57\x9c\x10\x58\xd5\x5e\x60\xda\x90\x98\x18\xb1\x3b\x82\xe0\x52\x2b\x73\x02\x67\xd3\x19\x8b\xb8\x73\x48\x2e\xba\x75\x51\xa5\x43\x82\x0b\x63\x71\x7a\xeb\xd8\x3c\x8e\xc2\xa3\xf3\x8b\xc3\x97\x85\xdc\xd4\xd4\xa4\x46\x13\x97\x1a\x6d\x87\xde\x16\x1a\xcd\x37\x09\xaf\xd1\x0c\xa8\x27\x45\xcb\xd0\xb5\x98\x15\x9a\xa8\xa3\x23\xa0\x4e\x83\x64\xd9\x5a\x91\xcc\xb9\xa5\x52\x80\x89\xaf\x1c\x0f\x38\xa8\xd1\xce\x73\x04\xf9\x76\x9d\x25\x86\xac\xd1\x43\x15\xb1\x7a\x31\xbf\x2a\xb3\xae\x2d\xf7\x28\xe2\x68\xf5\x62\xe8\xb1\x97\x75\x34\x85\x5c\xb0\xf9\xd5\xda\x91\xc9\xe4\xbf\x08\x3b\xb3\xb6\x60\xb6\x1a\x12\x43\xc0\x9d\xbf\x06\x8d\x28\xe2\x68\xf5\xb2\x5b\x36\x42\x6e\x3a\x38\x8b\xa2\x90\x0b\x98\xbe\x47\xe7\xf8\x12\x6b\xf1\x5a\xbb\xf0\x64\xa1\xb5\xc6\x4e\xb2\xf0\x54\x53\xa6\x5c\xa1\x25\x28\xff\xaf\x0d\x3b\xf7\x86\x38\x44\xab\x52\x76\x32\xd6\x85\xd7\xde\xe1\xab\xf9\xf5\x56\x12\xa1\x85\x6b\x99\xa1\x92\x1a\x5d\x1c\xad\x5e\xcd\x4f\xf2\x5a\x1e\x6c\x13\x8b\x2e\x37\xda\xc9\x0d\x0e\xd1\x5b\x3e\xd3\xfa\x02\x84\xaf\x39\xb2\x32\x47\x51\x5d\x25\xc6\x0a\xb4\x28\x06\x42\xf4\x8a\x6b\xec\x58\xed\xe7\x6f\xdb\x60\x20\xb0\xf5\xc4\xc1\x33\xe9\x1b\xef\x4f\xf0\x8c\xaa\xbd\xc3\xeb\x19\x4c\x43\x65\x4c\x2b\x5e\xa6\x0d\x2f\xa7\xd2\x8d\xe1\x6d\xda\x1c\x3c\xd7\xb8\x7d\xcf\x73\x60\xe1\x24\x60\xc0\xa8\x4a\x50\x27\x77\x0c\xd8\x87\xf2\x14\x6b\xf0\x94\x87\x18\xb0\xf2\x7c\x60\x15\xdc\xcb\x31\x1c\x07\x9d\x1f\x83\xb2\xd5\x90\x0f\x48\x43\x8b\x65\xd0\x58\xb4\x41\x1a\x71\x21\xd8\x49\x20\x71\x74\x42\x80\x38\x2a\xf5\x7b\x90\x41\xbe\x96\x42\xad\xfd\x56\xc7\x74\xb3\xc3\xeb\x5d\x8e\x07\x25\x18\xb0\x10\xf9\x1d\x61\x76\xa4\x42\x47\x00\x60\xfe\xfe\x1f\xfe\x27\xcf\x73\x85\x1a\x9e\x9d\xc4\x73\x79\x86\xda\x3d\x56\x1f\x60\xdd\xdf\xf8\xc6\xf8\xa6\xfa\x14\xad\xbb\xa8\xf6\x3e\x54\x18\x0d\x2f\xdf\xca\xba\x75\xf2\x23\x31\xeb\xa5\x1f\xcc\xba\x0d\xd2\xef\x6f\xdd\xb3\x15\xfa\x02\xeb\x36\x39\x1f\x69\xdd\x06\xcf\x90\x75\xef\x53\xfb\x1c\xeb\x7e\x42\x6e\xd3\xd5\x93\x74\xae\x2b\xb7\x3e\x54\x15\x35\x29\xdf\xca\xb6\xae\x8a\x7f\xd0\x31\xac\xfc\x60\x9e\xad\x61\x7e\x7f\xcb\x9e\x27\xcd\x17\xf8\xb5\x4a\xf8\x48\xb7\xd6\x60\x86\xcc\x3a\xaa\xf1\x39\x4e\xfd\x1d\x35\x5a\xae\xe0\x13\x12\x49\xbd\x1c\x70\x6c\x6b\xff\x15\x8e\x1b\xaf\x25\xeb\xd2\x38\x98\xe8\x93\xe2\xe9\x67\xa8\x7e\xc6\x3f\xc5\x86\x90\xb9\xe5\x71\xc9\x95\x7c\xd4\xaf\x35\x5f\xbd\x17\xb8\x32\x7a\xf5\x72\x75\x54\x25\x99\x5b\xfe\x60\x6d\xa0\xc6\xf8\xfd\xdb\xc0\xa3\x05\x79\x48\x07\x28\x89\xef\xfa\xdf\x67\x7a\xa0\xf9\xdb\x28\x2e\x1f\x21\xe9\x83\x5d\x3f\x3a\x82\xec\x4c\x90\xfe\xce\x85\xdf\x6d\x7a\x3c\x4e\xe8\x8d\x94\xdc\x3a\x4d\xd1\x39\xd6\x9d\x57\xac\x6c\x77\xa5\x99\x94\x84\x80\x93\x85\x54\x38\x59\xe7\xca\x70\x31\xf1\xf7\xfa\x73\x13\xff\xc4\x99\xc3\x93\x7e\xe6\x7b\x82\x2f\xf1\xb1\x03\xb6\xb7\x77\xb9\xb1\xe5\x88\x84\xc3\xf4\xd6\x19\x0d\x3e\x64\x9f\xa0\x2c\x0c\x20\x71\xc1\xd7\x8a\x18\x38\xda\x95\x63\x55\x6e\x97\x52\x4f\x12\x43\x64\xb2\xd7\x2f\x7e\xce\xef\xd8\xf8\x50\xae\x27\xdf\x49\x1a\x07\xd1\xbe\xcb\x4a\xb4\xe5\x74\xa7\xa5\xe8\x83\x50\x9f\x03\xe3\x94\xd4\xfe\x73\x19\xa0\x46\x1a\x00\x84\xc9\x77\xb6\x4b\x0c\x4d\xab\xb1\x61\xcd\x95\x90\x2e\x57\x7c\xf7\x5a\x6a\xff\x2e\xf9\x4b\x97\xba\xc0\xdd\x45\xa7\x01\x34\x97\xe3\x93\x42\xbe\xf0\x47\x6a\x7b\x50\x18\xa2\x84\x9e\x13\x47\x61\x5c\x79\x30\xd4\x7f\x01\x00\x00\xff\xff\xd1\x6b\xac\x47\x12\x19\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 6418, mode: os.FileMode(420), modTime: time.Unix(1530111611, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x51\x73\xe2\x36\x10\x7e\xcf\xaf\xf0\xe8\xb5\x45\xc2\x40\x0f\xda\xc1\xcc\xa4\xb9\x1e\xe1\xae\xb9\x4b\x13\x92\x9b\xf4\x4d\x96\xd7\xb6\x8c\x2d\x39\xda\x35\xc6\x65\xf2\xdf\x3b\x86\x04\x68\x4a\xa6\x74\x26\x6f\xda\x5d\xfb\xfb\xf4\xed\x7e\xa3\x5d\xaf\xd7\x11\xc4\xda\x80\xc7\x52\x90\x11\x38\xf6\xf4\xf4\x74\x36\x6e\xcf\x93\x33\xcf\xf3\xbc\x71\x01\x24\x3d\x95\x4a\x87\x40\x01\xbb\x9b\x7f\xea\x8c\xd8\x61\xc9\xc8\x02\x02\xb6\xd4\x50\x97\xd6\x11\xf3\x94\x35\x04\x86\x02\x56\xeb\x88\xd2\x20\x82\xa5\x56\xd0\xd9\x04\x3f\x7a\xda\x68\xd2\x32\xef\xa0\x92\x39\x04\x3e\x9b\x9c\x6d\x91\x48\x53\x0e\x93\xab\x26\xb4\x34\x16\xdb\xe0\xb9\x92\x6b\xb3\xf0\x1c\xe4\x01\x43\x6a\x72\xc0\x14\x80\x98\x97\x3a\x88\x03\x96\x12\x95\xf8\x8b\x10\x85\x5c\xa9\xc8\xf0\xd0\x5a\x42\x72\xb2\x6c\x03\x65\x0b\xb1\x4b\x88\x3e\xef\xf3\xa1\x50\x88\xfb\x1c\x2f\xb4\xe1\x0a\x91\x79\xda\x10\x24\x4e\x53\x13\x30\x4c\x65\x7f\x34\xe8\xfc\x7a\xff\xa0\xf5\xed\xec\x13\x7c\xf1\xa3\x69\xf1\xf9\xe6\x7c\xd1\xa8\xea\xf2\xfc\xf2\x26\xe9\xf7\xbe\x15\x77\xaa\xae\x87\xd6\xf4\x6f\x1e\xa2\x64\x70\x2f\x7f\xb8\x2e\x6e\xe7\xf8\x97\xf8\xf2\x61\xb4\x0c\xa3\xdf\xb2\x74\x50\x31\x4f\x39\x8b\x68\x9d\x4e\xb4\x09\x98\x34\xd6\x34\x85\xad\xf0\xa5\x71\xa7\x88\x52\x91\xc9\x90\xab\xdc\x56\x51\x9c\x4b\x07\x1b\x45\x32\x93\x2b\x91\xeb\x10\x45\x6c\x0d\x75\x64\x0d\x68\x0b\x10\x03\xfe\x81\xf7\x37\xf2\x0e\xd3\x3b\x85\x27\xb0\x0a\x89\x08\x84\x1b\x0c\x55\x21\xd9\xe2\xd4\x3f\x4f\xbc\x2f\x35\x25\xc8\xd6\x56\x3c\xc3\xce\x6e\x08\x9d\x96\xcf\xe7\x3d\xee\xef\x3f\xc8\xf0\xe0\xe2\x5b\x7e\x54\x4e\x97\xe4\xa1\x53\x7b\xbe\x16\x9a\x27\xd6\x26\x39\xc8\x52\xe3\x2b\xba\xec\xb1\x02\xd7\x08\x9f\xfb\x3d\x3e\x78\x8e\x36\xb0\x19\xb2\xc9\x58\x6c\x01\x27\x6f\xa3\x9f\x6a\xa9\xec\xb5\xa3\xb2\xa3\x86\x9a\xab\x9f\x66\x7f\xe8\xb0\xdb\x1b\x3e\x2e\x9b\xec\xf6\x2a\xbe\xcc\xbe\x5d\xc9\xdf\x17\x71\xf5\xfd\x7e\xf5\xe7\xea\xee\xda\x5c\x7c\x3e\x1f\xe6\xbd\xe2\xe2\xfb\xd7\x59\x39\xfd\xb9\x98\x5e\x7c\x1c\xd5\xd3\xaf\x33\x75\xfd\x71\x38\x5f\xc9\xb7\x0d\xb5\xd7\xf2\x6e\xa3\xda\x4f\x87\x64\x82\xda\x94\x15\x89\x2e\x1f\xf1\xee\xb1\xca\xa1\x4d\x8e\x35\xf2\x5d\xb9\xfe\x3d\xc0\xb7\x89\xcb\x5c\x52\x6c\x5d\xc1\xa9\xd6\x44\xe0\x36\xc4\xb5\x8e\x12\x20\xdc\x4c\x69\xf7\xa6\x55\x14\xb7\x6f\xda\x29\xa0\x2f\x58\x89\xa6\xb4\x0a\xb9\xb6\xff\xf0\xb5\x70\x90\x83\x44\x40\x91\x4b\x02\xa4\x83\x62\x58\x99\x28\x87\x53\xdd\xf7\x1f\x4d\x4b\x65\x0b\x16\x4a\xd7\x0a\x11\x03\xde\xe5\xbe\x7f\x98\xfc\x3f\x6d\xaa\x4c\xb9\x48\xb6\xf8\x2b\x6d\x51\x44\x1a\x69\x7b\x3c\x02\x33\x16\xdb\xc5\xb0\x5e\xaf\xc1\x44\xed\xa6\xf8\x3b\x00\x00\xff\xff\x43\xe0\x04\x39\x40\x06\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1600, mode: os.FileMode(420), modTime: time.Unix(1529763681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x6f\xdc\x36\x0c\x7e\xcf\x5f\xc1\xfa\x65\x2d\x50\x9f\xd6\x1f\x18\x86\x4e\x31\x50\x24\x43\xdb\xa1\x5d\x83\x26\x1d\xd0\x47\x59\xa2\x6d\x35\xb2\xe4\x49\xf4\x25\xb7\x43\xfe\xf7\x41\xb2\x2f\xbd\x1f\xbe\xa4\x19\x1a\xac\xcd\x4b\xe2\x98\x22\x3f\x52\x1f\x3f\xf2\x6e\xb9\x5c\x2a\xac\xb4\x45\xc8\xb4\x55\x78\x99\x5d\x5d\x5d\x1d\xf0\x07\xc7\xef\x8f\xce\x3e\x9d\xfc\x0e\x0d\xb5\xa6\x38\xe0\xf1\x17\x18\x61\xeb\xc3\x0c\x6d\x56\x1c\x2c\x97\x4b\xc2\xb6\x33\x82\x10\xb2\x06\x85\x42\x9f\xc1\x2c\x1d\x2d\x9d\x5a\x14\x07\x00\x00\x5c\xe9\x39\x48\x23\x42\x38\xcc\xa4\xb3\x24\xb4\x45\x9f\x0d\xef\xe2\xcf\x86\x13\x2b\xe6\xa5\x58\x39\xb9\x36\x59\x77\xf1\xb9\x6f\x4b\x47\xde\xd9\x35\x17\xc9\xa6\x79\x52\xbc\x5b\x94\x8e\x38\x6b\x9e\x6c\xbf\x7a\xba\x3a\x6d\x50\xa8\xac\x10\x3d\xb9\x56\x90\x96\xc2\x98\x05\x48\x67\x0c\x4a\x02\x61\x15\x94\xde\x09\x25\x45\x88\x4f\x0b\x38\xd7\x56\x05\x70\x15\x68\x5b\x39\x1f\x4f\x38\x0b\x95\xf3\xb0\x70\x3d\x67\xcd\xd3\x2f\x61\x38\x53\x7a\x5e\x4c\x23\xbe\x40\x63\xb2\xe2\x14\x11\xb8\x80\xc6\x63\x75\x98\x35\x44\x5d\x78\xc1\x58\xad\xa9\xe9\xcb\x99\x74\x2d\xd3\x17\x82\xc4\xb9\x60\x6d\xcc\x21\x2b\x5e\x69\x7a\xdd\x97\x9c\x89\x22\x05\x6c\x9d\x47\x50\x18\xa4\xd7\x5d\x44\x11\x40\x94\xae\x27\xa0\x46\x07\x10\x5d\x37\xdb\x01\xf0\x20\xcf\xe1\x2f\x1d\x22\xe2\x97\x27\x6f\xc0\x63\xe8\x0d\x41\x9e\xaf\x61\x6e\x9e\x16\x6f\x5a\x51\x23\xbc\xb4\xc2\x2c\x82\x0e\xf0\x21\x59\x85\xad\xdc\x1a\xbf\xf6\xd0\x0d\x55\x86\x46\x04\x10\x50\xa1\xa0\xde\x23\x90\x03\x11\x9d\xfc\x83\x80\x6d\x89\x4a\xa1\x02\x1d\x7d\x07\x28\x17\xd0\x07\x6d\x6b\x78\xe5\x5c\x6d\x70\x1d\x94\xae\x00\xad\x28\x0d\xaa\xd9\xc6\x85\x7d\x72\x3d\x48\x61\x41\x36\x28\xcf\x81\x1a\x1c\xe1\x07\x68\xd0\x63\xba\xa8\x1a\x09\x2a\x44\x55\x0a\x79\x1e\x56\x77\xe2\x41\x3a\x5b\xe9\xba\xf7\xe9\xaa\x66\x9c\x75\x1b\xc8\xdf\xdb\xc1\x99\xae\x1b\x82\x4e\x58\x8c\x87\x52\xa4\x80\x98\x5e\x89\x55\x25\xc6\x7a\xa5\x24\x3f\x07\x67\x81\xf0\x92\x36\x51\x1e\x25\x74\x3b\x77\x2a\x8d\xeb\xd5\xac\x4e\xc9\xa6\x9b\x9d\xa7\x84\x99\x72\x32\x30\x8f\x15\x7a\xb4\x12\x99\xc7\x40\x6c\xfe\x84\x0d\x55\x62\xc2\x5a\x47\x82\x30\x2b\x8e\xe2\xf9\xf5\x2a\xbd\xaf\x2a\x2d\xb5\x30\xd0\x89\x1a\xb7\x19\x41\x42\x9b\x90\x12\x85\x49\xf2\xc5\x2c\x4d\xca\xd5\xe4\x91\xc5\xdb\x5d\xb3\x6d\x9a\xc7\x36\xd6\xb6\xde\xb2\x1b\x1b\x55\x57\x30\x4b\x94\x59\x31\xe6\x58\x10\xc6\x56\xdd\xb6\xe5\xcd\xb3\x4d\xb7\xa4\xc9\x60\x56\xec\x72\x60\xa0\x1c\x3c\x5c\x2e\x97\x93\xae\x1f\x71\xd6\x3c\x9b\x04\x83\x26\x7c\x93\xd8\xfb\x03\x58\xb5\xed\x7f\x6c\xb3\x9b\x4b\x18\xb5\xef\x96\xfa\x7d\xfc\xf0\x76\x12\xfa\x9a\x2f\xef\x2e\x26\x9c\x6c\x5b\x49\x67\xf2\x56\xe5\xbf\xec\x31\x4d\xe6\x2b\x86\x5e\x97\xf8\xd4\xf5\x5e\xc6\xda\x65\x05\xd7\x6d\x0d\xc1\xcb\xb5\xb7\x03\xb6\x6c\x15\x41\xb7\x75\xee\x31\x74\xce\x06\x3d\xc7\xec\x31\x08\x43\x87\xd9\x20\x1c\x63\xcf\xab\xd8\xe4\x3b\xe5\xcd\x8a\x48\xd6\xe9\x0c\x76\xcb\x78\x63\x72\x10\x68\x61\xf0\x30\x73\x73\xf4\x95\x71\x17\x2f\xa2\x82\xff\xd6\x8a\xcb\xbc\xc1\xd8\xcc\x2f\x9e\xff\xfa\x73\x77\x79\x53\x0d\x3a\x8f\x05\x97\x4e\x61\xb1\x43\xb4\x81\x05\x57\x57\x57\x9c\x25\x03\xce\xa2\xf1\x5d\x70\xef\xf9\xf7\x4d\x1c\xc5\xb6\xf8\xd3\x51\x13\x75\x91\x1c\x84\xc6\x5d\x70\x86\xed\x7f\xa4\xe1\xa4\xf8\xbf\x46\x61\xa8\x19\x25\x34\x8a\xec\x8e\xf8\x9f\x78\x27\x31\x84\xd1\x32\x1f\x4c\xcf\xa2\xe9\xcd\x03\xe0\x8d\x85\x34\x03\x1e\x47\xc9\x8c\x7a\xec\x11\x5a\xa1\xad\x59\x24\x0d\x2d\xd1\xb8\x0b\xe8\x06\xe7\x18\xa0\x43\x0f\x7d\x40\xbf\xa9\x9e\xc3\x14\xe9\xbc\x9b\x6b\x85\x5b\xa3\xe4\x5a\xf7\xb5\x87\x40\x82\xfa\xe8\xa6\x44\x29\xfa\x80\xc0\xcb\x42\xa7\xf1\x63\x7f\x22\xf0\x28\x64\x13\x8f\xc4\xc0\x61\x48\xd3\xa3\x41\x11\x10\x16\x48\x9c\x95\xc5\x6c\x03\x7a\x95\x24\x3f\xca\x3d\x0f\x5d\x1c\x31\xe3\x5e\x20\x4a\x8c\xab\x4d\x89\x26\x57\xc2\xd6\x71\x43\x39\x25\xd7\x71\x16\xad\x8a\x34\x77\x1e\x43\x37\x38\xb6\x8e\x74\xb5\x48\x33\x4f\xb5\xda\xea\x40\x5e\x90\xf3\x61\x6b\xde\x6c\x3c\xac\xb1\x3a\xa1\x5c\x6f\xa9\x2d\x3d\x19\xb2\x58\x37\x1e\xee\x2f\x0f\xe4\x75\x87\x6a\x7c\x2a\x9d\x57\xe8\x51\x4d\xb0\x9e\x53\x54\xf1\x3d\x14\x26\x7f\x43\x9b\x90\x5a\xb1\x82\x33\xda\xe3\x61\x65\x78\x9a\x6e\x66\xbf\x1d\x67\x53\xa1\x38\xdb\x03\x8e\xd3\x97\x9d\xf1\xce\xa0\xcf\x2e\x34\x11\x7a\x38\xd6\x3e\xae\x72\xef\x30\x84\xa8\x4f\x6f\x75\x20\xb4\xe8\x6f\x4f\x66\xef\x4b\xb8\x56\x6e\xfc\x1b\x66\x63\x9c\xc1\xef\xf1\xbb\xa1\x04\x40\xbe\x9f\xec\xf2\x8d\x20\xcd\xf3\x62\x2f\xe5\x42\x2f\x63\xcd\x33\xd0\xea\x30\xa3\x21\x46\xae\xda\xdc\x8c\xf8\xf3\xa1\x0b\xb2\xe2\xa5\x24\x3d\xc7\x91\x95\x9c\x35\xcf\x6f\x05\xbe\x4f\x81\xbe\x1a\xdb\xd8\x0e\xb7\x42\x5b\x6b\x97\xaf\x03\xb6\x2b\x6b\x1b\x98\xee\xc8\x2b\xb8\x0b\x4d\xce\x74\x8b\x26\x7e\xda\xb9\x5f\x82\x7c\x0c\xe8\xc3\xbd\x72\x24\xea\xea\x77\xcb\x92\x69\x70\x3f\x12\x4f\x4e\x9c\x31\x71\x44\xff\xe1\x4a\x78\x18\xb7\xee\x4a\xcc\x9d\xd7\x14\x07\x96\x55\x10\x50\x78\xd9\x60\x78\xf4\xad\xe9\x73\x82\x5e\x3b\xa5\xe5\xbd\x72\xa7\x1b\x83\xe4\x9f\x5d\xf9\xbd\x51\x67\x12\xdb\x8f\xc0\x9c\x53\x23\xe4\x39\x1c\x35\xc2\xc6\xcf\x5d\xdf\x5c\x5e\x92\xfb\x95\xd7\x7b\x61\x47\x88\x11\xbe\x3b\x49\xd9\x83\xea\x7f\x66\x04\x67\x13\x3b\x0b\x67\x69\x3f\xdb\xd9\xce\xd7\xfe\xe4\x6c\x38\xc6\xd9\xf0\xc5\xda\x17\x64\xff\x06\x00\x00\xff\xff\x8b\x85\x66\x51\x88\x13\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 5000, mode: os.FileMode(420), modTime: time.Unix(1530112639, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x4f\x6f\xa3\x3a\x10\xc0\xef\xf9\x14\x96\xdf\x99\xf8\xfe\x94\xa0\x27\x55\x4f\xef\xd2\xf6\xf0\xb6\x7b\xef\x80\x07\x62\xd5\xb1\x29\x1e\x68\x57\x88\xef\xbe\xb2\x0d\x09\xa5\x69\x95\x4d\xd2\xec\x5e\x12\x33\xcc\x1f\xcf\x6f\x66\xb0\xbb\xae\x93\x58\x28\x83\x8c\x1b\x68\x33\xa8\x79\xdf\xf7\x8b\x95\x81\x96\xe5\x1a\x9c\x5b\x0f\x62\x16\xff\x12\x89\x05\x34\x9a\xc6\x47\x65\x5a\xac\x1d\x8e\x8f\x85\x7a\x45\x99\x90\xad\x78\xba\x60\x8c\xb1\x95\x54\x3b\x3f\xb9\x35\x04\xca\x60\x9d\x14\xba\x51\x72\xd0\x98\x6b\x0d\x8e\x36\x08\x12\xeb\x89\x4e\xd0\xcb\x1a\x22\x6b\x66\xaa\x64\xcb\x52\x23\xcb\xad\xd6\x50\x39\x94\x9c\x49\x20\x18\xc4\x3e\x6c\x94\x8f\x62\xa8\x4b\xa4\x35\xff\x2b\x5a\xdf\xa1\x69\x1c\x67\x50\x2b\x48\xf0\xb5\x02\x23\x51\xae\x79\x01\xda\xe1\x2c\x78\xd8\x80\xab\x60\x17\x5e\xe5\xd6\x24\x1e\x58\xba\x12\x5e\x7e\x4d\xf5\x95\x88\x28\x66\x52\x98\xa1\xc9\x6a\x30\x92\xb3\x4d\x8d\xc5\x9a\x0b\x9e\xde\xfd\xc8\x2c\xad\x04\x4c\xd0\x0b\xa9\xda\x4f\x2b\x31\xf2\x63\x7b\x90\x4a\x8e\x6f\x23\xbe\xd9\x2e\x1a\x3d\x71\x31\x76\x86\x81\xf6\x10\x50\xad\x26\xba\x89\x22\xdc\x76\x5d\xa7\x0a\x86\xcf\x6c\x79\x1f\x2c\xef\x61\x8b\xec\xf1\xc6\x9a\x42\x95\x8f\x7d\xdf\x43\x4e\xaa\xc5\xae\xeb\xd0\xc8\xbe\xef\x0f\x38\x7d\x87\x22\xd1\xca\x3c\xed\x30\xe4\xc1\x95\xe0\x69\xf4\xd9\xd4\x40\xca\x9a\x37\x54\xf6\x74\xb4\x9a\x83\x6f\x74\xba\xf8\xfa\x7c\x1f\x5e\x14\x11\xd6\x37\x56\xbb\x8b\x24\x4d\xd1\x5f\xa8\x26\xe6\x3e\x61\x27\x78\x3a\x44\x61\x37\x7b\xe9\x17\x70\x18\x97\xb5\x2a\x37\x74\x60\xeb\x91\x80\x41\xb6\x1c\xf6\x13\x10\xf0\xf0\x21\x3a\x02\xe0\xc7\x30\x62\xee\x1b\xa2\xca\xfd\x2d\x46\x04\xcb\xdc\x6e\x45\xd7\x75\xd3\x60\x1e\xe9\xe8\x36\x23\xc3\x32\x32\x89\x2e\xc3\x9f\xb3\xb9\x02\x9d\xf8\x71\x0c\xcf\x83\x97\x0f\x82\xb2\xf9\x18\x17\xc0\x0a\xf0\xbe\x0a\x18\x4d\xfd\x32\xd6\x73\x37\xdb\xec\x9f\xf7\x1b\x3a\x9c\xd4\x71\xd5\x19\xa8\xa2\x76\x07\x3d\x9d\x01\x11\xaa\xca\x2d\x27\x24\xaf\x8b\xad\x02\xe7\xa6\xdc\x2e\xc1\x28\x0c\xd4\xe2\x93\xa6\xfc\xa6\x21\x7f\x7a\x40\xd8\x5e\xae\x25\x7d\xb5\x83\xdb\xef\xff\xdf\xfe\x42\xef\x39\x6f\x72\x0a\xc2\x60\xf8\x61\xdf\xed\x12\xfc\xe3\xba\x4e\x40\x43\x1b\x11\xd3\xbe\x1a\xa3\x2b\x36\xd9\x19\x83\x98\x5b\xe3\xac\xc6\xa5\xc4\x16\xb5\xad\xb0\x76\xcb\xd2\xda\x52\x63\xf8\xbe\x41\xa5\x9c\xff\x11\xad\x72\xca\x9a\xe1\x95\x97\x86\xd7\xcf\x8d\x25\x70\xc7\x22\x8d\xc6\xa7\x30\x8d\x96\x7e\xb5\x3f\xe5\xfe\x0b\xb2\x7f\x0d\x64\x1a\x25\xa3\xba\xc1\x37\xe7\x5b\x6c\x9e\xa1\x06\x93\x03\xef\x42\xc5\x38\x83\x78\xa9\x68\xd3\x64\x81\x9f\x7a\x01\x82\x27\x10\x5b\x7f\x9f\x3a\x1a\x63\xb0\x3f\x09\x63\xb0\x3c\x30\xbf\xbf\x81\x86\xd0\xb6\xb4\x0d\x8d\xa7\x29\x7f\x77\xe3\x38\x65\xf4\x54\x69\x12\xdb\xd0\xfe\xbb\x74\x1b\x82\x9c\x93\xde\xec\x82\x32\xb9\xe7\x0e\xcb\x95\x30\xd0\xa6\x8b\xfd\x74\xfe\x0c\x00\x00\xff\xff\x26\x65\x2d\xa6\x0a\x0d\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3338, mode: os.FileMode(420), modTime: time.Unix(1529738002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x41\x6b\xe3\x3a\x10\xbe\xe7\x57\xcc\xd3\x3d\x11\xed\xf1\x21\x1b\x1e\xe9\x3b\x94\x52\xde\x83\x76\x0f\x7b\x0a\xb2\x34\x89\xb5\xb1\x25\x21\x8d\x13\x8c\xc9\x7f\x5f\x64\x27\x6d\xd2\x3a\xe9\x52\x76\x69\x77\x2f\x09\x62\x66\x3e\x7f\xf3\xe9\x9b\x41\x5d\xd7\x69\x5c\x1a\x8b\xc0\x22\x52\xe3\xd9\x6e\xb7\x9b\x88\xbf\x6e\xfe\x9b\x3f\x7e\xfd\xff\x5f\x28\xa9\xae\xf2\x89\x48\x7f\x50\x49\xbb\xca\x18\x5a\x96\x4f\x00\x00\xba\xae\x23\xac\x7d\x25\x09\x81\x95\x28\x35\x06\x06\xb3\x54\x9e\xa2\xa2\x70\xba\x1d\x12\xfb\xa3\x36\x1b\x50\x95\x8c\x31\x63\xca\x59\x92\xc6\x62\x60\xcf\xf1\x57\x80\x56\x6e\x0a\x79\x0c\x38\x86\xf4\xad\xa9\x0b\x47\xc1\xd9\x17\x48\x7d\x5e\x79\x95\x3f\xa4\x8e\x04\x2f\xaf\xc6\xc2\xd7\x07\x94\x0a\xa5\x66\xf9\x63\x69\x22\x98\x08\x54\x22\x2c\x4d\x88\x04\x91\xd0\x03\x39\x68\x22\xc2\x7d\x5b\x38\x12\xbc\xbc\x1e\x41\x5a\xba\x50\x83\xd1\xd9\x5e\x40\x90\x8a\x8c\xb3\x19\xe3\xfd\x99\x33\xa8\x91\x4a\xa7\x33\xe6\x5d\x24\x06\x68\x15\xb5\x1e\x33\x56\x37\x15\x19\x2f\x03\xf1\x84\x30\xd5\x92\x24\xcb\x45\x7f\x38\xfd\x8a\xe0\xda\x6c\xf2\xc9\x4b\xb1\xcc\x12\x66\xf7\x18\xa3\x5c\xe1\x25\x91\x64\x85\x81\xa0\xff\x9d\x6a\x69\x57\x49\xf7\xae\xeb\x8e\x4a\xf7\xf8\x2f\xe0\xd1\xea\x04\xfb\x43\xb8\x5b\x19\xac\xb1\xab\x91\x6b\x98\x57\x46\xad\x41\x48\x28\x03\x2e\x33\x56\x12\xf9\xf8\x37\xe7\xd2\xfb\x38\xa3\xad\x21\xc2\x30\x53\xae\x66\x40\x32\xac\x90\x32\xb6\x28\x2a\x69\xd7\x2c\x2f\x31\xa0\xe0\x32\x4f\x37\xa0\x02\x4a\x42\xae\x4a\x54\x6b\x68\x5d\x13\xc0\x6d\x2d\x3c\x0e\xe5\xf0\x8f\xf7\x63\x72\x9d\xe3\x4d\xb2\xa8\x70\x1a\x30\x7a\x67\xa3\xd9\xe0\x98\x77\xfa\x9c\x93\x02\x18\xca\x22\x05\xe3\x51\xef\x4f\x85\x0b\x1a\x03\xea\x11\x88\x01\xe6\x74\x08\x5e\xc7\xc3\xf9\xe0\x90\xa0\xf3\x43\x97\x73\x67\x63\x53\x63\x80\x3b\x6c\x05\x27\xfd\x76\xe5\xc5\x84\x3e\xc9\x58\xdf\x10\x24\xc3\x3d\x99\x77\xb0\xa6\x97\x31\x6e\x5d\xd0\x0c\xac\xac\x71\x1f\x3c\xdc\xd7\x42\xed\xa9\x2c\xd6\xd8\x32\xd8\xc8\xaa\xc1\x8c\x25\x4b\xed\xb9\x1e\xa8\xde\x61\xbb\xdb\xed\xce\x88\xf3\x44\xe2\x62\x2f\x82\x5f\xd2\xe8\x7d\x02\x3e\xa0\x0a\x48\x9f\x45\xc3\xd8\xb3\xb9\x24\xe3\xc0\xf7\xd7\x29\x29\xf8\x19\x9f\x0a\xde\xdb\xfc\xed\x65\xf4\x13\xd7\x82\x99\xc5\x4a\xaa\x75\xda\x09\xfd\x92\x78\xcf\x62\x78\x48\x08\x7f\xf8\x5a\x18\x7a\x9c\x57\x06\x2d\xc1\xed\xcd\x07\xb9\xb9\xbf\xab\x85\xea\x59\x2c\x8c\x3e\x71\x71\xcf\x70\x20\x78\x7b\xf3\x09\xf6\xc0\x89\x62\x1f\xba\x03\x4e\x54\x1b\x99\xff\x23\xe5\x7e\x83\xd9\x3f\xdb\x7c\x6c\x8a\xda\x3c\x77\xf6\xc5\xeb\xf4\xb2\xeb\x53\xc0\xd8\x54\x20\xd3\x43\x89\x1d\x06\xaa\x20\x0b\x05\xd9\x69\x6c\x94\xc2\x18\xd9\xd1\x87\x8e\x66\x57\xf0\x81\xb0\xe0\xc3\xdb\xf4\xf9\xa5\xf2\x3d\x00\x00\xff\xff\xa2\x84\xfd\xe5\xcb\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2763, mode: os.FileMode(420), modTime: time.Unix(1530117457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xbf\x6e\xdb\x3c\x10\xdf\xfd\x14\xf7\xf1\xcb\x18\x4b\x48\xc6\x80\x16\x50\xa4\x1d\x8b\x76\x70\x87\x8c\x27\xf1\x24\x31\xa6\x49\x95\x3c\xc9\x30\x08\xbd\x7b\x21\xc9\x8a\x6c\x25\x01\x8a\x7a\x31\x41\xdf\xfd\xfe\xdd\x99\x31\x46\x45\xa5\xb6\x04\x82\x4f\x9a\x99\xfc\xb3\x33\x41\xf4\x7d\xbf\x91\xff\x7d\xfd\xf1\xbc\x7f\xf9\xf9\x0d\x6a\x3e\x9a\x6c\x23\x87\x2f\x30\x68\xab\x9d\x20\x2b\xb2\x4d\x8c\x91\xe9\xd8\x18\x64\x02\x51\x13\x2a\xf2\x02\x92\xb1\x35\x77\xea\x9c\x6d\x00\x00\xa4\xd2\x1d\x14\x06\x43\xd8\x89\xc2\x59\x46\x6d\xc9\x8b\xe9\xb7\xe1\x73\x03\x62\xb1\xcb\x71\x06\x79\x2b\xb9\x86\x78\x6d\x8f\xb9\x63\xef\xec\x15\xc4\x58\x53\x3f\x64\xfb\xc9\x00\x3c\x3b\x63\xa8\x60\xed\x6c\x90\x69\xfd\xb0\x2e\x7c\x9c\xb1\x0c\xa1\x12\xd9\xaf\xa0\x6d\x05\x73\x6f\xb1\xf4\x02\x3b\x08\xec\x3c\xc1\xd9\xb5\x1e\x4a\xec\x9c\xd7\x4c\xc0\x27\x22\x0e\xa0\x03\x28\x42\x65\xce\xd0\x06\x2a\x5b\x23\xd3\xfa\x71\xa1\x92\xa9\xd2\x5d\xf6\xb1\x87\x13\x19\xb3\x92\xff\xe2\x5a\x28\xd0\x42\x51\x53\x71\x98\xf8\x3e\x52\x54\x93\xa7\x7b\xc8\x5b\x86\xca\x0d\xf2\x24\x42\xed\xa9\xdc\x89\x9a\xb9\x09\x4f\x69\x3a\x6a\x53\x54\x1c\x92\xcb\x34\x93\xc2\x1d\x53\x91\xed\xe7\x7b\x99\x62\x06\xa5\xf3\x70\x1c\x8c\x29\x62\xd4\x26\x24\x9f\xcb\x6e\xcd\xac\xda\x62\x07\x16\xbb\x6d\xa3\x8d\x09\xe3\xe9\xb5\x0d\xac\x4b\x4d\xea\xc6\x4c\x8c\xd1\xa3\xad\x08\xee\x0e\x74\xbe\x87\xbb\x0e\x0d\x3c\xed\x20\x59\xa6\xf2\x1d\x9b\x61\xbe\x57\x33\x31\x1a\xbc\x33\xb4\x13\x8d\xa7\x40\x96\x71\x28\x13\x33\x73\x8c\x51\x97\x40\xbf\xe1\x2e\xf9\x52\xb0\xee\x68\x81\x1a\x49\xfa\xbe\xc7\xf1\x3e\xc6\x48\x56\xf5\x7d\x2f\x32\x89\xa0\x90\x71\xcb\xae\xaa\x06\x60\xc6\x5c\x5c\xb2\xfa\x3f\xc6\x78\x69\x13\xd9\x72\x1e\x92\x91\xa9\xd1\x2b\x2f\x13\xe0\x55\x40\xad\xf9\x64\xac\x8c\xf9\x76\xd8\x70\xb2\xbc\x9a\xee\x3f\x44\x72\x81\xd6\x6a\xb4\x3f\xcb\xbd\xa6\x6a\xd0\x12\x94\xa8\xe8\x2f\xe2\xd1\x16\xde\x25\x74\x43\x36\x12\xe2\x1b\xfc\xb4\x3b\xdb\xca\x6b\x35\xa7\x36\xa8\xe8\xd0\x4c\xe1\xa6\xb8\xfa\x53\x4d\x6b\xb3\xf2\xfc\x2e\xba\x65\xb7\x2e\x67\x99\x4e\x0f\x85\x4c\xa7\x27\x66\x69\xfa\x13\x00\x00\xff\xff\x2f\x94\x81\x14\x98\x04\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 1176, mode: os.FileMode(420), modTime: time.Unix(1530111823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config/modal.tmpl": assetsTmplConfigModalTmpl,
	"assets/tmpl/config/source.tmpl": assetsTmplConfigSourceTmpl,
	"assets/tmpl/config/twitter_conf.tmpl": assetsTmplConfigTwitter_confTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
				"modal.tmpl": &bintree{assetsTmplConfigModalTmpl, map[string]*bintree{}},
				"source.tmpl": &bintree{assetsTmplConfigSourceTmpl, map[string]*bintree{}},
				"twitter_conf.tmpl": &bintree{assetsTmplConfigTwitter_confTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

