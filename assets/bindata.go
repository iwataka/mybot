// Code generated by go-bindata.
// sources:
// assets/js/config_after.js
// assets/js/config_before.js
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config/general_conf.tmpl
// assets/tmpl/config/modal.tmpl
// assets/tmpl/config/source.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x8f\x94\x40\x10\x86\xef\xfc\x8a\x0a\xd1\x34\x93\xec\x80\xf1\x88\xc3\xf8\x91\x98\x78\x55\xd7\x83\x51\x33\xa9\xa5\x6b\xa1\xd7\xa6\xbb\xb7\xab\x19\x82\x84\xff\x6e\xe8\x65\xc6\x71\xd5\x83\x17\xd2\x55\xef\x4b\x7d\x3c\xa9\x23\x7a\x08\x83\x0a\x81\xfc\xeb\xba\xb6\xbd\x09\x0c\x15\x18\x1a\xe0\x8d\xb6\x56\xb6\xb6\x37\x32\x9b\x12\x00\x89\xa1\xef\xae\xed\x77\x32\xea\x07\xf9\xf2\x42\xce\xc3\x29\xcb\xf9\xd0\xaa\x40\xec\xb0\xa6\xab\x04\xe0\xbe\x27\x3f\xfe\xe7\x3f\x9e\x3a\x1b\xa8\x84\xa5\x27\x40\xef\x75\x09\xa2\x58\x27\x2c\x7a\x26\xcf\x05\x13\xfa\xba\x2d\x5e\xde\x57\x4f\xdf\x7f\x7a\xfb\xe1\xb3\xb8\x8a\xde\x41\x69\x59\xa3\x97\x25\x88\x35\x9f\x00\xcc\xc9\xbc\x79\x91\x24\x71\xcd\xd1\x11\xb6\x84\xf2\x23\x85\xa0\x4c\xb3\x2c\xba\x74\x31\xd8\x51\x09\x62\xed\xb1\xc5\x15\x43\xac\x2a\x15\x3b\x8d\x63\x09\x82\x6b\x4f\x64\x0e\x8b\x39\x2a\x6c\x7b\x5f\x53\xf9\x18\xde\x22\x05\xea\x9c\xc6\x40\x7c\xda\x82\x3a\x17\xc6\x12\xbe\xc4\x00\x40\xec\xa4\x3a\x42\xad\x91\xb9\x4a\xa3\xb6\xed\x88\x19\x1b\x4a\xd7\x55\x00\xc4\xf5\xe8\x08\xd0\x8c\xa1\x55\xa6\x81\x96\x3c\xfd\xd2\x76\x85\x54\xc7\xbd\x88\xe1\xb7\xfc\xce\x2a\x93\x89\xaf\x46\x6c\x1e\x0c\xdc\x37\x0d\x71\x50\xd6\x94\xf0\x0e\x8d\xd4\x74\x83\x9e\xf3\xda\x76\x4e\x69\xca\x7e\x9b\x62\x7f\x51\x54\x75\x0d\xb0\xaf\xab\x74\x9a\x9c\xb7\xb7\x4a\xd3\x41\x75\xd8\xd0\xa1\xf7\x7a\x9e\x53\x40\x1d\xaa\x74\x55\x20\x2a\x29\xb4\xa4\x9a\x36\x54\xe9\xf3\x67\x29\x0c\x4a\x86\x36\x3e\x8b\xcb\xb2\xec\xd0\xec\xa7\x69\x01\x37\xcf\xaf\xa6\xe9\x02\xe4\x3c\xef\x8a\x28\x3f\xb2\x9f\xd8\x68\xbc\x21\x0d\xf1\xbb\x75\x5e\x75\xe8\xc7\x74\x7f\x6b\xb5\xb6\x03\xf9\x85\xee\x74\x0e\x0e\x11\xff\xdf\x0a\xfe\x83\xd5\xe6\xe1\x38\x92\xe4\x49\x26\x94\x71\x7d\xc8\xcf\xf7\xb1\x0d\xd8\x70\xcc\x89\x4d\x7e\x7e\x67\xd3\xd9\x70\xc7\xe5\x9f\xd7\xb4\xdc\xd9\xcf\x00\x00\x00\xff\xff\x35\xe1\xcb\x5c\x4e\x03\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 846, mode: os.FileMode(420), modTime: time.Unix(1530108596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcb\xaa\xdb\x30\x10\xdd\xeb\x2b\x0e\x97\x12\x3b\x24\x28\xdd\xbb\x5a\x76\x51\x28\xa1\xf4\x41\x17\xa5\x0b\xc5\x1a\xc7\x02\x5b\x32\xd2\x28\x69\x29\xfe\xf7\xe2\x57\x70\x1a\x42\xaf\x56\x03\xe7\x35\x1c\x4d\x95\x5c\xc9\xd6\x3b\x18\x6a\x88\xe9\xb3\xbf\xe6\xa7\xc4\xec\xdd\x16\x7f\x04\x00\x5c\x74\xc0\x39\xf8\xd4\x41\x61\x42\x64\xa7\x03\x39\x3e\x7a\x43\xab\xb1\x18\xd9\x95\x0f\xc8\x07\x89\x85\xc2\xdb\x02\x16\xef\x26\xb5\x2c\x6b\xdb\x98\x81\x18\x65\x43\xee\xcc\x75\x01\xbb\xdb\x2d\x29\x4b\xd2\xc8\x82\x7a\xd0\xfc\xb0\x3f\x8b\x1b\xd1\x56\xc8\x47\x48\xf2\xef\x8e\xa0\x94\x42\x56\x5b\x63\xc8\x65\xd8\x6c\x26\x0f\xe9\xbc\xa1\xa3\x6e\x67\xf8\xc3\xf1\xd3\xb7\xaf\x23\x1a\x39\xbc\x77\x26\x7e\xb7\x5c\xcf\x26\x4e\xb7\xb4\x47\x36\x15\x60\xb2\xed\x7a\xa7\x25\x6e\xde\xa7\xd1\x31\x7e\xb4\x91\x65\xe9\x1d\x6b\xeb\x62\xfe\x5c\x36\xbc\x29\xe0\xa2\x9b\x44\x50\xc8\x2a\xdd\x44\xca\x8a\x07\xda\xbf\xee\x81\x5a\x7f\xa1\x95\xf7\xbd\xa4\x07\x35\x91\xfe\x1f\xc7\x21\xbd\x26\x4d\x1b\xf3\x3c\x4a\xdc\x4f\xbd\xe8\x85\x38\x1c\xf0\xc5\xb7\x84\x53\xf0\xd7\x48\x21\xc2\x78\x97\x31\x62\xea\x3a\x1f\x78\x68\xd8\xba\xb3\xa4\xb9\x65\x2c\x27\x26\xc5\xed\xd8\xd6\x9f\x10\x39\xec\x11\x53\x55\xd9\x5f\x4b\x85\x81\x38\x85\x91\x25\x5b\xcd\x65\x9d\x4f\xf0\xee\xe5\xcd\xcb\x16\x4a\xcd\xec\x42\xf4\xe2\x6f\x00\x00\x00\xff\xff\xac\x5e\xd9\x02\xbf\x02\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 703, mode: os.FileMode(420), modTime: time.Unix(1530367244, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xe1\x4e\xc3\x30\x0c\x84\xff\xf7\x29\xf2\x02\x99\x26\x81\x04\x4a\x9f\xc6\x8d\xdd\x34\xd0\xda\x91\xeb\x6e\x1d\x88\x77\x47\x65\x5b\x15\x10\x3f\xe6\xdf\xe7\xbb\xfb\xae\x13\xbc\xb8\xcf\xc6\xdd\xae\x00\x62\xe6\xe4\x4d\x4a\x70\x2f\xc7\xb2\xb6\xcd\x57\xd3\x1c\xde\x96\xa9\x13\x53\xe1\x4a\xda\x41\x7c\x4f\x2a\x0b\xa3\x8f\x32\x8a\x06\x67\x0a\x3c\x17\x50\x62\x6b\x77\x99\xd1\x6a\x1e\xc6\x9c\x38\xb8\x48\x6c\xa4\x57\xcb\x28\x6c\x90\x99\xb4\xb2\x9c\x60\xf5\xe7\x8c\x36\x04\xf7\x7a\xbc\x87\x63\x3e\x55\xf9\xe0\xe6\x02\x7c\xe8\xa1\x7a\xeb\x85\xcd\xcf\xf9\x83\x82\x7b\xbe\x7f\x15\xa5\xba\xab\x28\x92\x06\xc7\xc2\xd4\x3e\x4a\xb0\xb5\xec\xc1\x43\xb4\x7c\xaa\xcd\x6e\x5a\x14\x4c\xa4\xdd\xb8\xd0\x2e\x2d\x30\xcf\xff\x6a\x93\xd2\x65\x87\x31\xe8\xfc\x46\x4f\x6c\xbf\xd8\x35\x65\xbe\x0e\xff\x54\xb3\x23\x8d\x64\x84\x6e\x5b\xac\xcf\xc9\xab\x9c\x3d\xc3\x54\xa7\xfc\x6c\x8c\x14\x45\xc1\xb2\x70\x18\x33\x93\xb7\x41\x65\x49\x43\xfb\xa7\x8b\x12\x6e\xd6\xdf\x01\x00\x00\xff\xff\x6f\x52\xdc\x35\xf8\x01\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 504, mode: os.FileMode(420), modTime: time.Unix(1530371409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x41\x8b\xdb\x30\x10\x85\xef\xf9\x15\xc3\xc0\xc2\xe6\x50\x99\xd2\x1e\xb5\x86\xb2\xd0\xf3\xb2\x9b\x7b\x51\xe4\x71\x23\x62\x24\x57\x12\x49\x16\x91\xff\x5e\x2c\x2b\x4d\x36\x71\xb6\x4a\xb0\x73\xcb\x48\x9a\xf7\xbe\xc7\xc8\x76\x08\xa1\xa2\x5a\x69\x02\x14\xd2\x2b\xa3\x7f\x49\xa3\x6b\xf5\x1b\xf7\xfb\xfd\x8c\x57\x6a\x03\xb2\x11\xce\x3d\xa1\x17\xcb\x86\xbe\x58\x72\xad\xd1\x4e\x6d\x08\xcb\x19\x00\x00\x8f\xf5\x0f\x9b\xd2\x4a\xbf\xba\x34\xd5\xfb\xf1\x7f\xf7\x0b\x21\xa8\x1a\x8c\x85\x47\xfa\x03\x6c\xf1\xde\x12\xa0\x6b\x84\x5c\xe3\xfc\xb4\xb4\xa5\xe5\xca\x98\x35\xce\x3b\x23\xa7\xe7\xb9\xb7\x1f\x1b\xf6\xc5\x0a\xac\xd9\xba\x56\xe8\x27\xfc\x8a\xe5\x62\xab\xbc\x27\xcb\x0b\x5f\x0d\x6e\x2e\xfd\x96\xc8\x5f\x5f\xbe\x28\x26\xe7\x72\x45\x72\xbd\x34\x3b\x60\x3f\x62\x5a\x2c\x09\xb1\x45\xd7\x0f\x1e\x5b\xab\xb4\xaf\x01\x1f\xdc\x83\x43\x60\x2f\x96\x6a\xb5\x03\x64\x7d\xb6\xcc\xa7\xdd\x51\xfd\x12\x2d\xaa\x5f\x78\xe2\xc5\x39\x71\x08\x81\x74\x75\x7e\xba\x0f\xf6\x98\x60\x12\xc3\xdb\x03\xfc\x96\x11\xa0\xa5\xb1\x23\x7c\xed\x3b\x66\x87\x98\x1c\xdc\x1f\xe3\xb5\x20\xca\x5a\x6c\x8c\x55\x9e\x46\x84\xfb\x99\x5a\x66\xd3\x1d\x3c\x4c\x80\x27\x4d\xd3\x50\x54\x73\xb7\x13\x36\xca\xf9\x05\xed\xfc\x10\xe4\xf3\xb1\x71\x36\xe7\x89\x19\x9c\x03\x5e\x4c\x6b\x2e\x6d\xde\x9d\xe8\x1f\x34\xb7\xdf\x88\xef\x58\xbe\x75\x47\xaf\xe7\xd5\x2a\x3d\xc2\xb8\x44\x11\xf6\xa2\xf4\x7f\xf3\x8b\x24\xac\x55\x7a\x82\x01\x71\x5e\x7c\x72\xf3\x6f\x84\x79\xf3\xc2\x66\xd2\x74\xba\x13\xe0\x58\x12\x63\x4e\x7b\x8f\xf5\x7a\x68\x9a\xc9\xf6\xcf\xc4\x04\x53\x3e\x48\x7e\xed\x75\x00\x83\xda\x67\xef\xcf\x4f\x86\x7d\xd8\xc2\x21\x48\xb9\x12\x5a\x53\x33\x6a\xd4\xcf\xa9\x67\x66\xd2\x07\x0b\x77\x07\xcd\x8b\x93\xcf\x16\x5e\xc4\x8f\x9a\x72\xc6\x8b\x4a\x6d\xca\xd9\x11\xff\x6f\x00\x00\x00\xff\xff\x24\x57\xa8\xca\x3b\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2363, mode: os.FileMode(420), modTime: time.Unix(1530370974, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\xc1\x11\x28\xb0\x3e\x48\xc2\x8a\x62\x1b\x06\xd9\x43\xf7\x90\xb5\x83\x8b\x05\x6d\xb6\x57\x87\x96\x4e\x12\x1b\x8a\xa7\x91\x27\xc7\x86\xe1\xff\x7d\xa0\x7e\x39\x4e\xe5\x59\x72\xa3\x01\xf1\x43\x10\x51\xe4\xdd\x7d\xf7\x1d\xf9\x9d\xb8\xdb\xed\x62\x48\xa4\x06\xc6\x13\xa9\x08\xcc\x32\x42\x9d\xc8\x94\xef\xf7\xfb\xab\x30\x96\x6b\x16\x29\x61\xed\x8c\x93\x58\x29\xf0\x0c\xd8\x02\xb5\x95\x6b\xe0\xf3\x2b\xc6\x18\x0b\xab\xf1\xa3\x49\xcd\x9b\xfa\xed\x0a\xe3\xed\xe1\xb9\x1e\x33\xc7\x03\xee\xb7\xdb\xed\x64\xc2\xe0\x1f\xe6\xdf\x6e\x0b\x60\x9c\x1e\x24\x11\x98\x2a\x8a\xa7\x73\x43\x8a\x99\xc1\x07\x5b\x08\x3d\xe3\x3f\x71\x16\xa1\xaa\xff\x7f\xc3\xe7\xbf\x83\x06\x23\x54\x18\x50\xdc\xeb\x04\x94\x05\x76\xe4\xc9\x2a\x11\xdd\x9f\xf7\xf3\x66\xa4\x1f\x1d\x9f\x30\x39\x27\xd8\x10\x2b\x84\x83\xa7\x6d\xbf\x81\xb0\x6f\xb0\xb1\xac\xa4\xa5\x5b\xd8\xd0\x0a\x37\xcc\xbf\xae\x28\xf3\x6f\x1a\x6b\xec\xfb\xc2\x48\x4d\x09\xe3\xaf\xec\x2b\xcb\x99\x7f\x63\x20\x91\x1b\xc6\xfd\x9a\x5b\xbf\x75\xcb\x5f\x33\xde\x8f\xf9\xab\x78\xc2\xe0\x29\x5f\xbd\x04\xba\x90\x33\x61\x59\x0e\xb1\x14\xec\xd7\xf1\xb8\x56\x88\xea\x33\x28\x88\x8e\x90\xbd\x17\xf6\x63\x65\xf1\x1c\xb2\x4c\xd8\x65\xe5\x9b\xbf\xbe\x14\xd7\xd0\x1a\x3c\x89\xbf\x34\xea\x99\x89\xfd\xeb\xd3\x62\x30\xb7\xa5\x51\xcb\x69\xf9\x35\x40\x0f\x00\x04\xf1\xf3\xf1\xfb\xa9\x33\x79\x0e\x5e\xe7\xfc\x72\x82\x4f\x02\x4b\xc4\x1a\x8d\x24\x60\x94\x19\xb0\x19\xaa\x78\x3c\x3e\xaa\xa9\xfb\x33\xf9\xa0\xe9\x86\x4c\x87\xf0\xba\xb1\x7d\xdb\x9a\x3e\x8b\xb4\x8d\x66\xd9\x45\x33\x01\xe4\x03\x97\x13\x60\xee\x58\x1d\x0e\xba\x8b\x67\x52\xd4\xbd\x40\x94\xd0\x69\x29\x52\xa8\x11\xe5\x85\x12\x04\x8c\xd7\x32\xb8\x94\x3a\x41\xce\x78\x46\x54\xd8\x5f\x82\x20\x86\x35\x28\x2c\xc0\xf8\xcd\xe9\xe0\x47\x98\x07\xa0\x83\x18\x23\x7b\x78\xeb\x95\x24\x95\x24\x09\x36\xb0\x65\x51\xa0\x21\x88\xbd\xd6\x8f\x0d\x44\x21\x3d\x03\x09\x18\xd0\x11\x04\x29\x90\x97\x81\x2a\x0e\x13\xfc\x8c\x72\x35\x70\xff\xfe\x27\xb4\x50\xea\xa2\xa4\x56\x9d\x13\x34\xb9\x17\xa1\x26\x83\x8a\x33\xf7\x34\xe3\xb8\x06\xf3\xe0\xaa\x8d\x33\xda\x16\x30\xe3\x8e\x53\xce\xb4\xc8\x61\xc6\x77\xbb\x5d\x43\xdb\x9d\xa3\xed\xae\xa3\xed\xae\xa5\xcd\x85\x7c\xb7\xdf\xef\x39\x5b\x0b\x55\xd6\x4b\xda\x2a\x58\x08\x9d\xba\x57\x3d\xf1\x0e\x3b\x8d\x7b\x44\x34\xfc\xce\xf3\xd8\xdf\xd2\x4a\xd4\xec\xdd\xcd\x07\xe6\x79\xc3\x98\x3f\x08\xf9\xcf\x3d\xf1\xb8\x5f\x63\x74\x40\x0d\x44\x0a\xcb\xd8\x4f\x11\x53\x05\x15\xfd\xeb\x6a\x69\x5d\x02\x07\x5a\x0d\x58\x0a\xd6\x3f\x04\x32\xaf\x39\xd7\x1a\x49\x10\x8c\xa3\xf5\xa8\xe9\x58\x88\x15\x9c\x68\x39\xc6\x0a\x4b\x8d\xd6\xaf\x2c\x9e\xdd\x9b\x35\x3e\x5f\xb9\xc9\x93\x28\xcb\x81\x9d\xb7\x7c\x7e\x2d\x22\x38\x0d\x52\xe8\x14\x0c\x53\xf2\x1e\x94\xcc\x10\xc7\x1e\x5a\x93\x6f\x88\x26\x57\x89\x88\xc0\xaf\x62\x5d\x1e\x62\x3d\xb5\x51\x1a\x32\x1c\x70\xff\x9d\x5b\xb3\xe8\x96\x5c\xbe\x7f\x4e\x9e\x81\x2b\x55\x1a\x03\xf1\x0b\xc9\x61\x13\xed\xd3\x2c\xde\x9d\x49\xe3\x6f\xf5\xb2\x49\x13\x99\x81\x88\x1f\x40\xbc\x94\x6a\x6c\xc3\x1d\x59\x90\xef\x9b\x65\x93\xa6\xf2\x0b\x6e\x5f\x48\x16\xbf\xe0\x76\x64\x02\xff\xc0\xed\x94\xb9\x3b\x52\x08\x77\xcc\x3f\xab\x40\xb8\xe1\xa1\xfa\x50\x25\x75\x12\x79\x38\x16\x41\x1d\xe7\xc2\xdc\x3f\xb3\x0e\xd6\x46\x87\x4b\x61\x3d\xff\x7f\x80\x8b\x29\x3e\x2f\x54\x4c\x71\x30\x4c\x4c\xf1\xdb\x20\xba\x76\x6d\xd1\xf6\xd7\x97\x35\x6c\x4f\x6e\x5e\x7a\x21\x2f\x46\xb4\xf0\x5f\xb5\x6f\x5a\x50\x69\x84\xea\xda\xef\xde\x46\x6e\x64\x37\x9e\x4b\xcd\x2c\x68\x92\x39\xe8\x0b\x76\x64\xf7\x61\x75\xad\x50\xd0\x8f\x6f\x1f\x7f\x5c\xb5\x58\xfd\x8f\x52\x7f\x6e\x5d\x9c\x65\xb4\x05\xe7\xe7\x52\x2f\xbb\xc8\x26\xf8\xc4\xca\xc5\x66\x7a\xe4\x62\x73\x09\x72\xb1\xf9\x56\xe4\x61\xf0\xe8\x42\x33\x0c\xaa\xeb\xce\xf9\x55\x18\xc4\x72\x3d\xbf\x3a\x7c\xb1\x5c\x3d\xba\x55\x7d\x5c\x84\xd5\x9d\xaa\x60\x99\x81\xa4\x96\x8b\x4a\x3e\x48\x98\x14\x68\xc6\x97\x2b\x25\xf4\x3d\x67\x06\xd4\x8c\x6b\xc4\x02\x34\x18\xa6\xb1\xaa\x44\x03\xa6\xbd\x71\x75\x5b\xa1\x53\x3b\xc1\x12\xe1\xa9\xd4\xfd\x75\x2e\xbc\x48\x9a\x48\x01\x9f\x87\x81\x9b\xe6\x62\x13\x8f\x23\xfb\x37\x00\x00\xff\xff\xf8\x44\x3c\x32\xef\x15\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5615, mode: os.FileMode(420), modTime: time.Unix(1530371125, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigGeneral_confTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4f\x6b\xe3\x3e\x10\xbd\xf7\x53\x0c\x03\x85\xf6\x50\x07\x7e\xbf\xab\x6d\x58\xb6\x97\x85\x6e\x29\xb4\x7b\x0e\xaa\x3d\x76\x44\x15\xc9\x48\x93\x3f\x45\xf8\xbb\x2f\x72\xec\x44\x4e\x9c\x4d\xd3\x9c\x22\x69\x34\x6f\xde\xcc\x7b\xb2\xf7\xbe\xa4\x4a\x6a\x02\xd4\x86\x65\x25\x0b\xc1\xd2\xe8\x79\x61\x74\x85\x6d\xdb\xde\x00\x00\xa4\x6c\xf3\xee\xcf\x6e\x51\x82\x35\x1b\xd7\x08\x9d\xe1\xff\x98\x7b\xef\x93\x37\xc9\x8a\xda\xb6\x4d\x67\x5c\x8e\x22\x73\xde\x48\x66\xb2\xb0\xfc\x74\xa4\xaa\xd3\xf3\xfd\x22\xfc\xbc\xf7\xc5\x82\x8a\x8f\x77\xb3\x85\xe4\x51\xb0\x48\xde\x76\xd7\x7f\x28\x65\x36\xaf\xa4\x2a\xb8\x6b\xac\xd4\x5c\x01\xde\xba\x5b\x87\x90\x3c\x8b\x25\xbd\x58\xaa\xe4\x16\x30\xe9\xc1\xe6\x22\x84\xcf\x03\x20\xde\x0f\x1c\x3a\xc0\x3d\x7c\x3a\x1b\x28\x1d\x73\xdb\x57\x6c\x78\x41\x16\x56\x8e\xac\xbb\x5c\xb6\x92\x8e\xdf\x68\xcb\x27\x95\xff\x09\xf7\xe1\x6b\x65\x77\x58\x78\x0f\xc8\x9f\x0d\x89\x05\x89\xf2\x81\x45\xed\xa4\x6e\x56\x8c\x57\xf3\x70\x4a\x14\x1f\x50\x2c\x84\xd6\xa4\xbe\x45\xe1\x35\x64\xf8\xd9\x27\xb8\xc0\xa1\x43\x9b\x0f\x68\xdf\x21\xe1\xbd\x27\x5d\x86\x88\x9b\x48\x94\x35\x69\xb2\x42\x1d\xf4\x98\x96\x72\x0d\x85\x12\xce\x65\xc8\xe2\x5d\xd1\x83\x25\xd7\x18\xed\xe4\x9a\x70\x68\x45\xd8\x1f\x05\x61\xcc\xfd\xdd\x94\x9f\x27\xf4\x99\x96\x8d\x12\x3c\xe9\x03\xb8\xd3\xb4\xf9\x2d\x1a\xc0\x4e\xe8\x08\xf8\x64\x6a\x78\x8e\xe2\x10\x30\xb4\x0c\x21\x79\x32\x75\x7c\x00\x78\x68\x13\x02\x2a\x53\xcf\xe3\xfc\x63\x7d\x9e\xcc\x71\xd2\x73\xff\x61\xde\x8b\x0b\x7e\x69\x26\x2b\x8a\x90\x69\x3c\xe0\x78\xd0\x53\xd6\x3b\x2b\x84\xa8\x23\x07\x2b\xf6\x70\x49\x04\x97\x1c\x2c\x89\xbd\x7e\x13\x19\x1d\x47\x16\x3c\x66\x38\x1e\x7e\xb4\x73\x44\xfc\x5c\x27\xf2\xb3\xce\xfc\x0a\xab\x91\xcc\xa7\x88\xed\x1c\x3b\x49\x6a\x67\xd0\xcb\xd2\xbe\x86\xe5\xd5\xd2\x1b\x66\xff\xa2\x44\x41\x67\x44\x38\xf0\x8a\x4f\x93\xdd\x85\xb1\x1e\x07\x96\x31\x70\xd2\x84\xc0\x2b\x94\x59\x18\xb5\x57\xe6\x8b\x51\x4a\xea\x1a\x1e\x57\x56\xfc\x5b\x96\x93\x03\x4a\xbb\x66\x0e\xd6\xad\x8c\x5d\x3e\x14\x46\xb3\x35\x0a\x21\xac\x32\x34\x6b\xb2\x1b\x2b\x99\x10\xc2\x18\x32\x64\xda\x32\x82\x16\x4b\xca\xb0\xec\x51\x11\xd6\x42\xad\x28\xc3\xf0\x71\x1a\x4a\x69\xdb\x16\x27\x4a\xb9\x30\xa3\x74\x16\xbd\x17\xe9\xac\x7b\x4d\xf2\x9b\x74\x56\xca\x75\xfc\x66\xfd\x0d\x00\x00\xff\xff\x06\x2d\x8f\xa8\x48\x07\x00\x00")

func assetsTmplConfigGeneral_confTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigGeneral_confTmpl,
		"assets/tmpl/config/general_conf.tmpl",
	)
}

func assetsTmplConfigGeneral_confTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigGeneral_confTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/general_conf.tmpl", size: 1864, mode: os.FileMode(420), modTime: time.Unix(1531010875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigModalTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x51\x6b\xdb\x30\x10\x7e\xdf\xaf\x38\x6e\x50\xda\x07\xdb\x2b\x7d\x5b\xed\xc0\x18\x0c\x0a\x5b\x29\x6c\xef\xe5\x62\x9d\x13\x81\x2c\x19\x59\x4e\x13\x8c\xff\xfb\xb0\x65\xa7\xe9\x2a\xa7\xee\x1e\xc6\xf2\x12\xeb\x7c\xf7\xe9\xfb\xee\x93\xce\x6d\xdb\x0a\x2e\xa4\x66\xc0\xd2\x08\x52\xd8\x75\xdd\x07\x00\x80\x54\xc8\x1d\xe4\x8a\xea\x3a\xf3\x6f\xa0\x20\xc1\x08\x52\x64\xd8\xb6\xad\xe5\x4a\x51\xce\x10\x3f\x58\x2e\xe4\x1e\x30\x46\xc0\xa8\xaf\x8e\x0a\xa9\x1c\xdb\xa8\x6d\xdb\xf8\x4e\x0b\xde\x77\x5d\x87\xe0\x68\x2d\xfb\x45\x86\xd1\x35\x82\x35\x8a\x33\x14\x92\x94\xd9\x20\x90\x95\x14\x29\x5a\xb3\x52\x2c\xd6\x87\xbf\xc0\x8f\x9c\x74\x8a\x11\x6a\x77\xe8\x81\xcd\x8e\x6d\xa1\xcc\x53\x74\xf8\x5c\xe7\xd6\x28\x85\xab\x41\x53\x50\x57\x34\xd1\x18\x49\x99\xbc\x29\x59\xbb\x93\x92\x70\x59\x6e\xb4\x7b\x9d\x17\xce\xdd\x32\x09\xb6\x81\xd4\x21\x7d\xdd\x38\x67\x34\xb8\x43\xc5\x19\xfa\x05\x4e\xf5\xb9\x32\x35\x23\x08\x72\x14\x09\x59\x97\xf2\x08\x8a\xab\x0b\x27\x4b\xae\x6f\xd3\xc4\xd7\xcc\xa0\x6f\x6f\x5e\x72\x19\x5b\xb5\xd4\xc7\xc7\x40\x9f\xc3\x3b\xf5\xbf\x3e\xf9\x9e\x4a\x9e\x4e\x51\x90\x51\x5d\x92\x52\xab\xb6\x6d\x07\x34\xb8\x0c\x72\x00\xbc\xea\xba\x2e\x4d\x7c\x72\x58\x5a\xb2\xbd\x09\x74\x3f\x11\x72\xb7\xc4\x94\xb5\x11\x87\x39\x4b\xb6\x37\xab\x9f\xa6\xb1\x39\x87\xf7\x18\xa5\x3a\x2e\x2b\x45\x8e\x01\xeb\x21\xf9\x31\x37\xba\x90\x1b\x84\x4b\xcd\x4f\x3f\xa8\x02\xfc\x75\xa8\x18\x21\xee\xff\x00\x3d\x22\x42\xfc\x75\x48\xbb\x73\x5c\x02\x7a\xcd\x38\x89\xbf\x9a\xeb\x5c\x4f\xe9\xdb\xe0\xc8\x42\x4a\xa3\x7d\xe7\x29\x79\xc4\x17\x94\x62\x1f\x7b\x1f\xb3\x2f\xb9\x93\x46\x2f\x64\x46\x43\xf2\x1b\xcc\x3c\xe2\x4b\x66\x3e\xb6\x8c\xd9\xe2\x63\x50\x18\xe3\xe6\xef\xa6\xa6\xdd\xc9\x7c\xca\x30\x8e\xe3\xd9\xe3\x9f\x36\x6a\x82\xae\x68\x33\x8b\x79\xec\x88\x2c\x60\xe3\xc0\x5f\x2e\xf8\x74\xee\xca\x8c\xf8\x4a\x1e\xf1\x2d\xef\xa4\x69\xea\xb3\x5b\x1c\xeb\x28\x38\x3f\x7c\xd0\x99\xcd\xa6\x9f\x7b\x63\x6c\x6b\xb9\xc8\xf0\xe3\xd2\x09\x4c\x42\x4c\x02\xa2\xeb\x7e\xd0\x2f\xe1\x33\x70\xaa\x2b\xd2\xbe\xb3\x5b\x29\x04\xeb\x0c\x9d\x6d\x18\x57\x17\x8a\xac\xbd\x4d\x93\xfe\xfd\x0a\x1e\x2c\xef\x96\x28\x4c\xe8\xad\x8d\xd3\x44\xc9\x37\xfc\x60\x2d\xce\x9b\xe0\x3d\x53\x47\xcf\x2e\xbd\x7c\xc7\xe5\x77\xd6\x10\x5d\xcf\x5e\x91\x13\x1a\xcf\x1e\x6a\xde\x87\xbe\x1e\x81\x9a\x7f\xe2\xdf\xbb\xec\xbb\xe7\xbd\x3b\xe3\xa1\x3d\xf1\xf0\xff\xb0\x2f\x4d\x9a\xd9\xaf\x88\xa6\xd0\xa0\x78\x3d\x3f\xfe\x08\x9d\x2c\xc7\xc7\x67\x12\xbf\x03\x00\x00\xff\xff\xed\xb0\x26\x95\x57\x09\x00\x00")

func assetsTmplConfigModalTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigModalTmpl,
		"assets/tmpl/config/modal.tmpl",
	)
}

func assetsTmplConfigModalTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigModalTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/modal.tmpl", size: 2391, mode: os.FileMode(420), modTime: time.Unix(1530370861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigSourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\xc1\x6e\xe2\x3e\x10\xc6\xef\x3c\xc5\xc8\x52\xa5\xf6\x50\x78\x81\xfc\xf9\x1f\xaa\x3d\xf4\xb2\xdb\x85\xde\x91\x71\x26\xc5\x5a\x63\xa7\xf6\x84\x06\x59\xbc\xfb\xca\x76\x16\xb6\xad\x9d\xae\x68\xab\xe6\x06\xf3\x31\xdf\x37\x3f\xe2\x4c\xbc\xf7\x35\x36\x52\x23\x30\x67\x3a\x2b\x70\x25\x8c\x6e\xe4\x03\x3b\x1c\x0e\x93\xaa\x96\x3b\x10\x8a\x3b\xf7\x1f\x23\xbe\x56\x78\x6d\xd1\xb5\x46\x3b\xb9\x43\x36\x9f\x00\x00\x54\xf1\xfb\x67\xa2\xa1\x92\xaa\x6b\x53\xef\x4f\x9f\xc3\xe5\xbd\x97\x0d\xe0\x23\x4c\xef\xf7\x2d\x02\xa3\x27\x49\x84\x36\x1a\xc2\x8b\x2b\x69\x8d\x85\xcb\xa0\xbf\xb3\xd8\xc8\xfe\xf8\x8b\x29\xc9\x2d\x2a\xa9\xd1\xb1\xab\xbc\xa0\xe1\x3b\x63\x25\x05\x41\xae\x7b\x4a\x68\xe7\xd9\x42\x2a\xd6\x73\x27\x2c\xa2\x06\xcd\xb7\xe8\xaa\x19\xd5\xe3\xea\x62\x71\x98\x46\x49\x47\xf7\xd8\xd3\xda\xf4\x30\x5d\x46\xe0\xd3\x65\x74\xf8\x1e\x0c\xe0\xb2\xb5\x52\x53\x03\xec\xc2\x5d\x38\x76\x9a\x68\x9a\x62\xac\x62\x0c\x76\x05\x8c\xf6\x2d\xf2\x0d\xf2\xfa\x9a\xf8\x83\x93\xba\xed\x28\x4b\xf0\x18\xae\x18\xbd\x9a\xe5\x10\x78\xef\x51\xd7\xe5\xff\x24\x87\xdb\x21\xb7\x62\x83\xae\x18\xe4\x4d\xd8\x8f\x1d\x5a\xf9\x59\x9c\x7f\xa6\xe6\x65\xc6\x83\x7b\xc0\xfb\xe5\x2c\x4f\xf7\xf6\xd9\x30\xb1\x17\xaa\xab\x11\x2c\xb6\x2a\xcc\xfd\xff\xfb\xb1\xae\x8d\x51\x4b\x54\x28\x9e\x81\xfd\x96\x8c\x16\x83\x4f\x91\xef\x10\x68\x35\x04\x2a\x1f\x4a\x38\x03\xf2\x3f\x21\x91\xfa\x0f\x12\x7a\x42\xa4\x4f\x64\x72\x9b\x9c\x16\x34\xc2\x63\x48\xb3\xb2\xf4\xc1\x2c\xbe\xe6\xf0\x5a\x74\x9d\x22\x08\x4f\xa6\xf7\x53\x75\xaf\x88\x2e\x62\xfb\xb8\x33\x8a\x44\x53\x84\x55\x88\x10\x4f\x31\x30\x8b\x02\x35\x31\x60\x5b\xd9\x63\xcd\x80\xb5\xa6\xed\x14\xcf\xaf\x9b\x63\xc0\x0f\xe3\x5d\x84\x16\x18\x34\x48\x62\x03\xc2\x74\x9a\x46\x1c\xc7\x60\x79\xef\x29\x3d\xe5\x7e\x34\xb7\x9a\xee\xc8\x1e\x71\xdd\x84\xb6\x65\x52\xd1\x75\x64\x2d\x66\xf3\xbc\x9e\x3e\x3f\xf9\xcb\x15\xef\x14\x17\xbf\xb2\xc4\x47\xf9\x88\x0d\xd7\x1a\xd5\xc8\x3a\x78\x0b\x4e\x6e\x0d\xdc\x0c\x5d\x47\xd8\x0c\x8a\xd1\x45\x70\x3e\xa1\x6a\xf6\xd7\x5b\x51\x35\x8b\xef\x4c\xf3\x49\x35\xab\xe5\x6e\x3e\x39\xc9\x7f\x07\x00\x00\xff\xff\xa9\x14\xf9\x55\x9a\x09\x00\x00")

func assetsTmplConfigSourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigSourceTmpl,
		"assets/tmpl/config/source.tmpl",
	)
}

func assetsTmplConfigSourceTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigSourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/source.tmpl", size: 2458, mode: os.FileMode(420), modTime: time.Unix(1530370965, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4b\x8f\xdb\x36\x17\xdd\xcf\xaf\xb8\x1f\xbf\x2c\x32\x40\x65\x35\xc9\x2e\xb5\x0d\x14\x69\x5a\x04\x68\xd2\xa0\x99\x2e\xba\x1a\xd0\xe2\x95\xc4\x09\x45\x0a\x24\x65\x8f\x2b\xf8\xbf\x17\x24\x25\x59\xaf\x79\xbb\xde\xd8\x7a\x50\xf7\x9e\x73\xee\x21\x25\xde\xba\xae\x19\xa6\x5c\x22\x90\x44\xc9\x94\x67\xd7\x8c\x5a\x7a\xad\xd5\x8e\x1c\x0e\x87\x0b\x00\x80\xa5\xe0\x6b\x7f\xe0\x4f\x18\xdf\x42\x22\xa8\x31\x2b\xc2\x65\x59\xd9\x28\xd3\xaa\x2a\xc9\x71\x84\x1f\xe5\x6f\x41\xaa\x74\xb1\x22\x6a\x8b\x7a\xa7\xb9\x45\xd2\x3e\xe8\xae\x47\x89\x92\x56\x2b\x01\x21\x6d\xa4\xd5\x2e\x92\xb4\x40\x02\x76\x5f\xe2\x8a\x58\xbc\xb5\x04\xdc\x95\x15\xa9\xeb\x7a\xf1\x55\x63\xca\x6f\x0f\x87\xc3\x22\x8c\xda\x52\x51\x35\xb7\xbe\xd0\x02\x0f\x87\x03\x01\x63\xf7\x02\x57\x84\xc4\x8f\x43\x13\x12\xe5\x9c\x31\x94\xf3\xa9\x18\x0a\xb4\xc8\xba\x6c\x29\x15\x06\x27\xe1\xe7\x25\x89\x28\x63\x4a\x92\xf5\x92\x76\xb4\x29\xa4\x34\x12\x99\xfb\x45\xc6\x6d\x9f\xba\x3b\x27\xe0\xb4\x8f\xac\xca\x32\x47\xa3\x50\x8c\x0a\x02\xb9\xc6\x74\x45\xfe\x5f\xd7\xb5\xc6\x52\xd0\x04\xa1\x01\x08\x64\x41\x80\x44\xae\x4e\x51\xca\x85\x45\x1d\x39\xf4\x9f\x24\x43\x07\x9e\xac\x97\x31\x5d\x2f\x63\xc6\xb7\x27\xc0\x6b\x35\x35\x79\x1f\x70\x90\x86\x80\x92\x89\xe0\xc9\xf7\x15\x09\x17\xfe\x54\xbb\xd7\x36\xe7\xe6\x72\x36\x7d\xef\x74\x19\x3b\x5b\xd5\x75\x8d\x92\x39\xa7\x5d\x4c\x9d\x28\x71\x37\xe3\x46\x53\x50\x21\x7a\x21\x5d\x59\x81\x26\x96\x2b\x19\xca\xf7\xb3\x3f\xf6\x86\x28\xd0\xe6\x8a\xad\x48\xa9\x8c\xed\xdc\x57\x56\x42\x44\x9a\x67\xb9\x1d\xbb\x76\x53\x59\xab\x64\xe3\x0b\x53\x6d\x0a\x7e\x7c\x6a\x63\x25\x04\x41\x4a\x51\x99\x81\x6b\x71\xe7\xc8\x86\x87\xfb\x5c\x1d\xb2\x96\x6c\x83\xfa\x3e\xbe\x9e\xe2\xf2\x7f\xbf\xfc\xf1\xe1\xea\xef\xaf\x1f\x21\xb7\x85\x58\x5f\x2c\xdd\x1f\x08\x2a\xb3\x15\x41\x49\x7c\x04\x8b\x45\x29\xa8\x45\x20\x39\x52\x86\x9a\xc0\xa2\x53\x67\xa3\xd8\xbe\x87\xc1\x24\x9a\x97\x16\x8c\x4e\x56\x24\xa6\xc6\xa0\x35\xf1\x8d\x89\x1b\x81\x37\x98\x2a\x8d\x8b\x1b\xe3\xf0\x87\xa1\xeb\x8b\xd9\xa9\xee\x26\x2b\xe5\x12\xf5\x48\xb2\x01\x1a\x49\xb7\x1b\xda\xa2\x19\x2a\xeb\x8b\xc4\xd9\x60\xfa\xb5\x35\x6b\xd0\xc4\xe3\x72\xa1\x4c\x42\x25\x8a\x4a\x58\x5e\x52\x6d\xbd\xa2\x91\xb3\x84\x03\x1c\xe4\xbd\xd3\xda\x37\x55\xb1\x51\x56\x3b\x4b\x0f\xc6\xf8\x71\xf9\x9b\xf5\x07\x9f\xb5\xd2\xd4\xa1\x58\xc6\xf9\x9b\xb9\x61\x6f\xdb\x68\x02\x29\x23\xeb\x0f\x95\xb1\xaa\xe0\xff\x20\xec\x55\xa5\x41\xed\x24\x6c\x94\x05\x6a\xdc\x39\x48\x44\xb6\x8c\xf3\xb7\x23\x57\x05\xcf\x8f\x65\xe3\x29\x2c\x3e\xa3\x31\x34\xc3\xb6\x78\x03\x16\x4e\x2c\xd4\x5a\xe9\xa8\x08\xa3\x3a\x27\x52\x81\xda\x82\xff\x8d\x18\x95\x99\x2b\x8a\xf3\xfd\x31\xda\xcc\xa4\xef\x19\x6f\xc8\xf0\x5d\x37\x2d\x68\x86\x51\x63\xa8\xa9\x14\x57\x3b\x6e\x2d\x6a\xb8\xe2\x05\x0a\x2e\xd1\x4c\x46\x0c\xac\x30\x37\x83\xe1\xb5\xc4\xdd\x67\x5a\x02\x09\x33\x94\x40\x57\x7a\xdb\x46\x8d\x29\x63\xe4\x72\x22\x48\x9c\xbf\x1b\x89\x5a\x89\xae\x32\xdc\xd8\xa8\x92\x7e\xed\x67\x33\xc8\xdd\xc2\xe9\x54\x82\x57\xdc\xad\x8c\x3f\xc0\xab\x36\x1b\xbc\x5f\xc1\x22\xd8\x60\xd1\xf0\x5b\x74\xfc\xc6\x18\xee\xa3\x39\x43\x31\x2c\xd1\x04\x88\x6d\x02\x77\x14\x09\x90\x2f\xfe\x0d\xd6\xe1\xf0\x2f\x30\x20\x7e\xe1\x26\x0d\xcc\x89\x06\xc3\x22\x0e\xd5\xa9\xc4\xa4\xd8\xa7\xa2\x3c\xa0\xdb\xbc\x91\x3a\x92\x57\xfb\x12\x8f\x14\x09\x90\x10\xf9\x93\xc5\xa2\x47\x6f\xc4\x0c\x88\xbb\xff\xbb\x7b\xe5\xbe\x16\x28\xe1\xd5\x9d\x78\x2e\x9f\x21\xe3\x44\xb7\x53\x19\xff\x57\xba\x55\x6e\xdd\x3a\xad\xf1\xd3\x36\xea\x59\x8c\xdf\x66\x9b\x73\x41\xc7\xef\xd4\xc6\xef\x28\x1e\x2b\xd6\x5e\x3a\x83\xf1\x9f\x4d\xf9\x05\xc6\xef\x72\x3e\xd1\xf8\x1d\x9e\x39\xe3\x3f\x24\xe3\x7f\x66\xfc\x6f\x48\x75\x92\x9f\xd8\xf7\xa6\x09\x7a\x16\xdb\x87\x64\x73\x0e\x68\xb9\x9d\xda\xf3\x2d\xbd\x63\xad\xc2\x95\x33\x18\xfe\x79\x64\x5f\xe0\xf6\x26\xe1\x13\xbd\xde\x82\x99\xb3\xfa\xbd\xea\x9d\xdc\xe7\xdf\x04\x4d\xbe\x43\xf3\xf1\x74\x5a\x97\x37\x5f\x6e\xe7\x71\x79\x61\xb2\x7e\xd5\x3d\xad\xf6\x9b\xf0\x64\x06\x37\x3e\x6a\xcb\xeb\x58\xa0\xc2\x64\x67\xf0\xf6\x93\x29\x3e\xc6\xd6\x9e\xd2\xd8\xd4\x2e\xd3\x23\x1d\x3d\x44\x71\xf9\x04\xb1\x5e\x6a\xe5\xdf\x50\xa2\xa6\x62\xea\xa3\x01\xed\x2c\x8c\xba\x76\xd5\x25\xad\x76\xd3\x1c\xf7\xf6\x48\xda\xbd\x70\xd3\x06\xf9\xab\x64\x2e\x74\xd2\xdf\x41\x0d\x36\xca\x1b\x2b\x23\x53\x25\x09\x1a\x33\xde\x63\xe7\x7a\xbc\x67\xeb\xf6\x86\xcd\x9e\x3a\xe5\x02\xa3\xaa\x14\x8a\xb2\xc8\xdd\x9b\xee\x14\xdd\x88\x67\x6e\x17\xa7\x99\x1f\x08\x9e\xe1\xb8\x4d\xd0\x93\x6b\x56\x9d\x8f\xb7\xa5\xd2\x7e\x53\x48\x61\x71\x63\x94\x04\x17\x72\xaa\x4f\xe1\xff\x18\xa6\xb4\x12\xb6\x6b\x5e\x15\x54\x67\x5c\x46\x1b\x65\xad\x2a\xde\xbf\xf9\xb1\xbc\x1d\x2b\x38\xc7\xa4\x5f\xbd\x3b\x65\x9c\x45\xfb\xa9\xf0\x68\xfd\x7e\x76\x50\xd0\x47\xa1\x7e\x0e\x8c\xbb\x4a\xed\x8e\x7d\x80\x16\x69\x00\x10\xfa\x72\xc5\x7e\xa3\xec\xa2\x69\x94\xb4\x5a\x31\x6e\x4a\x41\xf7\xef\xb9\x74\xdf\xff\x3f\x8d\xa5\x0b\xda\xcd\x35\x9f\xe0\xe1\xde\x08\x4d\xdd\xab\x68\xd8\x1a\x09\x51\x42\x8b\x65\x19\x87\x06\xcd\x71\xce\xfe\x1b\x00\x00\xff\xff\xaa\x3c\xde\x59\x4b\x15\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 5451, mode: os.FileMode(420), modTime: time.Unix(1531010875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x51\x73\xe2\x36\x10\x7e\xcf\xaf\xf0\xe8\xb5\x45\xc2\x40\x0f\xda\xc1\xcc\xa4\xb9\x1e\xe1\xae\xb9\x4b\x13\x92\x9b\xf4\x4d\x96\xd7\xb6\x8c\x2d\x39\xda\x35\xc6\x65\xf2\xdf\x3b\x86\x04\x68\x4a\xa6\x74\x26\x6f\xda\x5d\xfb\xfb\xf4\xed\x7e\xa3\x5d\xaf\xd7\x11\xc4\xda\x80\xc7\x52\x90\x11\x38\xf6\xf4\xf4\x74\x36\x6e\xcf\x93\x33\xcf\xf3\xbc\x71\x01\x24\x3d\x95\x4a\x87\x40\x01\xbb\x9b\x7f\xea\x8c\xd8\x61\xc9\xc8\x02\x02\xb6\xd4\x50\x97\xd6\x11\xf3\x94\x35\x04\x86\x02\x56\xeb\x88\xd2\x20\x82\xa5\x56\xd0\xd9\x04\x3f\x7a\xda\x68\xd2\x32\xef\xa0\x92\x39\x04\x3e\x9b\x9c\x6d\x91\x48\x53\x0e\x93\xab\x26\xb4\x34\x16\xdb\xe0\xb9\x92\x6b\xb3\xf0\x1c\xe4\x01\x43\x6a\x72\xc0\x14\x80\x98\x97\x3a\x88\x03\x96\x12\x95\xf8\x8b\x10\x85\x5c\xa9\xc8\xf0\xd0\x5a\x42\x72\xb2\x6c\x03\x65\x0b\xb1\x4b\x88\x3e\xef\xf3\xa1\x50\x88\xfb\x1c\x2f\xb4\xe1\x0a\x91\x79\xda\x10\x24\x4e\x53\x13\x30\x4c\x65\x7f\x34\xe8\xfc\x7a\xff\xa0\xf5\xed\xec\x13\x7c\xf1\xa3\x69\xf1\xf9\xe6\x7c\xd1\xa8\xea\xf2\xfc\xf2\x26\xe9\xf7\xbe\x15\x77\xaa\xae\x87\xd6\xf4\x6f\x1e\xa2\x64\x70\x2f\x7f\xb8\x2e\x6e\xe7\xf8\x97\xf8\xf2\x61\xb4\x0c\xa3\xdf\xb2\x74\x50\x31\x4f\x39\x8b\x68\x9d\x4e\xb4\x09\x98\x34\xd6\x34\x85\xad\xf0\xa5\x71\xa7\x88\x52\x91\xc9\x90\xab\xdc\x56\x51\x9c\x4b\x07\x1b\x45\x32\x93\x2b\x91\xeb\x10\x45\x6c\x0d\x75\x64\x0d\x68\x0b\x10\x03\xfe\x81\xf7\x37\xf2\x0e\xd3\x3b\x85\x27\xb0\x0a\x89\x08\x84\x1b\x0c\x55\x21\xd9\xe2\xd4\x3f\x4f\xbc\x2f\x35\x25\xc8\xd6\x56\x3c\xc3\xce\x6e\x08\x9d\x96\xcf\xe7\x3d\xee\xef\x3f\xc8\xf0\xe0\xe2\x5b\x7e\x54\x4e\x97\xe4\xa1\x53\x7b\xbe\x16\x9a\x27\xd6\x26\x39\xc8\x52\xe3\x2b\xba\xec\xb1\x02\xd7\x08\x9f\xfb\x3d\x3e\x78\x8e\x36\xb0\x19\xb2\xc9\x58\x6c\x01\x27\x6f\xa3\x9f\x6a\xa9\xec\xb5\xa3\xb2\xa3\x86\x9a\xab\x9f\x66\x7f\xe8\xb0\xdb\x1b\x3e\x2e\x9b\xec\xf6\x2a\xbe\xcc\xbe\x5d\xc9\xdf\x17\x71\xf5\xfd\x7e\xf5\xe7\xea\xee\xda\x5c\x7c\x3e\x1f\xe6\xbd\xe2\xe2\xfb\xd7\x59\x39\xfd\xb9\x98\x5e\x7c\x1c\xd5\xd3\xaf\x33\x75\xfd\x71\x38\x5f\xc9\xb7\x0d\xb5\xd7\xf2\x6e\xa3\xda\x4f\x87\x64\x82\xda\x94\x15\x89\x2e\x1f\xf1\xee\xb1\xca\xa1\x4d\x8e\x35\xf2\x5d\xb9\xfe\x3d\xc0\xb7\x89\xcb\x5c\x52\x6c\x5d\xc1\xa9\xd6\x44\xe0\x36\xc4\xb5\x8e\x12\x20\xdc\x4c\x69\xf7\xa6\x55\x14\xb7\x6f\xda\x29\xa0\x2f\x58\x89\xa6\xb4\x0a\xb9\xb6\xff\xf0\xb5\x70\x90\x83\x44\x40\x91\x4b\x02\xa4\x83\x62\x58\x99\x28\x87\x53\xdd\xf7\x1f\x4d\x4b\x65\x0b\x16\x4a\xd7\x0a\x11\x03\xde\xe5\xbe\x7f\x98\xfc\x3f\x6d\xaa\x4c\xb9\x48\xb6\xf8\x2b\x6d\x51\x44\x1a\x69\x7b\x3c\x02\x33\x16\xdb\xc5\xb0\x5e\xaf\xc1\x44\xed\xa6\xf8\x3b\x00\x00\xff\xff\x43\xe0\x04\x39\x40\x06\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1600, mode: os.FileMode(420), modTime: time.Unix(1529763681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\xd5\xcb\x5a\xa0\x32\xd7\x1f\x18\x86\x8e\x11\x50\x24\x43\xdb\xa1\x5d\x83\x26\x1d\xd0\x47\x8a\x3c\x99\x6c\x28\x52\x23\x4f\x4e\x3c\x23\xff\xfb\x40\xca\x4e\xfd\x43\x4e\x9a\xa1\xc1\xda\xbc\x24\x8a\x8e\x77\xdf\x1d\xbf\xfb\xee\xec\xc5\x62\xa1\xb0\x31\x0e\xa1\x30\x4e\xe1\x65\x71\x75\x75\x75\xc0\x1f\x1c\xbf\x3f\x3a\xfb\x74\xf2\x3b\x68\x6a\x6d\x75\xc0\xd3\x2f\xb0\xc2\x4d\x0f\x0b\x74\x45\x75\xb0\x58\x2c\x08\xdb\xce\x0a\x42\x28\x34\x0a\x85\xa1\x80\x49\x3e\x5a\x7b\x35\xaf\x0e\x00\x00\xb8\x32\x33\x90\x56\xc4\x78\x58\x48\xef\x48\x18\x87\xa1\x18\xde\xa5\x9f\x0d\x27\x4e\xcc\x6a\xb1\x72\x72\x6d\xb2\xee\xe2\x73\xdf\xd6\x9e\x82\x77\x6b\x2e\xb2\x8d\x7e\x52\xbd\x9b\xd7\x9e\x38\xd3\x4f\xb6\x5f\x3d\x5d\x9d\xb6\x28\x54\x51\x89\x9e\x7c\x2b\xc8\x48\x61\xed\x1c\xa4\xb7\x16\x25\x81\x70\x0a\xea\xe0\x85\x92\x22\xa6\xa7\x39\x9c\x1b\xa7\x22\xf8\x06\x8c\x6b\x7c\x48\x27\xbc\x83\xc6\x07\x98\xfb\x9e\x33\xfd\xf4\x4b\x18\xce\x94\x99\x55\xe3\x88\x2f\xd0\xda\xa2\x3a\x45\x04\x2e\x40\x07\x6c\x0e\x0b\x4d\xd4\xc5\x17\x8c\x4d\x0d\xe9\xbe\x9e\x48\xdf\x32\x73\x21\x48\x9c\x0b\xd6\xa6\x1c\x8a\xea\x95\xa1\xd7\x7d\xcd\x99\xa8\x72\xc0\xd6\x07\x04\x85\x51\x06\xd3\x25\x14\x11\x44\xed\x7b\x02\xd2\x26\x82\xe8\xba\xc9\x0e\x80\x07\x65\x09\x7f\x99\x98\x10\xbf\x3c\x79\x03\x01\x63\x6f\x09\xca\x72\x0d\xb3\x7e\x5a\xbd\x69\xc5\x14\xe1\xa5\x13\x76\x1e\x4d\x84\x0f\xd9\x2a\x6e\xe5\xa6\xc3\xda\x43\x37\x54\x19\xb4\x88\x20\xa0\x41\x41\x7d\x40\x20\x0f\x22\x39\xf9\x07\x01\xdb\x1a\x95\x42\x05\x26\xf9\x8e\x50\xcf\xa1\x8f\xc6\x4d\xe1\x95\xf7\x53\x8b\xeb\xa0\x4c\x03\xe8\x44\x6d\x51\x4d\x36\x2e\xec\x93\xef\x41\x0a\x07\x52\xa3\x3c\x07\xd2\xb8\x84\x1f\x41\x63\xc0\x7c\x51\x53\x24\x68\x10\x55\x2d\xe4\x79\x5c\xdd\x49\x00\xe9\x5d\x63\xa6\x7d\xc8\x57\x35\xe1\xac\xdb\x40\xfe\xde\x0d\xce\xcc\x54\x13\x74\xc2\x61\x3a\x94\x23\x45\xc4\xfc\x4a\xac\x2a\xb1\xac\x57\x4e\xf2\x73\xf4\x0e\x08\x2f\x69\x13\xe5\x51\x46\xb7\x73\xa7\xd2\xfa\x5e\x4d\xa6\x39\xd9\x7c\xb3\xb3\x9c\x30\x53\x5e\x46\x16\xb0\xc1\x80\x4e\x22\x0b\x18\x89\xcd\x9e\xb0\xa1\x4a\x4c\x38\xe7\x49\x10\x16\xd5\x51\x3a\xbf\x5e\xa5\xf7\x4d\x63\xa4\x11\x16\x3a\x31\xc5\x6d\x46\x90\x30\x36\xe6\x44\x61\x94\x7c\x29\x4b\x9b\x73\xb5\x65\x62\xf1\x76\xd7\x6c\x9b\x96\xa9\x8d\x8d\x9b\x6e\xd9\x2d\x1b\xd5\x34\x30\xc9\x94\x59\x31\xe6\x58\x10\xa6\x56\xdd\xb6\xe5\xfa\xd9\xa6\x5b\x32\x64\xb1\xa8\x76\x39\x30\x50\x0e\x1e\x2e\x16\x8b\x51\xd7\x8f\x38\xd3\xcf\x46\xc1\xa0\x8d\xdf\x24\xf6\xfe\x00\x4e\x6d\xfb\x5f\xb6\xd9\xcd\x25\x4c\xda\x77\x4b\xfd\x3e\x7e\x78\x3b\x0a\x7d\xcd\x57\xf0\x17\x23\x4e\xb6\xad\xa4\xb7\x65\xab\xca\x5f\xf6\x98\x66\xf3\x15\x43\xaf\x4b\x7c\xea\xfb\x20\x53\xed\x8a\x8a\x9b\x76\x0a\x31\xc8\xb5\xb7\x03\xb6\x62\x15\xc1\xb4\xd3\x32\x60\xec\xbc\x8b\x66\x86\xc5\x63\x10\x96\x0e\x8b\x41\x38\x96\x3d\xaf\x52\x93\xef\x94\xb7\xa8\x12\x59\xc7\x33\xd8\x2d\xe3\x8d\xc9\x41\xa4\xb9\xc5\xc3\xc2\xcf\x30\x34\xd6\x5f\xbc\x48\x0a\xfe\x5b\x2b\x2e\x4b\x8d\xa9\x99\x5f\x3c\xff\xf5\xe7\xee\xf2\xa6\x1a\x74\x01\x2b\x2e\xbd\xc2\x6a\x87\x68\x03\x0b\xae\xae\xae\x38\xcb\x06\x9c\x25\xe3\xbb\xe0\xde\xf3\xef\x9b\x38\x8a\x6d\xf5\xa7\x27\x9d\x74\x91\x3c\x44\xed\x2f\x38\xc3\xf6\x3f\xd2\x70\x54\xfc\x5f\xa3\xb0\xa4\x97\x12\x9a\x44\x76\x47\xfc\x4f\x82\x97\x18\xe3\xd2\xb2\x1c\x4c\xcf\x92\xe9\xcd\x03\xe0\x8d\x83\x3c\x03\x1e\x27\xc9\x4c\x7a\x1c\x10\x5a\x61\x9c\x9d\x67\x0d\xad\xd1\xfa\x0b\xe8\x06\xe7\x18\xa1\xc3\x00\x7d\xc4\xb0\xa9\x9e\xc3\x14\xe9\x82\x9f\x19\x85\x5b\xa3\xe4\x5a\xf7\x4d\x80\x48\x82\xfa\xe4\xa6\x46\x29\xfa\x88\xc0\xeb\xca\xe4\xf1\xe3\x7e\x22\x08\x28\xa4\x4e\x47\x52\xe0\x38\xa4\x19\xd0\xa2\x88\x08\x73\x24\xce\xea\x6a\xb2\x01\xbd\xc9\x92\x9f\xe4\x9e\xc7\x2e\x8d\x98\xe5\x5e\x20\x6a\x4c\xab\x4d\x8d\xb6\x54\xc2\x4d\xd3\x86\x72\x4a\xbe\xe3\x2c\x59\x55\x79\xee\x3c\x86\x6e\x70\xec\x3c\x99\x66\x9e\x67\x9e\x6a\x8d\x33\x91\x82\x20\x1f\xe2\xd6\xbc\xd9\x78\x58\x63\x75\x46\xb9\xde\x52\x5b\x7a\x32\x64\xb1\x6e\x3c\x42\x6c\x4e\x49\xa8\xf7\xb0\x94\xc2\x0d\x9d\x40\x6a\x75\xf1\x9c\xd1\x1e\x0f\x2b\xc3\xd3\x5c\xfc\xfd\x76\x9c\x8d\x85\xe2\x6c\x0f\x38\x4e\x5f\xd6\xc2\x3b\x83\x3e\xbb\x30\x44\x18\xe0\xd8\x84\xb4\xad\xbd\xc3\x18\x93\x04\xbd\x35\x91\xd0\x61\xb8\x3d\x99\xbd\x2f\xe1\x5a\x9c\xf1\x6f\x98\x2c\xe3\x0c\x7e\x8f\xdf\x0d\x25\x00\x0a\xfd\x68\x23\x6f\x04\xd1\xcf\xab\xbd\xac\x8a\xbd\x4c\x35\x2f\xc0\xa8\xc3\x82\x86\x18\xa5\x6a\x4b\xbb\xc4\x5f\x0e\x44\x2f\xaa\x97\x92\xcc\x0c\x97\xc4\xe3\x4c\x3f\xbf\x15\xf8\x3e\x91\xf9\x6a\x6c\x4b\xc6\xdf\x0a\x6d\xad\x23\xbe\x0e\xd8\xae\x72\x6d\x60\xba\x23\xaf\xe0\x2e\x34\x39\x33\x2d\xda\xf4\x81\xe6\x7e\x09\xf2\x31\x62\x88\xf7\xca\x91\x24\x9d\xdf\x2d\x4b\xc6\xc1\xfd\x48\x3c\x39\xf1\xd6\xa6\x29\xfc\x87\xaf\xe1\x61\x5a\xac\x1b\x31\xf3\xc1\x50\x9a\x49\x4e\x41\x44\x11\xa4\xc6\xf8\xe8\x5b\xd3\xe7\x04\x83\xf1\xca\xc8\x7b\xe5\x4e\xb7\x0c\x52\x7e\xf6\xf5\xf7\x46\x9d\x51\x6c\x3f\x02\x73\x4e\xad\x90\xe7\x70\xa4\x85\x4b\x1f\xad\xbe\xb9\xbc\x64\xf7\x2b\xaf\xf7\xc2\x8e\x98\x22\x7c\x77\x92\xb2\x07\xd5\xff\xcc\x08\xce\x46\x76\x16\xce\xf2\x5a\xb6\xb3\x80\xaf\xfd\xc9\xd9\x70\x8c\xb3\xe1\xbb\xb3\x2f\xc8\xfe\x0d\x00\x00\xff\xff\x41\x05\xaa\x28\x6b\x13\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 4971, mode: os.FileMode(420), modTime: time.Unix(1530370675, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x4f\x6f\xa3\x3a\x10\xc0\xef\xf9\x14\x96\xdf\x99\xf8\xfe\x94\xa0\x27\x55\x4f\xef\xd2\xf6\xf0\xb6\x7b\xef\x80\x07\x62\xd5\xb1\x29\x1e\x68\x57\x88\xef\xbe\xb2\x0d\x09\xa5\x69\x95\x4d\xd2\xec\x5e\x12\x33\xcc\x1f\xcf\x6f\x66\xb0\xbb\xae\x93\x58\x28\x83\x8c\x1b\x68\x33\xa8\x79\xdf\xf7\x8b\x95\x81\x96\xe5\x1a\x9c\x5b\x0f\x62\x16\xff\x12\x89\x05\x34\x9a\xc6\x47\x65\x5a\xac\x1d\x8e\x8f\x85\x7a\x45\x99\x90\xad\x78\xba\x60\x8c\xb1\x95\x54\x3b\x3f\xb9\x35\x04\xca\x60\x9d\x14\xba\x51\x72\xd0\x98\x6b\x0d\x8e\x36\x08\x12\xeb\x89\x4e\xd0\xcb\x1a\x22\x6b\x66\xaa\x64\xcb\x52\x23\xcb\xad\xd6\x50\x39\x94\x9c\x49\x20\x18\xc4\x3e\x6c\x94\x8f\x62\xa8\x4b\xa4\x35\xff\x2b\x5a\xdf\xa1\x69\x1c\x67\x50\x2b\x48\xf0\xb5\x02\x23\x51\xae\x79\x01\xda\xe1\x2c\x78\xd8\x80\xab\x60\x17\x5e\xe5\xd6\x24\x1e\x58\xba\x12\x5e\x7e\x4d\xf5\x95\x88\x28\x66\x52\x98\xa1\xc9\x6a\x30\x92\xb3\x4d\x8d\xc5\x9a\x0b\x9e\xde\xfd\xc8\x2c\xad\x04\x4c\xd0\x0b\xa9\xda\x4f\x2b\x31\xf2\x63\x7b\x90\x4a\x8e\x6f\x23\xbe\xd9\x2e\x1a\x3d\x71\x31\x76\x86\x81\xf6\x10\x50\xad\x26\xba\x89\x22\xdc\x76\x5d\xa7\x0a\x86\xcf\x6c\x79\x1f\x2c\xef\x61\x8b\xec\xf1\xc6\x9a\x42\x95\x8f\x7d\xdf\x43\x4e\xaa\xc5\xae\xeb\xd0\xc8\xbe\xef\x0f\x38\x7d\x87\x22\xd1\xca\x3c\xed\x30\xe4\xc1\x95\xe0\x69\xf4\xd9\xd4\x40\xca\x9a\x37\x54\xf6\x74\xb4\x9a\x83\x6f\x74\xba\xf8\xfa\x7c\x1f\x5e\x14\x11\xd6\x37\x56\xbb\x8b\x24\x4d\xd1\x5f\xa8\x26\xe6\x3e\x61\x27\x78\x3a\x44\x61\x37\x7b\xe9\x17\x70\x18\x97\xb5\x2a\x37\x74\x60\xeb\x91\x80\x41\xb6\x1c\xf6\x13\x10\xf0\xf0\x21\x3a\x02\xe0\xc7\x30\x62\xee\x1b\xa2\xca\xfd\x2d\x46\x04\xcb\xdc\x6e\x45\xd7\x75\xd3\x60\x1e\xe9\xe8\x36\x23\xc3\x32\x32\x89\x2e\xc3\x9f\xb3\xb9\x02\x9d\xf8\x71\x0c\xcf\x83\x97\x0f\x82\xb2\xf9\x18\x17\xc0\x0a\xf0\xbe\x0a\x18\x4d\xfd\x32\xd6\x73\x37\xdb\xec\x9f\xf7\x1b\x3a\x9c\xd4\x71\xd5\x19\xa8\xa2\x76\x07\x3d\x9d\x01\x11\xaa\xca\x2d\x27\x24\xaf\x8b\xad\x02\xe7\xa6\xdc\x2e\xc1\x28\x0c\xd4\xe2\x93\xa6\xfc\xa6\x21\x7f\x7a\x40\xd8\x5e\xae\x25\x7d\xb5\x83\xdb\xef\xff\xdf\xfe\x42\xef\x39\x6f\x72\x0a\xc2\x60\xf8\x61\xdf\xed\x12\xfc\xe3\xba\x4e\x40\x43\x1b\x11\xd3\xbe\x1a\xa3\x2b\x36\xd9\x19\x83\x98\x5b\xe3\xac\xc6\xa5\xc4\x16\xb5\xad\xb0\x76\xcb\xd2\xda\x52\x63\xf8\xbe\x41\xa5\x9c\xff\x11\xad\x72\xca\x9a\xe1\x95\x97\x86\xd7\xcf\x8d\x25\x70\xc7\x22\x8d\xc6\xa7\x30\x8d\x96\x7e\xb5\x3f\xe5\xfe\x0b\xb2\x7f\x0d\x64\x1a\x25\xa3\xba\xc1\x37\xe7\x5b\x6c\x9e\xa1\x06\x93\x03\xef\x42\xc5\x38\x83\x78\xa9\x68\xd3\x64\x81\x9f\x7a\x01\x82\x27\x10\x5b\x7f\x9f\x3a\x1a\x63\xb0\x3f\x09\x63\xb0\x3c\x30\xbf\xbf\x81\x86\xd0\xb6\xb4\x0d\x8d\xa7\x29\x7f\x77\xe3\x38\x65\xf4\x54\x69\x12\xdb\xd0\xfe\xbb\x74\x1b\x82\x9c\x93\xde\xec\x82\x32\xb9\xe7\x0e\xcb\x95\x30\xd0\xa6\x8b\xfd\x74\xfe\x0c\x00\x00\xff\xff\x26\x65\x2d\xa6\x0a\x0d\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3338, mode: os.FileMode(420), modTime: time.Unix(1530435420, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x41\x6b\x33\x37\x10\xbd\xfb\x57\x4c\x75\xb7\xc5\x97\x63\xd1\x2e\x14\xa7\x87\x10\x42\x0b\x49\x0f\x3d\x19\xad\x34\xf6\xaa\xde\x95\x84\x34\x6b\x63\x16\xff\xf7\x22\xad\x9d\xd8\xc9\xda\x29\xa1\x1f\x38\x17\x1b\x31\x33\x6f\x67\x9e\x9e\x1e\xd3\xf7\xbd\xc6\xa5\xb1\x08\x2c\x22\x75\x9e\xed\xf7\xfb\x89\xf8\xe5\xfe\x8f\xf9\xcb\xdf\x7f\xfe\x0e\x35\xb5\x4d\x39\x11\xe9\x0f\x1a\x69\x57\x05\x43\xcb\xca\x09\x00\x40\xdf\xf7\x84\xad\x6f\x24\x21\xb0\x1a\xa5\xc6\xc0\x60\x96\xca\x53\x54\x54\x4e\xef\x86\xc4\x7c\xd4\x66\x03\xaa\x91\x31\x16\x4c\x39\x4b\xd2\x58\x0c\xec\x2d\xfe\x01\xd0\xca\x4d\x25\x4f\x01\xc7\x90\xfe\xe9\xda\xca\x51\x70\xf6\x1d\x52\xce\xab\x7f\x94\xcf\x69\x22\xc1\xeb\x1f\x63\xe1\xbb\x23\x4a\x83\x52\xb3\xf2\xa5\x36\x11\x4c\x04\xaa\x11\x96\x26\x44\x82\x48\xe8\x81\x1c\x74\x11\xe1\x69\x57\x39\x12\xbc\xbe\x1b\x41\x5a\xba\xd0\x82\xd1\xc5\x81\x40\x90\x8a\x8c\xb3\x05\xe3\xf9\xcc\x19\xb4\x48\xb5\xd3\x05\xf3\x2e\x12\x03\xb4\x8a\x76\x1e\x0b\xd6\x76\x0d\x19\x2f\x03\xf1\x84\x30\xd5\x92\x24\x2b\x45\x3e\x9c\x7f\x45\x70\x6d\x36\xe5\xe4\x3d\x59\x66\x09\xb3\x27\x8c\x51\xae\xf0\x1a\x49\xb2\xc1\x40\x90\x7f\xa7\x5a\xda\x55\xe2\xbd\xef\xfb\x93\xd2\x03\xfe\x3b\x78\xb4\x3a\xc1\xfe\x27\xdc\xad\x0c\xd6\xd8\xd5\xc8\x35\xcc\x1b\xa3\xd6\x20\x24\xd4\x01\x97\x05\xab\x89\x7c\xfc\x95\x73\xe9\x7d\x9c\xd1\xd6\x10\x61\x98\x29\xd7\x32\x20\x19\x56\x48\x05\x5b\x54\x8d\xb4\x6b\x56\xd6\x18\x50\x70\x59\xa6\x1b\x50\x01\x25\x21\x57\x35\xaa\x35\xec\x5c\x17\xc0\x6d\x2d\xbc\x0c\xe5\xf0\x9b\xf7\x63\x74\x5d\xea\x9b\x64\xd5\xe0\x34\x60\xf4\xce\x46\xb3\xc1\x31\xed\xe4\x9c\xb3\x82\x91\xac\x21\xf3\x5c\xe7\x1f\xe3\xe1\x72\x70\x48\xd0\xe5\x71\x90\xb9\xb3\xb1\x6b\x31\xc0\x23\xee\x04\x27\xfd\x79\xe5\xd5\x84\x9c\x64\xac\xef\xe8\x38\x49\xd6\x59\x7a\x7e\xc1\x35\x0c\xd2\xe9\x55\xb4\x83\x24\xbd\x8c\x71\xeb\x82\x66\x60\x65\x8b\x87\xe0\xf1\x9e\x16\xea\xd0\xdf\x62\x8d\x3b\x06\x1b\xd9\x74\x58\xb0\x24\xa5\xc3\x00\xc7\xfe\x1f\x71\xb7\xdf\xef\x2f\x30\xf6\xda\xd9\xd5\x01\x05\xbf\x46\xdc\xd7\x58\x7d\x46\x15\x90\x6e\x9a\xd8\x98\x5b\xbc\xc6\xed\x30\xc4\xcf\xa3\x57\xf0\x0b\x8a\x16\x3c\xbf\x83\xcf\x9d\xe9\x7f\xf4\x08\x33\x8b\x8d\x54\xeb\x64\x10\xd9\x31\xbe\xe2\x12\xcf\x09\xe1\xfb\x7b\xc4\x30\xc6\xbc\x31\x68\x09\x1e\xee\x6f\x49\xc5\xf9\x8e\x16\x2a\xb7\xb6\x30\xfa\x4c\xbd\xb9\xed\xa1\xeb\x87\xfb\x1b\x30\x85\x33\x1a\x6f\xcf\x10\xce\xa8\x1c\x31\x83\x13\x3a\xbf\x81\x11\x0c\x8c\x8c\x0c\x1f\xbb\xaa\x35\x6f\x93\xfd\xe5\x75\xda\xf9\x72\x0a\x18\x9b\x0a\x64\x5a\xa1\xd8\x91\xcd\x8a\x2c\x54\x64\xa7\xb1\x53\x0a\x63\x84\x33\x76\x4f\xbe\x7a\xf2\xaa\x05\x1f\xba\x17\x7c\x58\x61\xdf\x16\x9a\x7f\x03\x00\x00\xff\xff\x0a\x0b\x5f\xe5\xf2\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2802, mode: os.FileMode(420), modTime: time.Unix(1530373814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xbf\x6e\xdb\x3c\x10\xdf\xfd\x14\xf7\xf1\xcb\x18\x4b\x48\xc6\x80\x16\x50\xa4\x1d\x8b\x76\x70\x87\x8c\x27\xf1\x24\x31\xa6\x49\x95\x3c\xc9\x30\x08\xbd\x7b\x21\xc9\x8a\x6c\x25\x01\x8a\x7a\x31\x41\xdf\xfd\xfe\xdd\x99\x31\x46\x45\xa5\xb6\x04\x82\x4f\x9a\x99\xfc\xb3\x33\x41\xf4\x7d\xbf\x91\xff\x7d\xfd\xf1\xbc\x7f\xf9\xf9\x0d\x6a\x3e\x9a\x6c\x23\x87\x2f\x30\x68\xab\x9d\x20\x2b\xb2\x4d\x8c\x91\xe9\xd8\x18\x64\x02\x51\x13\x2a\xf2\x02\x92\xb1\x35\x77\xea\x9c\x6d\x00\x00\xa4\xd2\x1d\x14\x06\x43\xd8\x89\xc2\x59\x46\x6d\xc9\x8b\xe9\xb7\xe1\x73\x03\x62\xb1\xcb\x71\x06\x79\x2b\xb9\x86\x78\x6d\x8f\xb9\x63\xef\xec\x15\xc4\x58\x53\x3f\x64\xfb\xc9\x00\x3c\x3b\x63\xa8\x60\xed\x6c\x90\x69\xfd\xb0\x2e\x7c\x9c\xb1\x0c\xa1\x12\xd9\xaf\xa0\x6d\x05\x73\x6f\xb1\xf4\x02\x3b\x08\xec\x3c\xc1\xd9\xb5\x1e\x4a\xec\x9c\xd7\x4c\xc0\x27\x22\x0e\xa0\x03\x28\x42\x65\xce\xd0\x06\x2a\x5b\x23\xd3\xfa\x71\xa1\x92\xa9\xd2\x5d\xf6\xb1\x87\x13\x19\xb3\x92\xff\xe2\x5a\x28\xd0\x42\x51\x53\x71\x98\xf8\x3e\x52\x54\x93\xa7\x7b\xc8\x5b\x86\xca\x0d\xf2\x24\x42\xed\xa9\xdc\x89\x9a\xb9\x09\x4f\x69\x3a\x6a\x53\x54\x1c\x92\xcb\x34\x93\xc2\x1d\x53\x91\xed\xe7\x7b\x99\x62\x06\xa5\xf3\x70\x1c\x8c\x29\x62\xd4\x26\x24\x9f\xcb\x6e\xcd\xac\xda\x62\x07\x16\xbb\x6d\xa3\x8d\x09\xe3\xe9\xb5\x0d\xac\x4b\x4d\xea\xc6\x4c\x8c\xd1\xa3\xad\x08\xee\x0e\x74\xbe\x87\xbb\x0e\x0d\x3c\xed\x20\x59\xa6\xf2\x1d\x9b\x61\xbe\x57\x33\x31\x1a\xbc\x33\xb4\x13\x8d\xa7\x40\x96\x71\x28\x13\x33\x73\x8c\x51\x97\x40\xbf\xe1\x2e\xf9\x52\xb0\xee\x68\x81\x1a\x49\xfa\xbe\xc7\xf1\x3e\xc6\x48\x56\xf5\x7d\x2f\x32\x89\xa0\x90\x71\xcb\xae\xaa\x06\x60\xc6\x5c\x5c\xb2\xfa\x3f\xc6\x78\x69\x13\xd9\x72\x1e\x92\x91\xa9\xd1\x2b\x2f\x13\xe0\x55\x40\xad\xf9\x64\xac\x8c\xf9\x76\xd8\x70\xb2\xbc\x9a\xee\x3f\x44\x72\x81\xd6\x6a\xb4\x3f\xcb\xbd\xa6\x6a\xd0\x12\x94\xa8\xe8\x2f\xe2\xd1\x16\xde\x25\x74\x43\x36\x12\xe2\x1b\xfc\xb4\x3b\xdb\xca\x6b\x35\xa7\x36\xa8\xe8\xd0\x4c\xe1\xa6\xb8\xfa\x53\x4d\x6b\xb3\xf2\xfc\x2e\xba\x65\xb7\x2e\x67\x99\x4e\x0f\x85\x4c\xa7\x27\x66\x69\xfa\x13\x00\x00\xff\xff\x2f\x94\x81\x14\x98\x04\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 1176, mode: os.FileMode(420), modTime: time.Unix(1530111823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config/general_conf.tmpl": assetsTmplConfigGeneral_confTmpl,
	"assets/tmpl/config/modal.tmpl": assetsTmplConfigModalTmpl,
	"assets/tmpl/config/source.tmpl": assetsTmplConfigSourceTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
				"general_conf.tmpl": &bintree{assetsTmplConfigGeneral_confTmpl, map[string]*bintree{}},
				"modal.tmpl": &bintree{assetsTmplConfigModalTmpl, map[string]*bintree{}},
				"source.tmpl": &bintree{assetsTmplConfigSourceTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

