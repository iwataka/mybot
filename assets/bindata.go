// Code generated by go-bindata.
// sources:
// assets/js/config_after.js
// assets/js/config_before.js
// assets/css/custom.css
// assets/tmpl/config/action.tmpl
// assets/tmpl/config/filter.tmpl
// assets/tmpl/config.tmpl
// assets/tmpl/header.tmpl
// assets/tmpl/index.tmpl
// assets/tmpl/navbar.tmpl
// assets/tmpl/setup.tmpl
// assets/tmpl/twitter-collections.tmpl
// assets/tmpl/twitter-user-search.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsConfig_afterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x8f\xd3\x4c\x0c\xc7\xef\xf9\x14\x56\x9e\x07\x4d\x23\xb5\x89\x84\x38\x65\x9b\xf2\x22\x21\x71\x05\x96\x03\x02\x54\x79\x33\x6e\x32\x30\x2f\xd9\x79\x69\x14\xa2\x7c\x77\x94\xd9\xb4\x5b\x0a\x1c\xf6\x12\x8d\xfd\x77\xfe\xb6\x7f\xf2\x11\x2d\xf8\x5e\x78\x4f\xf6\x75\x5d\x9b\xa0\xbd\x83\x0a\x34\xf5\xf0\x46\x1a\xc3\x5b\x13\x34\x5f\x8d\x09\x00\x47\x1f\xd4\xad\xf9\x41\x5a\xfc\x24\x5b\x5e\xc8\xb9\x3f\x65\x5d\xde\xb7\xc2\x93\xeb\xb0\xa6\x75\x02\x70\x1f\xc8\x0e\x4f\xfc\xc7\x92\x32\x9e\x4a\x98\x7b\x02\x04\x2b\x4b\x60\x79\x5e\x2c\x33\x16\xc1\x91\x75\x85\x23\xb4\x75\x5b\xbc\xbc\xaf\x9e\xbd\xff\xf4\xf6\xc3\x67\xb6\x8e\xd5\xbd\x90\xbc\x46\xcb\x4b\x60\x4b\x3e\x01\x98\x92\x29\xbb\x49\x92\xb8\xe8\xd0\x11\xb6\x84\xfc\x23\x79\x2f\x74\x33\xaf\x3a\xf7\xd1\xa8\xa8\x04\xb6\xf4\xd8\xe0\x02\x22\xba\x72\xe1\x3a\x89\x43\x09\xcc\xd5\x96\x48\xef\xe7\xe2\xa8\x38\x13\x6c\x4d\xe5\x35\xbe\x59\xf2\xa4\x3a\x89\x9e\xdc\x69\x0f\x52\x9d\x1f\x4a\xf8\x12\x03\x00\xb6\xe5\xe2\x08\xb5\x44\xe7\xaa\x34\x6a\x1b\x45\xce\x61\x43\xe9\xb2\x0a\x00\xbb\x1d\x3a\x02\xd4\x83\x6f\x85\x6e\xa0\x25\x4b\x8f\xda\xb6\xe0\xe2\xb8\x63\x31\xfc\x96\x7f\x37\x42\xaf\xd8\x57\xcd\xb2\x87\x02\x17\x9a\x86\x9c\x17\x46\x97\xf0\x0e\x35\x97\x74\x87\xd6\xe5\xb5\x51\x9d\x90\xb4\xfa\x6d\x8a\xdd\x85\xa9\x50\x0d\x38\x5b\x57\xe9\x38\x76\xd6\x1c\x84\xa4\xbd\x50\xd8\xd0\x3e\x58\x39\x4d\x29\xa0\xf4\x55\xba\x28\x10\x95\x14\x5a\x12\x4d\xeb\xab\xf4\xc5\xf3\x14\x7a\xc1\x7d\x1b\x9f\xc5\xa5\xad\xeb\x50\xef\xc6\x71\x06\x37\x4d\xaf\xc6\xf1\x02\xe4\x34\x6d\x8b\x28\x5f\x95\x9f\xd8\x48\xbc\x23\x09\xf1\xbb\xe9\xac\x50\x68\x87\x74\x77\x30\x52\x9a\x9e\xec\x4c\x77\x3c\x07\xfb\x88\xff\x6f\x86\xff\x60\x95\x3d\x1c\x47\x92\xfc\xbf\x62\xff\x9d\x4f\x63\xe3\x85\x22\x29\x34\x41\x7e\xce\xb1\xec\xf1\xbd\xd2\x41\xca\xf5\x9f\xa7\x94\xdd\x5c\xf9\x1c\xf0\x68\xec\x7c\xd9\x4f\x37\xfa\x15\x00\x00\xff\xff\xcd\xfa\x20\x81\x95\x03\x00\x00")

func assetsJsConfig_afterJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_afterJs,
		"assets/js/config_after.js",
	)
}

func assetsJsConfig_afterJs() (*asset, error) {
	bytes, err := assetsJsConfig_afterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_after.js", size: 917, mode: os.FileMode(420), modTime: time.Unix(1529713459, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsConfig_beforeJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\xf0\x54\x39\x68\xa2\xb6\xd7\x7a\xc6\x80\x62\x1b\x56\xa0\x2b\x86\x2e\xdb\xa5\x28\x0a\xd5\x62\x12\x02\x8a\x94\x4a\x74\xb2\x60\xc8\x7f\x1f\x2c\x3b\xfe\x48\x5a\xac\xdb\x8a\x1d\xe6\x8b\x05\xeb\xf1\x99\x7c\x4f\x14\xa7\x85\xcd\x99\x9c\x05\x8d\x06\x19\x6f\xdc\x3a\x79\x28\x98\x9d\x1d\xc1\xc2\x69\x65\x86\xf0\x63\x00\x00\xb0\x52\x1e\xd8\x43\x06\xd5\xae\x5c\x2a\x8f\x96\xaf\x9d\xc6\xce\x32\x8d\x50\x9a\x42\xc2\x5e\xe6\x46\x85\x70\xad\x16\x08\x59\x96\x81\xa8\xf8\xb5\xd8\x11\x96\xcf\xd4\x79\x48\x4a\x66\x82\x0c\x4e\x53\x20\x78\x03\x65\xe4\x9c\x8c\x2e\xf9\x82\x34\x68\x67\x3c\x4f\x81\x8e\x8f\xbb\x81\xbb\x8c\x22\x12\xb2\x7e\xd0\x2d\xdd\xf5\x80\x65\x3e\x71\x57\xf2\x66\x59\x67\x33\x27\xad\xd1\x0a\x38\x3a\xaa\x38\xa4\x75\x1a\xdb\x64\x2f\xaf\x3f\x7f\x9d\x88\xfd\x3f\x96\x4f\x85\x5e\x29\x53\x20\x64\x20\xa6\xca\x04\x14\xe9\x01\xac\x5f\x3f\x88\x27\x20\xb5\x90\x64\x2d\xfa\x8f\x93\x4f\x57\x25\xec\x5d\x14\x69\x0f\xbc\x1d\xf4\x57\x5b\x40\x13\xf0\xbf\x92\x91\x7d\xf1\x12\x15\x77\x67\xe8\x65\x62\xde\xe0\x0a\x3d\xff\x4a\xcc\xc1\x76\x30\x68\x9a\xc0\x2d\xd1\x4e\x68\x81\x86\x2c\x26\xdd\xa3\x1f\x72\x8f\x68\xeb\x3c\xb4\xcb\x8b\x05\x5a\x96\x33\xe4\xf7\x06\xcb\xe5\xc5\xe6\x52\x27\x82\xd7\xc4\x8c\x7e\x1c\x50\xf9\x7c\x3e\xe6\x9a\x69\x1c\xeb\x14\xc3\xaa\xde\xb4\x21\x8d\x0d\x76\xe1\xf4\xe6\x4f\x38\x63\xf0\xf8\xc1\xe9\x8d\x18\x56\x94\x0d\x5d\x5f\x86\x5a\x00\x5e\x33\x7b\xb9\x26\x3d\x43\x0e\x32\xf7\xa8\x18\x9b\x52\x1b\x51\xfa\x4e\x05\x57\xf8\x1c\x27\x9b\x25\x9e\x83\x58\x7a\x37\x25\x83\x62\xd4\x87\x34\xc2\x9c\x77\xd6\xad\xc8\x2d\xba\x49\x6f\xf4\xcc\xdf\x78\x8d\xc8\x57\xb4\x20\x3e\x87\xb3\xd3\x3d\x9f\x86\x07\x3e\x7d\x50\x2b\xe7\x89\x31\xfc\xbd\x51\xd3\x1d\xd5\x6b\x3a\xd5\x92\x1e\x5a\xa5\xbe\x93\x0b\x25\x41\x22\xa4\x3c\xa9\x03\x4f\x9a\x88\x13\x43\x81\xdf\xe6\xae\xb0\x9c\x9d\x9d\x1e\x55\x35\xdd\x5b\xb5\xc0\x4c\xc0\x71\xa7\xc6\x61\xa3\x92\xe4\x39\xda\xa4\x11\x28\xf1\x18\xf6\xfb\xae\xf6\xbc\x54\x39\x7c\x23\x5c\x97\x18\xa9\x15\xab\x51\x5b\xdf\xb0\xed\x96\x6d\x87\x3c\x57\x9c\xcf\x3b\xec\xe8\xfd\x01\xbb\xb3\xc1\x19\x94\xc6\xcd\xe2\x76\x97\x28\x3d\x30\xef\x4b\xd4\xa8\xe7\xdc\x63\x81\xfe\x77\xf4\xad\x5f\xaf\xe8\x58\xfd\x7a\xa9\x5d\x15\xbc\xb5\xe9\x31\x9a\x13\xcb\x78\x1d\x5f\x64\x60\xc5\x45\xc0\xf0\x8f\x0d\x3a\x48\x28\x76\x66\x18\x81\xa6\xd5\x8e\x55\xd3\x6a\xef\x9a\x89\x9f\xe3\x28\xea\x8e\xa1\x18\xf9\xdc\xfc\x89\x33\x2b\x0e\x9e\x08\xbb\xa5\x3b\x49\xfa\x3e\xb0\x6f\x73\x7b\xf2\xda\x2a\xd1\x09\xe9\x2a\xa1\xb4\xb9\xc7\x7f\x06\x00\x00\xff\xff\x9c\x80\xfe\xfd\xcc\x08\x00\x00")

func assetsJsConfig_beforeJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsConfig_beforeJs,
		"assets/js/config_before.js",
	)
}

func assetsJsConfig_beforeJs() (*asset, error) {
	bytes, err := assetsJsConfig_beforeJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/config_before.js", size: 2252, mode: os.FileMode(420), modTime: time.Unix(1529713459, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssCustomCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6a\xeb\x40\x0c\x46\xdf\xbd\x0a\x6d\x60\x4c\x20\x17\x6e\x99\x40\xf6\x22\x8f\x14\x67\x5a\x47\x1a\x64\x25\x4d\x5a\xba\xf7\x62\xc7\x31\x53\x28\xa1\x7e\xf0\xd3\xd1\xd1\xcf\x37\x9d\xd2\x0d\x3e\x1b\x58\xbe\x82\x44\x59\xfa\xe0\x5a\x22\xfc\xdf\x94\xeb\xae\xf9\x6a\x9a\xf6\xf5\x7c\xea\xd4\x4d\xa5\x42\x3b\x4c\x6f\xbd\xe9\x59\x28\x24\x1d\xd4\x22\xb8\xa1\x8c\x05\x8d\xc5\x77\x2b\xe6\x7c\xf5\x80\x43\xee\x25\x42\x62\x71\xb6\xbb\x32\xa9\x38\x66\x61\xab\x94\x27\xbc\x86\xf7\x4c\x7e\x8c\xf0\xb2\x79\x34\xa7\x7c\xa9\xfa\x23\x8c\x05\xa5\x3d\x60\x55\x76\x50\xf1\x30\xe6\x0f\x8e\xf0\xef\x51\x55\x8c\xeb\x59\xd5\x88\x2d\x82\xa8\xf0\xee\xaf\x1b\x4c\x53\x1e\x30\x60\xf2\x7c\xa9\x65\x0b\x4b\x4a\x3d\x5b\x37\x9c\x79\x45\x0b\x8e\xe3\xaf\x6c\x6f\x7c\x9b\x29\xc7\x6e\x60\xd8\x83\x1f\x19\xe9\xe9\x31\x71\xc8\x89\x57\xfb\x5c\xd7\xce\xff\x30\xba\xe5\xc2\x34\x59\xe6\xf4\xf6\xe0\xd6\x12\x0f\xec\x5c\x2b\xb5\x60\xca\x7e\x8b\xb0\x69\xb7\xcf\x76\x5e\x67\x9b\x0e\xed\xd8\x85\x29\x19\x16\xff\x91\x8b\xf5\x59\xee\x8f\x62\xbb\x5c\xf8\x3b\x00\x00\xff\xff\x0a\xc5\xa6\x4c\x39\x02\x00\x00")

func assetsCssCustomCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssCustomCss,
		"assets/css/custom.css",
	)
}

func assetsCssCustomCss() (*asset, error) {
	bytes, err := assetsCssCustomCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/custom.css", size: 569, mode: os.FileMode(420), modTime: time.Unix(1503580372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigActionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x6e\xdb\x30\x0c\xc6\xef\x79\x0a\x42\x40\x81\xf6\x30\x19\xc3\x76\x54\x0d\x0c\x05\x76\x2e\xda\xdc\x07\xd9\xa2\x17\x21\x9e\xe4\x49\x9c\x93\x22\xc8\xbb\x0f\xb1\xe4\xe5\x4f\xed\x4c\xce\xbc\xa3\x29\x91\x1f\x7f\x5f\x48\xc7\xbb\x9d\xc2\x4a\x1b\x04\x26\x4b\xd2\xd6\x7c\x2b\xad\xa9\xf4\x77\xb6\xdf\x2f\x84\xd2\x2d\x94\xb5\xf4\xfe\x91\x91\x2c\x6a\xfc\xe0\xd0\x37\xd6\x78\xdd\x22\xcb\x17\x00\x00\xa2\x8b\x9f\x5d\x82\x70\xd5\x93\xd3\x0d\xaa\xf8\x54\x58\xa7\xd0\xa1\x8a\x69\x21\x75\x85\x52\x1d\x9f\x43\xcc\x9d\x07\x42\x50\xe5\x22\x23\x35\x7c\x62\xe4\x0f\x1c\x3f\x6d\x65\xfd\x6b\xe0\x58\x64\xa7\x42\x22\xbb\x68\x45\x50\x61\xd5\xdb\x79\xca\x6e\xa7\x2b\xb0\x0e\xee\xf1\x27\xf0\xe5\x5b\x83\xc0\x7c\x2d\xcb\x35\x7b\x38\x0d\x6d\xb0\x58\x59\xbb\x66\x0f\xfb\x7d\x12\x18\x38\xbb\xf1\x8d\x34\x8f\xec\x23\xcb\x97\x1b\x4d\x84\x6e\x9c\x86\x36\x88\x34\x7e\xfc\x2e\x18\xfa\x2e\x57\x58\xae\x0b\xbb\x05\xfe\xa5\xfb\x85\x79\xd4\xe1\xcb\x43\x39\xb8\x6f\x9c\x36\x54\x01\xbb\xf3\x77\x9e\x01\x7f\x76\x58\xe9\x2d\x30\x1e\xe6\x81\x53\xbc\xdd\x89\xbf\x03\x8b\xfe\x5d\xf5\x37\xb4\x81\x46\x5d\xe4\x76\x96\x1e\xbd\x8b\x42\x6c\xb2\x75\x9f\x12\xac\x73\x38\xb3\x79\x2f\xa1\x60\xb2\x7d\xb1\x81\x9b\x0d\x1c\x5d\x8d\x4a\xb6\xd6\x69\xba\xb2\x04\x53\xd1\xbe\xc6\x8a\xc9\x6c\x7d\x0b\xf3\xc3\x95\xb6\xae\xb1\x13\xf3\x93\xf9\x6a\xed\x69\x89\x5b\x1a\x42\x7c\x3a\xd6\x4d\xa6\x3c\xe9\xe5\x7f\xae\x41\x78\xab\x4c\x5e\x82\xcf\x2c\x7f\x3d\x64\x8e\xdb\xd4\x68\xf3\xef\x33\xd2\x69\xf0\x67\x6d\xfe\x6a\x5b\xc7\xc1\x1b\x6d\xe6\x9f\x0a\x4f\xf2\xca\xaa\x4f\x43\x79\x25\xe9\x12\x59\x0e\xb2\xf3\xc3\x38\x94\x33\x0e\x78\x80\x7a\xe9\x6b\x26\x92\xfd\xe9\x61\xd6\xc1\x1e\x44\x1e\x79\xe9\xc3\x90\xee\xc5\xff\xe3\x95\xf9\x1e\x92\xef\xdd\x2b\x57\xd2\x18\xac\xe7\xf4\xf7\x29\x96\x4c\xb4\xb7\xef\xe0\x26\x77\x45\x76\xf2\x35\x22\xb2\xee\x7b\x2a\x5f\x88\x4c\xe9\x36\x5f\xf4\xdc\xbf\x03\x00\x00\xff\xff\x1e\x69\xb6\xee\xc6\x09\x00\x00")

func assetsTmplConfigActionTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigActionTmpl,
		"assets/tmpl/config/action.tmpl",
	)
}

func assetsTmplConfigActionTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigActionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/action.tmpl", size: 2502, mode: os.FileMode(420), modTime: time.Unix(1512482849, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigFilterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x98\xc9\x6e\xf3\x36\x10\xc7\xef\x7e\x8a\x29\x81\x00\xed\xc1\x32\x10\x04\x6d\x0f\xb2\x80\xf4\xe0\x26\x85\x83\x1a\x49\xda\xab\x4d\x5b\x23\x99\x09\x45\xaa\x24\xbd\x41\xf0\xbb\x17\xd4\x96\x28\x91\x63\xc9\x9f\x04\xe4\x18\x9a\xb3\xfc\xfe\x33\xe6\x4c\x9c\x24\x3e\x06\x4c\x20\x90\x80\x71\x83\x6a\xbe\x92\x22\x60\x21\x39\x1e\x07\xae\xcf\xb6\xb0\xe2\x54\xeb\x31\x31\x74\xc9\x71\xa8\x50\xc7\x52\x68\xb6\x45\xe2\x0d\x00\x00\xdc\xf4\xbc\x72\x09\xb2\xab\xda\x28\x16\xa3\x9f\xff\xb5\x94\xca\x47\x85\x7e\x6e\x96\x99\xae\x91\xfa\x6f\x7f\x67\x67\xaa\x7a\x90\x1d\xfa\xb0\x92\x5c\xc7\x54\x8c\xc9\x35\xf1\xdc\x91\xf1\x6b\x6f\x79\x82\x46\x78\xfa\xd3\x2d\xe5\x9b\x9a\x8f\xdd\xd1\xfb\xa0\xee\xe8\x43\x5a\xae\x59\x4a\xff\xd0\x20\xcd\x24\x61\x01\xe0\x7f\xe0\x3c\x1f\x62\x04\x62\x76\xcc\x18\x54\x56\xc7\x3a\x20\x25\x77\x19\xd0\x6f\xa4\x02\xf7\x27\x0a\x54\x94\xd7\x53\x24\x09\x72\x8d\x50\x89\xa3\x39\x5d\xbd\x9e\x8d\x72\xdd\x2e\x8a\xf0\xeb\x1d\x7a\x31\xb5\x50\x42\x9f\x56\xf9\xd3\x61\xe6\x92\x33\x6d\x9e\x71\x6f\x96\x72\x0f\xce\x24\xed\x34\x67\x96\x3b\x83\x9f\x63\xc5\x84\x09\x80\x5c\xe9\x2b\x4d\xc0\x99\x29\x0c\xd8\x1e\x88\x93\xb5\xa4\x53\x44\x25\xbf\xd4\xa5\x75\xa6\xa2\xf0\x45\x5f\x79\x6b\xaa\x21\x42\x9f\xd1\xd6\x40\x4b\x29\xf9\x13\x72\x5c\x55\x90\xee\xa8\x7e\xb0\xee\xce\x22\xad\xa9\x9e\xa7\x81\x2f\x66\x6a\xd6\x6f\x27\xc9\x37\x8a\x43\xa7\xd5\xfc\xe7\x71\xda\xb8\xa0\x1b\xc5\xe7\xfd\x15\x55\xa1\xd9\x21\x1a\xf4\x3b\x2a\xea\x63\xe1\xef\x2c\x57\x19\xb9\x7b\xa8\x80\x6e\xa5\x62\x06\xc1\xac\x15\xea\xb5\xe4\xed\xe9\x4c\x56\xb1\xbf\x83\x7b\x61\x66\x46\x95\x7c\x93\xdc\xf5\x73\xe1\xf9\x2c\x67\x91\xcc\xbc\x4c\xa6\xc7\x2a\xf6\x40\x5c\x56\xb4\x39\x72\x99\x4e\x9f\xcc\x9c\x8a\xb0\x25\xa4\xcb\x44\xbc\x31\x10\x48\x15\x8d\x89\xdc\xa2\xda\xd9\xc2\x10\x30\x87\x18\xc7\xc4\x0a\x40\xc0\xce\xc5\x31\x49\x92\x1c\x71\x61\x11\x17\x25\xe2\xa2\x40\xb4\xd1\x17\xc7\x23\x81\x74\x52\x5a\x83\x42\xaf\x29\x15\xe1\xf1\x48\x6a\xd2\x6a\xf4\x50\x7d\x9e\x27\xee\x4f\xc3\x21\xfc\xcb\x34\x93\x02\x6e\x67\xf7\x30\x1c\x36\x5c\x04\xca\x89\xf6\x3b\xf1\x32\xfb\x93\x7a\x55\x26\xde\x94\x2e\xf1\xc4\xbc\x6b\xf9\xce\x65\x51\x9d\xd4\xe1\xd9\xae\xd9\x66\x97\xb9\xbd\xdc\x79\xbb\xbc\x89\x71\x43\xbc\x09\x5d\x7d\xb1\xfb\x50\x11\xa2\x02\xce\x5e\x91\xb3\xb5\x94\x6d\xbf\x49\x1d\x36\x59\xae\x48\x40\x57\xe8\xa4\x59\xcd\xdf\xb2\xaa\x6f\xbe\x5c\x70\x0b\xe8\xdc\x5a\x8b\x69\x69\x70\x71\x4f\x9e\xfc\x06\x2e\xf9\x46\x29\xf4\xbf\x9d\x54\x79\x5e\x1f\xc4\x5a\x7c\xad\xd6\x1f\x99\x51\x9f\x7a\xd9\x65\x79\x87\xf4\xfb\xf5\x56\x91\x58\xab\xf6\xba\xcb\x8d\xfa\x54\xec\x45\x1e\xbe\x9d\x58\x2f\xf2\xd0\x4a\xa7\xbf\xe4\xa1\x47\x89\x2a\x0f\xb7\x7d\x7e\xbb\x7c\xb7\xed\x71\xd3\x67\x3b\xd5\xb3\xf3\x57\xbb\x3a\x96\x84\x1f\x51\xf5\xda\xed\x64\xca\x7c\x36\x1f\x4e\xd9\xfd\x9e\x49\x65\x28\x3b\xa5\x94\xa1\x6c\x4c\x28\x43\x79\x39\x9d\x5d\x55\xec\x02\xb4\xa1\x21\x5e\xb8\xac\x7c\xf8\xf7\xbb\xf0\x76\x5a\x8f\x88\x09\xd0\x28\x0c\x8b\x50\xb4\x6f\xff\x72\xed\x9d\x70\x49\xcd\xaf\x37\xef\x57\xdf\x22\xb6\xf3\xc0\xc4\x53\x11\xe1\xac\x90\xbc\xb0\x8a\x98\x98\x97\x89\x75\xbf\x00\x47\x74\xdf\x3b\x37\xdd\x5f\xc2\x4d\xf7\x3f\xc8\xed\x8e\xde\xfd\x92\xe4\x8e\xd2\xdf\xc5\xbc\x81\x3b\xf2\xd9\xd6\x1b\x14\x3b\xf2\xff\x01\x00\x00\xff\xff\x91\x17\xf4\x83\x8e\x13\x00\x00")

func assetsTmplConfigFilterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigFilterTmpl,
		"assets/tmpl/config/filter.tmpl",
	)
}

func assetsTmplConfigFilterTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigFilterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config/filter.tmpl", size: 5006, mode: os.FileMode(420), modTime: time.Unix(1529421105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x51\x6f\xdb\x38\x12\x7e\xcf\xaf\x98\xe3\x2d\xae\x5b\xa0\xb6\xd0\xf6\x6d\xcf\x36\xb0\x48\xb6\x40\x71\xd8\xb6\xd7\x64\x1f\xee\xc9\xa0\xa5\x91\xcd\x96\x22\x75\x24\x15\xc7\x30\xf2\xdf\x17\x14\x29\x59\x96\x25\x59\x4e\xe2\x34\x49\xed\x87\xba\x16\x87\xc3\x6f\x86\xc3\x19\x7e\x13\xd8\xeb\x75\x84\x31\x13\x08\x24\x94\x22\x66\x73\x72\x7b\x7b\x36\xfa\xc7\xc5\xe7\xf3\xab\xff\x7d\xf9\x03\x16\x26\xe1\x93\xb3\x91\x7d\x03\x4e\xc5\x7c\x4c\x50\x90\xc9\xd9\x7a\x6d\x30\x49\x39\x35\x08\x64\x81\x34\x42\x45\x60\x68\x27\xce\x64\xb4\x9a\x9c\x01\x00\x8c\x74\xa8\x58\x6a\x40\xab\x70\x4c\x02\xaa\x35\x1a\x1d\x7c\xd3\x81\x5b\x65\x3a\xc3\x58\x2a\x1c\x7e\xd3\x64\x32\x0a\x9c\xe8\xe4\xcc\x4d\x8c\xd8\x35\x84\x9c\x6a\x3d\xb6\x90\x0c\x65\x02\x15\x71\x4a\xed\xab\xba\xb6\xa0\xd7\x33\xea\xd7\x2e\x05\xaa\x0a\xbe\x65\xc9\x4c\x1a\x25\x45\x45\x41\x2e\xb3\x78\x3b\x39\xcf\x91\x64\x8a\x1a\x26\xc5\x28\x58\xbc\xad\x8b\xbc\x2b\xb4\x70\xa4\x11\x29\xe5\x11\x56\x32\x53\x20\x97\x02\x66\xd2\xbc\xd2\xa0\x65\xa6\x42\xd4\x6f\x20\x66\xdc\xa0\xd2\x40\x45\x04\x34\xb4\x6a\xf5\x28\x58\xbc\xab\xe9\x8d\xa5\x4a\x80\x45\x63\x22\xaf\x51\x2d\x15\x33\x48\xbc\xf4\x98\x78\xf7\x04\x04\x12\x34\x0b\x19\x8d\x49\x2a\xb5\x21\x80\x22\x34\xab\x14\xc7\x24\xc9\xb8\x61\x29\x55\x26\xb0\x6a\x06\x11\x35\xd4\x7a\xd0\x7e\xa8\x2d\xc3\x44\x9a\x19\xb0\x03\x5b\x2b\x39\x35\x3a\x9b\x25\xcc\x10\xb8\xa6\x3c\xc3\x31\xb9\xa4\xd7\x48\x0a\x6b\x67\x46\xc0\xcc\x88\x01\x9f\xe7\x6f\xa9\x62\x09\x55\x2b\x02\xda\xac\x38\x8e\x49\xc4\x74\xca\xe9\xea\x37\x26\x38\x13\x48\x26\x67\x0d\xd6\xd5\xcd\x89\x19\xc7\x8a\x4d\x73\x34\xed\xea\xa0\xf6\xf2\x86\x34\xe2\xbe\x90\x4b\xc1\x25\x8d\xf6\x61\xaf\xb9\xc6\xbb\xeb\x70\xe0\x3d\x36\xe3\x41\xec\xfa\x2b\x3d\xdc\xaa\x1d\x9d\x16\x3b\x01\x41\x13\x8b\x74\x35\x93\x66\xe8\x4f\x78\x2f\x88\xf5\x98\x1a\x05\x11\xbb\xae\xf8\x6c\xbd\x66\x31\x0c\xff\x44\xad\xe9\x1c\x6f\x6f\x1b\x4f\x1f\xe5\xa8\x0c\xe4\xff\x0e\x22\x2a\xe6\xf6\x1c\xaf\xd7\x9b\x49\x5e\xe7\x46\x25\x8a\x68\xeb\x24\x2f\xde\x4f\xae\x96\xcc\x18\x54\x70\xc5\x12\xb4\x30\xed\x89\x7a\xdf\x9c\x0d\x8c\x13\x9d\x66\x1a\xd5\x54\x23\x55\xe1\x82\xc0\xaf\x02\x97\x7f\xd2\x14\xc8\x7f\x70\xb5\x94\x2a\x22\x40\x8c\x57\x45\x80\x5c\x31\xc3\xdd\x7b\xf9\xe8\x73\x8a\xe2\x43\x26\x42\x02\x44\xa6\x28\x2a\x23\x57\xab\x14\xa9\x4d\x77\x04\x8c\xca\x10\xc8\x17\x4e\x43\x5c\x48\x9e\xe7\xbf\x7c\x18\x68\x18\xca\x4c\x98\xdc\xed\xb0\x40\x85\xe4\x35\xb4\x78\xc7\xd0\x19\xc7\x81\x42\x9d\x4a\xa1\xd9\xf5\xce\x06\xe4\xe3\x5b\xc2\xe0\xa6\x68\xa3\x58\x8a\x91\xff\x34\x93\x2a\x42\x85\x51\x53\x38\x18\x8b\x76\xf7\xb9\x1b\x53\xcd\x03\x6e\x30\x9a\xe8\x50\x21\x8a\xdc\x10\x3d\x0a\x4c\x8b\x9a\x42\x1a\x6f\x42\x9e\x45\x08\x0a\x53\xce\xfa\x4c\x60\xc2\x4f\x30\x3d\x84\x73\x9f\xee\x17\x93\x66\x81\xaa\x87\xba\x76\x89\x51\xd0\xe4\x96\x51\xd0\xe2\xc8\x91\xd9\x14\xbc\xfa\x6b\xbd\x56\x36\xe4\xe1\x17\x26\x22\xbc\x79\x03\xbf\x14\x61\x07\xbf\x8d\x61\xe8\x8a\xc9\xd0\x47\xf7\xb0\x8c\xee\x4a\xac\x6c\x2f\xd4\xb5\x5b\x9d\xa9\x7e\xc1\xa2\x08\x45\x91\x08\xfc\x19\x19\x16\x60\xf4\x30\x42\x8e\x06\xa3\x32\xf7\xc4\x94\x6b\x24\x41\xb7\x07\x5b\x07\x9d\xe5\x9c\x69\x73\x85\x37\x66\x26\x6f\x36\x76\x0f\x2f\xf3\x88\xfa\x64\x03\x0a\x1a\x80\xb8\x80\x9b\xe6\x01\x47\x5a\xfc\x00\x6e\x37\xf6\xec\xef\x1e\x74\x33\x29\xf9\x25\x72\x0c\x6b\xf8\xfe\x70\x31\xfc\xd5\x85\x70\x13\x44\x1f\xe5\x53\x1f\xe5\x3f\x04\xe5\x47\x77\x70\xbe\x9a\x46\x84\xfe\x58\x4d\x95\x39\x2e\x3a\xe3\x76\xf7\x73\xfc\x51\x98\x2f\x46\x55\xf0\x9d\xe7\xf9\xaf\x01\x5a\x7e\x88\x8f\x08\x6a\x34\xcb\x8c\x91\xc2\x87\xbd\xfb\xb0\x53\x42\x99\x88\x25\x01\x5b\xa9\x07\x46\xce\xe7\xb6\x0c\x26\x32\xa2\xbc\x78\x46\xd5\x1c\xcd\x98\xfc\xd3\xc3\x1f\x94\xf0\x07\xee\x72\x37\x5d\xaf\xdd\x81\xbe\xbd\x6d\x48\xb8\xf5\x57\x84\x86\x32\xae\xf3\x42\xd0\x8d\x3d\x70\x78\x3b\xcc\x7f\x04\xe7\xf8\x1a\x0d\x52\x84\x9c\x85\xdf\xc7\xc4\xe5\x86\xaf\x72\xf9\xab\x59\x30\xfd\x06\x5e\xf5\x70\xcb\xab\xd7\x64\x72\x91\xcf\xbb\x8f\x51\xcd\x89\x18\x2a\xb7\x84\x66\x37\xec\x29\x6a\xdd\x3e\x6a\xbc\x02\x96\xa6\x06\x34\x8a\x6a\x57\xc1\xfd\x11\xd0\x75\xcb\xfb\x84\xcb\x9d\x2d\x28\xee\x76\x1d\xf9\x17\x1a\x6e\x67\xbb\xe3\x77\xaf\x81\x4f\x45\xa2\xb5\x16\xef\xd6\xdc\x51\x90\xdf\x85\xba\x6e\xab\x0f\x50\x8c\xab\x97\xb7\x3c\x69\x40\x4c\x23\x24\x39\x97\xeb\x93\x2f\xec\x85\x2d\xff\xff\x98\x0c\xde\x12\x50\xd2\x5d\xc2\x29\x97\x73\x02\x54\x31\x3a\xe0\x74\x86\x9c\x63\x34\x5b\xf5\xd2\x38\x30\xf9\xf5\xb5\xc1\x49\x75\xa4\x83\x62\x19\xbf\xa8\x0c\xb3\x04\x45\x5b\x00\xef\x4e\xb7\x44\xbc\x5d\xbe\x79\x8e\x6f\x0c\xdc\x23\x2f\x85\x5c\x6a\xf4\x99\x39\x62\x3a\x61\xa5\x72\x32\xf9\x97\xf5\x8b\xfe\xf7\xfe\x1c\x03\x8e\x48\x6c\x63\x73\x8e\xeb\xbb\x73\x85\x9f\x2f\x5c\x3a\xdf\x66\x20\x3b\x6b\x6d\x93\x9a\xfd\x7e\xb2\xe1\xbc\xcf\x4b\x8b\xf7\x93\x0f\x39\xaa\xee\xb5\xa1\xc6\x88\xbc\x25\x05\xef\x2b\xb9\x90\xa5\x2a\xa4\xac\xd1\x04\x88\x53\x4e\x2a\x65\xdc\x3d\x01\xf2\x45\x61\xcc\x6e\x48\x43\x41\x27\xaf\x3b\x6a\x79\x81\xfa\xf7\xd0\x77\x57\x0e\x40\xed\x32\x70\x0f\xd4\x4e\x79\x15\xb5\x7b\x72\x67\xd4\x07\xef\x5d\x2c\xa5\xb9\x5f\x8c\x97\xb5\x17\x63\x9a\x71\xd3\x12\xed\xe7\xf6\x24\xf4\xa9\xa7\xad\xf8\x5b\x86\x1a\x1e\x1f\xc2\xca\x3f\xd0\x6b\x69\xc9\xc6\x03\xb0\xf2\xb8\x50\x55\xa1\xe5\x1f\x2a\xcf\x6a\xbc\xbc\x3a\x74\x22\xe6\xed\xd2\x2f\x82\x3a\x17\xb1\xd1\x54\xad\xcb\x40\x78\x2c\xea\x5c\x06\xea\xf1\xa9\x73\xb1\x54\x33\x75\xde\x00\x79\x34\xea\xbc\x43\xfb\x4a\x84\x35\xda\xb7\xc1\xf6\x2c\x69\x5f\x09\xff\x44\xfb\xaa\xb4\xaf\xc3\x2d\x2f\x8d\xf6\x95\xa6\x9e\x68\x5f\x7f\x89\xa3\x52\xb6\xbb\x14\x81\x3e\x94\xad\xeb\xac\xdf\x8d\xb2\x75\x68\x3c\x51\xb6\x07\xa4\x6c\x3d\xfc\xfc\x13\x50\xb6\xb2\x04\xb7\x52\xb6\xcd\xd5\xfa\xe9\x50\xb6\x12\x75\x2b\x65\xeb\x87\xfa\x44\xd9\x0e\xa4\x6c\x97\x39\x05\x7b\x08\xc6\x56\x0c\x95\x74\xed\xb2\x78\x50\xe3\x6a\xe5\xf3\x0a\x51\xcb\xef\xca\x8d\x4c\xed\xff\x19\xaa\xd5\xf3\xa6\x68\xd6\x84\x5e\x7f\x05\x55\xa8\x33\xee\xee\x09\x3f\x09\x95\x73\x41\xd3\x54\xc3\x8b\xc0\x7c\x2c\x1e\xa7\xfd\x7a\xc7\xa7\x71\x6e\xa5\xe1\x7f\x5d\x54\xc0\x2e\x02\x1f\x2f\x47\xa5\x6e\x7a\xf3\xb7\x44\x8f\xe7\x6b\x1e\x7c\xf9\x99\xdb\x85\xe4\x22\x73\x6a\x5c\x02\x27\x40\x14\x86\xf6\x3a\x01\x24\x61\x37\xd6\x59\x24\x95\x69\xc6\xa9\x7a\x5c\xbe\xe9\xa1\xd7\xd8\x66\x89\xfa\x59\x92\xcd\x02\xfd\x89\x6b\x56\xb9\x66\xbb\x57\x5e\x1a\xd5\x2c\x2c\x3d\x31\xcd\x87\x94\x38\x2a\x17\x3d\xb8\x8a\xf5\x21\xa2\x1d\x79\xe0\x6e\x3c\xb4\x5d\xe1\x89\x86\x3e\x20\x0d\xdd\xef\xe6\x9f\x80\x85\xfa\xc2\xdc\xca\x41\x0b\x27\x3d\x21\x0a\xea\x21\xb7\x12\xd0\x5e\x90\x4f\xfc\xf3\x40\xfe\xf9\xd9\xd2\x13\xb8\x44\x63\x98\x98\xd7\x8e\xc4\xf3\xa1\x78\x10\x4a\xae\x53\x2a\xc6\xe4\x1d\x99\x7c\x14\x06\x15\xf5\x31\xbb\xa7\x62\x6d\x4d\xcc\xd9\x2f\x7c\x92\x86\xc5\x2c\xa4\xbd\xe6\x1f\x5c\xf1\xfa\x58\x33\x49\x56\x1a\x79\xdc\x93\x5b\x42\xa6\x7b\x11\xcc\xa3\x28\x8d\xfc\x17\x36\x2c\xd7\x83\x14\x15\x93\x11\x0b\xe1\x9b\x9c\x3d\x0a\x9d\xbd\xdf\xf5\x6f\xbd\x0e\x17\x18\x7e\xb7\x1c\xac\x7e\x6d\xa8\x84\xd0\xf0\x77\xce\xe5\xf2\x12\x79\xbc\x49\x45\xac\x32\x4c\xed\xf0\xd4\xba\xf6\xa8\xd4\xab\xca\x60\xbb\xd0\xfe\x65\xf7\xad\x19\x69\xbe\xa5\x47\x05\xd9\xea\xcf\xea\x99\x1a\xe6\xc7\xac\xc9\xad\xa2\x2a\x95\xe6\x52\x4f\xc0\xbb\x0d\xd8\x6b\x4e\x6e\xc0\x7d\x6c\x5f\x77\x77\x58\x2c\x4f\xaf\xf7\x57\x8a\x93\x5a\xd2\x91\xf5\xba\x6e\xe9\x85\x17\xe9\x64\xba\x8f\x73\xc5\xb7\x25\xea\x92\xd3\xf0\x3b\xf8\xaf\xa7\x3c\xdb\xd2\x34\x09\x17\x54\x08\xe4\xf7\x6a\x01\xee\x97\x38\x66\x93\x30\xd1\xf3\x2a\xb7\xca\xf7\xa5\xf8\xda\xd0\xd1\xfb\x83\x3a\x5f\x2d\xf1\xab\x1d\xbf\x3b\x98\xe8\xf9\xf0\xdc\x6f\x19\xd4\x57\x2f\xf6\xf2\xb9\xf4\xb4\x72\xf8\x83\x02\xfe\xa9\xa3\xa5\xdf\xc0\xab\x7d\x3e\x79\x69\xfd\xac\xc2\xd2\x47\xed\x67\xe5\x8c\xdc\xaf\x3c\x10\xb8\x1c\xf8\xed\x7a\xd2\x7d\xae\xa3\xf6\xa8\x0e\x49\xa2\x5d\xed\xa9\xbd\x47\xfa\xb0\xe6\xd4\x3e\x75\xa7\xd6\xd4\x03\xb4\xa6\xfa\x3a\xf9\xa5\x35\xa6\x72\xbb\xab\x6d\x29\x5b\x5c\x77\x7a\x52\xdb\x35\xf6\x47\x75\xa4\x0a\xac\x65\x3f\xca\x62\xdd\x69\x46\x1d\x80\xf5\xd4\x8a\x6a\x6f\x45\x41\x2d\x63\xee\xf9\x79\x0a\x1a\x5b\x7a\xb2\xfd\xeb\x14\xa3\xc0\x65\xe5\x51\xe0\x7e\x15\xa3\x50\xfd\x77\x00\x00\x00\xff\xff\x5c\x57\xea\x62\x42\x43\x00\x00")

func assetsTmplConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplConfigTmpl,
		"assets/tmpl/config.tmpl",
	)
}

func assetsTmplConfigTmpl() (*asset, error) {
	bytes, err := assetsTmplConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/config.tmpl", size: 17218, mode: os.FileMode(420), modTime: time.Unix(1529713459, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x51\x73\xda\x46\x10\xc7\xdf\xf9\x14\x9a\x7b\x6d\xb9\x43\x40\x03\xed\x20\x66\x5c\xa7\xc1\x24\x75\xe2\xda\xd8\x99\xf4\xed\x74\x5a\x49\x27\xa4\x3b\xe5\x76\x85\x50\x19\xbe\x7b\x47\x90\x00\x75\xf1\x94\xce\xf8\xed\x76\x17\x7e\xff\xdb\xdd\xff\x9c\x36\x9b\x08\x62\x6d\xc0\x63\x29\xc8\x08\x1c\xdb\x6e\x3b\x93\xf6\x38\xed\x78\x9e\xe7\x4d\x0a\x20\xe9\xa9\x54\x3a\x04\x0a\xd8\xe3\xe2\x5d\x77\xcc\x4e\x4b\x46\x16\x10\xb0\x95\x86\xba\xb4\x8e\x98\xa7\xac\x21\x30\x14\xb0\x5a\x47\x94\x06\x11\xac\xb4\x82\xee\x2e\xf8\xd1\xd3\x46\x93\x96\x79\x17\x95\xcc\x21\xf0\xd9\xb4\xb3\x27\x91\xa6\x1c\xa6\xb7\x4d\x68\x69\x22\xf6\xc1\xb7\x4a\xae\xcd\xd2\x73\x90\x07\x0c\xa9\xc9\x01\x53\x00\x62\x5e\xea\x20\x0e\x58\x4a\x54\xe2\x2f\x42\x14\x72\xad\x22\xc3\x43\x6b\x09\xc9\xc9\xb2\x0d\x94\x2d\xc4\x21\x21\x06\x7c\xc0\x47\x42\x21\x1e\x73\xbc\xd0\x86\x2b\x44\xe6\x69\x43\x90\x38\x4d\x4d\xc0\x30\x95\x83\xf1\xb0\xfb\xeb\xd3\x17\xad\x1f\xe6\xef\xe0\x83\x1f\xcd\x8a\xf7\xf7\x57\xcb\x46\x55\x37\x57\x37\xf7\xc9\xa0\xff\xa9\x78\x54\x75\x3d\xb2\x66\x70\xff\x25\x4a\x86\x4f\xf2\x87\xbb\xe2\x61\x81\x7f\x89\x0f\x6f\xc6\xab\x30\xfa\x2d\x4b\x87\x15\xf3\x94\xb3\x88\xd6\xe9\x44\x9b\x80\x49\x63\x4d\x53\xd8\x0a\xbf\x0f\xee\x92\xa6\x54\x64\x32\xe4\x2a\xb7\x55\x14\xe7\xd2\xc1\xae\x23\x99\xc9\xb5\xc8\x75\x88\x22\xb6\x86\xba\xb2\x06\xb4\x05\x88\x21\x7f\xc3\x07\xbb\xf6\x4e\xd3\x87\x0e\x2f\x50\x15\x12\x11\x08\x77\x0c\x55\x21\xd9\xe2\xd2\x7f\x5e\x78\x5f\x6a\x4a\x90\xad\xad\x78\x86\xdd\xc3\x12\xba\xad\x9e\xcf\xfb\xdc\x3f\xfe\x20\xc3\x93\x8b\xef\xf5\x51\x39\x5d\x92\x87\x4e\x1d\xf5\x5a\x34\x4f\xac\x4d\x72\x90\xa5\xc6\x67\x72\xd9\xd7\x0a\x5c\x23\x7c\xee\xf7\xf9\xf0\x5b\xb4\xc3\x66\xc8\xa6\x13\xb1\x07\x4e\x5f\xa6\x5f\x6a\xa9\xec\xb9\xa3\xb2\xb3\x86\x5a\xa8\x9f\xe6\x7f\xe8\xb0\xd7\x1f\x7d\x5d\x35\xd9\xc3\x6d\x7c\x93\x7d\xba\x95\xbf\x2f\xe3\xea\xf3\xd3\xfa\xcf\xf5\xe3\x9d\xb9\x7e\x7f\x35\xca\xfb\xc5\xf5\xe7\x8f\xf3\x72\xf6\x73\x31\xbb\x7e\x3b\xae\x67\x1f\xe7\xea\xee\xed\x68\xb1\x96\x2f\x1b\xea\xd8\xcb\xab\xad\xea\xb8\x1d\x92\x09\x6a\x53\x56\x24\x7a\x7c\xcc\x7b\xe7\x2a\xa7\x36\x39\x37\xc8\x57\xd5\xfa\xf7\x02\x5f\x16\x2e\x73\x49\xb1\x75\x05\xa7\x5a\x13\x81\xdb\x09\xd7\x3a\x4a\x80\x70\xb7\xa5\xc3\x9b\x56\x51\xdc\xbe\x69\x97\x40\xbf\xb3\x12\x4d\x69\x15\x72\x6d\xff\xe1\x6b\xe1\x20\x07\x89\x80\x22\x97\x04\x48\x27\xc5\xb0\x32\x51\x0e\x97\xba\xef\x3f\x86\x96\xca\x16\x16\x4a\xd7\x36\x22\x86\xbc\xc7\x7d\xff\x34\xf9\x7f\xc6\x54\x99\x72\x99\xec\xf9\x6b\x6d\x51\x44\x1a\x69\x7f\x3c\x83\x99\x88\xfd\x87\x61\xb3\x01\x13\x6d\xb7\x9d\xbf\x03\x00\x00\xff\xff\xad\x88\x3a\x33\x3c\x06\x00\x00")

func assetsTmplHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplHeaderTmpl,
		"assets/tmpl/header.tmpl",
	)
}

func assetsTmplHeaderTmpl() (*asset, error) {
	bytes, err := assetsTmplHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/header.tmpl", size: 1596, mode: os.FileMode(420), modTime: time.Unix(1529713459, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xb8\xf2\x69\x03\xa6\x68\x6d\x87\x61\xc8\x68\x01\xc1\x32\x6c\x1d\x9a\x2d\x68\xda\x01\x7b\xa4\xc8\xb3\xc5\x86\x22\x35\xf2\xe4\xc4\x33\xfc\xdf\x07\x4a\x56\xa3\xc8\x92\x13\x37\x19\xd2\xf9\xc1\xb6\x7c\x77\xdf\x7d\x77\xdf\x1d\x25\xaf\xd7\x0a\xe7\xda\x22\x30\x6d\x15\xde\xb0\xcd\xe6\x88\xbf\x38\xfb\xe3\xa7\xf7\x7f\x5d\xfc\x0c\x05\x95\x26\x3b\xe2\xf1\x03\x8c\xb0\x8b\x19\x43\xcb\xb2\xa3\xf5\x9a\xb0\xac\x8c\x20\x04\x56\xa0\x50\xe8\x19\x1c\xc7\xc0\xdc\xa9\x55\x76\x04\x00\xc0\x95\x5e\x82\x34\x22\x84\x19\x93\xce\x92\xd0\x16\x3d\x6b\x6d\xf1\xd5\x87\xb0\x62\x99\x8b\x2d\xc4\x27\x87\x3e\xc0\xc7\xba\xcc\x1d\x79\x67\x7b\x00\x8d\x4f\xf1\x32\x3b\x5f\xe5\x8e\x78\x5a\xbc\x1c\x9a\x5e\x75\xd1\x06\x85\x62\x99\xa8\xc9\x95\x82\xb4\x14\xc6\xac\x40\x3a\x63\x50\x12\x08\xab\x20\xf7\x4e\x28\x29\x42\xbc\x5a\xc1\x95\xb6\x2a\x80\x9b\x83\xb6\x73\xe7\x63\x84\xb3\x30\x77\x1e\x56\xae\xe6\x69\xf1\xea\x36\x0d\x4f\x95\x5e\x66\x3d\xc6\x2f\x92\x04\xfe\xd4\x21\x06\x9c\x5e\xbc\x01\x8f\xa1\x36\x04\x49\x92\x8d\x16\x55\x09\x8b\x06\x9a\xf7\x24\xe6\x1a\xd6\x36\x74\x4d\x62\xa7\xb5\x5d\x0c\xfc\xda\x66\xea\x39\x1c\xbf\x29\xc5\x02\x4f\xad\x30\xab\xa0\xc3\x99\x20\xdc\x6c\x76\x3c\x79\xf1\xfa\x2e\x28\x69\x32\xc8\xb2\x5f\x9c\x5b\x18\xec\xb3\x7f\xd7\xb2\xff\x6a\xbd\x1e\x03\xfe\x9a\xa7\xc5\xeb\x31\x22\x68\xc2\x53\xe4\x9d\x84\xb7\x6a\x80\xbe\x55\x61\x7f\xeb\xe2\x5c\xee\xef\xdb\x87\x77\x6f\xc7\x68\xf7\x90\xbc\xbb\x1e\x81\x18\x7a\x49\x67\x92\x52\x25\xdf\x4f\xb8\x36\xee\x02\x0a\x8f\xf3\x19\xeb\x5a\x7b\xe9\x6a\x2f\x71\xb3\x61\x19\xd7\xe5\x02\x82\x97\xb7\xb6\x86\x17\xeb\xd0\x75\xb9\x48\x3c\x86\xca\xd9\xa0\x97\xc8\xbe\x01\x61\x68\xc6\x1a\x47\x10\x51\xa0\x7f\x50\x41\xbe\x82\x9d\xb6\xb2\x8c\xa7\x62\x82\xfd\x6e\x03\xf7\x16\x06\x81\x56\x06\x67\xcc\x2d\xd1\xcf\x8d\xbb\x3e\x89\x9b\xf5\x63\x29\x6e\x92\x02\xf5\xa2\xa0\x93\xef\x7e\xf8\xb6\xba\xd9\x57\x7f\xe5\x31\xe3\xd2\x29\xcc\x86\xc3\xd5\x8a\xbf\xd9\xf0\xb4\x31\xf3\x34\xba\x1e\xc2\x7a\xe2\xe7\xe9\xb9\xc4\x32\xfb\xdd\x51\xa1\xed\x02\xc8\x41\x28\xdc\x35\x4f\xb1\xfc\xac\xd1\x1b\x3d\x0f\x7e\x45\x61\xa8\x90\x05\xca\x2b\x20\x91\x1b\x9c\x3c\x0f\x1a\x6b\x5f\xdd\xc1\x50\xb7\xd1\x7d\xe7\x16\x30\x09\xe4\x75\x85\x6a\x7b\x95\x3b\xaf\xd0\xa3\x1a\x11\x80\x53\x3c\x42\x26\xfa\x49\x7e\x8f\x62\xa4\xb2\x0b\xef\x24\x86\xc0\x53\x9a\x40\xe8\x1c\xfb\x15\x77\xcb\x3c\x15\xc3\xd3\xb1\xb4\x3c\x9d\x20\xca\xe9\xf6\x06\x73\x70\x01\xef\xaf\x35\x11\x7a\x38\xd3\x3e\x9e\xfc\xe7\x18\x42\x5c\x9b\xb7\x3a\x10\x5a\xf4\xf7\x17\x36\x69\x84\xee\x28\xc1\xbf\xe1\x78\x9b\xa6\x85\x3d\x3b\xbf\x24\x41\x75\x00\xf2\xf5\xd8\xf8\xdd\x49\x11\x2a\x61\x41\xab\x19\xa3\x16\x22\x51\x65\x62\xb6\xec\x92\xd0\xe0\x7c\x5a\x3e\xe9\x8c\xf3\x27\xb9\xa9\x91\x65\xa7\x92\xf4\x12\x79\x1a\xe3\xef\x23\x39\xb1\x06\x8f\xe4\xd1\x8c\xdb\x25\xb9\xea\x81\x24\x76\x36\xe9\x4e\xfe\x03\xa7\x05\x0e\x11\xff\x43\x40\xff\xdf\x4a\x1e\x33\x84\xc7\xa8\x5e\x07\xf4\x5f\x86\xee\x0f\x60\xf2\xff\x51\xfe\x02\xbd\x76\x4a\x4b\xf8\xcd\xe5\x4f\x2c\x7c\x07\xfd\x18\xd5\xab\x2d\x46\xf2\xd1\xe5\xcf\x2a\xfa\xfd\x44\xbe\x7c\xcd\x2f\x8d\x90\x57\x4f\xbe\xe6\x0d\x6a\x07\xfa\x39\x5a\x87\x08\xf0\xbc\xab\xfd\x10\x0a\xcf\xaa\x2f\x4f\x47\xee\xf1\x3c\x6d\x9e\x6d\x76\x1e\xb5\x7a\x5f\x79\xda\x86\xf1\xb4\xfd\xcf\xda\xf1\xfa\x37\x00\x00\xff\xff\xb6\x12\x0c\x08\xdf\x0e\x00\x00")

func assetsTmplIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplIndexTmpl,
		"assets/tmpl/index.tmpl",
	)
}

func assetsTmplIndexTmpl() (*asset, error) {
	bytes, err := assetsTmplIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/index.tmpl", size: 3807, mode: os.FileMode(420), modTime: time.Unix(1529726508, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplNavbarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x5f\x6f\xdb\x20\x10\xc0\xdf\xf3\x29\x10\x7b\x76\x78\x9f\x92\x68\x52\x35\xed\xa5\xed\xc3\xd6\xbd\xf7\x6c\xce\x0e\x2a\x01\xd7\x9c\xdd\x4e\x96\xbf\xfb\x04\xd8\x8e\xe7\x26\x53\x94\xb4\xd9\x5e\x12\x7c\xdc\x1f\xee\xc7\x1d\xd0\xb6\x12\x73\x65\x90\x71\x03\x4d\x0a\x15\xef\xba\xc5\xca\x40\xc3\x32\x0d\xce\xad\x7b\x29\x8b\x7f\x89\xc4\x1c\x6a\x4d\xc3\xa7\x32\x0d\x56\x0e\x87\xcf\x5c\xbd\xa2\x4c\xc8\x96\x7c\xb3\x60\x8c\xb1\x95\x54\xa3\x9f\xcc\x1a\x02\x65\xb0\x4a\x72\x5d\x2b\xd9\x6b\xcc\xb5\x7a\x47\x5b\x04\x89\xd5\x44\x27\xe8\xa5\x35\x91\x35\x33\x55\xb2\x45\xa1\x91\x65\x56\x6b\x28\x1d\x4a\xce\x24\x10\xf4\x62\x1f\x36\xca\x07\x31\x54\x05\xd2\x9a\x7f\x8a\xd6\x77\x68\x6a\xc7\x19\x54\x0a\x12\x7c\x2d\xc1\x48\x94\x6b\x9e\x83\x76\x38\x0b\x1e\x16\xe0\x4a\x18\xc3\xab\xcc\x9a\xc4\xf3\xda\xac\x84\x97\x5f\x53\x7d\x25\x22\x8a\x99\x14\x66\x68\xd2\x0a\x8c\xe4\x6c\x5b\x61\xbe\xe6\x82\x6f\xee\x7e\xa5\x96\x56\x02\x26\xe8\x85\x54\xcd\x5f\x77\x62\xe0\xc7\xf6\x20\x95\x1c\x66\x23\xbe\xd9\x2a\x6a\x3d\x71\x31\x54\x86\x81\xe6\x10\x50\xad\x26\xba\x89\x22\xdc\xb5\xad\xca\x19\x3e\xb3\xe5\x7d\x30\xbc\x87\x1d\xb2\xc7\x1b\x6b\x72\x55\x3c\x76\x1d\x64\xa4\x1a\x6c\x5b\x34\xb2\xeb\x0e\x38\x7c\x83\x21\xd1\xca\x3c\x8d\x08\xb2\xe0\x47\xf0\x4d\x74\x58\x57\x40\xca\x9a\x3f\x88\xec\xc9\x68\x35\x87\x5e\xeb\xcd\xe2\xc3\x73\x7d\x78\x51\x44\x58\xdd\x58\xed\x2e\x4f\x98\xa2\xb3\xb0\x8b\x98\xf9\x64\x9d\xe0\x9b\x3e\x04\xbb\xd9\x4b\x3f\x80\xc1\x30\xac\x54\xb1\xa5\x03\x4b\x0f\xd9\x1b\x64\xcb\x7e\x39\x21\x7d\xee\x8f\x9f\x13\xd0\x1d\x47\x11\x33\xdf\x12\x95\xee\xb3\x18\x00\x2c\x33\xbb\x13\x6d\x3b\x0d\xd5\x75\x7c\x70\x9a\x92\x61\x29\x99\x44\x17\xe1\xcf\xd9\x4c\x81\x4e\x7c\x0b\x86\xef\xde\xc7\x91\x90\x6c\xde\xba\x39\xb0\x1c\xbc\xaf\x1c\x06\x53\x3f\x8c\x3b\x39\xf6\x33\xfb\x32\x5f\xce\xe1\x84\x4e\xdb\x97\xc8\x13\xb5\x3b\xe4\xe7\x02\x7c\x50\x96\x6e\x39\x61\x78\x5d\x64\x25\x38\x37\x65\xf6\x0e\x84\x7c\x1b\x2d\x8e\x97\xe2\x0f\x0d\xd9\xd3\x03\xc2\xee\xdd\x0a\xb1\x6d\xa3\xd3\x9f\xdf\x6f\x4f\xaf\x38\xe7\x2d\xce\x81\x17\x0c\x8f\x55\xdb\x98\xdc\xff\x55\x6b\x02\x6a\xda\x8a\x98\xf2\xd5\xf8\x5c\xad\xb4\x2e\x68\xbe\xcc\x1a\x67\x35\x2e\x25\x36\xa8\x6d\x89\x95\x5b\x16\xd6\x16\x1a\xc3\x69\x06\xa5\x72\xfe\x47\x34\xca\x29\x6b\xfa\x29\x2f\x0d\xd3\xcf\xb5\x25\x70\xa7\x02\x8d\xc6\xe7\x10\x8d\x96\x7e\x34\xde\x66\xdf\x82\xe8\xab\x81\x54\xa3\x64\x54\xd5\x38\xb9\xc7\x42\xd9\xf4\xf4\xc7\x6b\xed\x9d\x36\xe1\x02\xd6\x85\xa2\x6d\x9d\x06\x72\xea\x05\x08\x9e\x40\xec\xfc\x6b\xe9\x64\x80\xc1\xfe\x2c\x80\xc1\xf2\x40\xcf\xfe\x03\x1a\x42\xdb\xc2\xd6\x34\xdc\x9a\xfc\xcd\xbb\xe2\x9c\x96\x53\x85\x49\x6c\x4d\xfb\xb3\xe8\x36\x04\xb9\x24\xbd\xd9\x33\x64\xf2\x8a\xed\x87\x2b\x61\xa0\xd9\x2c\x86\xae\xfc\x1d\x00\x00\xff\xff\xe4\x8a\x37\xb0\xe4\x0c\x00\x00")

func assetsTmplNavbarTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplNavbarTmpl,
		"assets/tmpl/navbar.tmpl",
	)
}

func assetsTmplNavbarTmpl() (*asset, error) {
	bytes, err := assetsTmplNavbarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/navbar.tmpl", size: 3300, mode: os.FileMode(420), modTime: time.Unix(1529678301, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplSetupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x4f\x6b\xdb\x4e\x10\xbd\xfb\x53\xcc\x6f\xef\xf6\x92\x1c\x7f\x48\x82\xe2\xf4\x10\x42\x68\xc1\xb9\xf4\x64\x46\xda\xb1\xb5\xb5\xb4\xbb\xec\x8e\x1c\x84\xd0\x77\x2f\x92\xec\xc4\x76\x64\xa7\xa4\x14\x07\x7a\xb1\x35\xcc\xcc\xd3\x9b\x37\x7f\x50\xd3\x28\x5a\x69\x43\x20\x02\x71\xe5\x44\xdb\x4e\xa2\xff\xee\xbe\xcd\x9f\x7e\x7c\xff\x0a\x39\x97\x45\x32\x89\xba\x3f\x28\xd0\xac\x63\x41\x46\x24\x13\x00\x80\xa6\x61\x2a\x5d\x81\x4c\x20\x72\x42\x45\x5e\xc0\xac\x6d\x7b\x5f\x94\x5a\x55\x0f\x61\xbd\xa9\xf4\x16\xb2\x02\x43\x88\x45\x66\x0d\xa3\x36\xe4\xc5\xab\xff\x14\xce\xe0\x36\xc5\x03\xb8\x31\x9c\x9f\x55\x99\x5a\xf6\xd6\x9c\xe0\xf4\x71\xf9\x4d\xb2\xe8\x8a\x89\x64\x7e\x33\xe6\xbe\xdd\xa3\x14\x84\x4a\x24\x4f\xb9\x0e\xa0\x03\x70\x4e\xb0\xd2\x3e\x30\x04\x26\x07\x6c\xa1\x0a\x04\x8f\x75\x6a\x39\x92\xf9\xed\x08\xd2\xca\xfa\x12\xb4\x8a\x77\xda\x01\x66\xac\xad\x89\x85\xec\x6d\x29\xa0\x24\xce\xad\x8a\x85\xb3\x81\x05\x90\xc9\xb8\x76\x14\x8b\xb2\x2a\x58\x3b\xf4\x2c\x3b\x84\xa9\x42\x46\x91\x44\xbd\x31\xf2\x16\x6d\x5c\xc5\xd0\x39\x5f\x5e\x34\xc0\x84\x2a\x2d\x35\x0b\xd8\x62\x51\x51\x2c\x16\xb8\x25\xb1\x2f\x2d\x65\x03\x29\x9b\xa9\xf3\xba\x44\x5f\xf7\xcf\xc5\xfa\x44\xad\x48\x2a\xbd\x4d\x26\x27\x9d\xd0\x2b\x98\x3d\x52\x08\xb8\xa6\x0b\x1d\xc0\x82\x3c\x43\xff\x3b\x55\x68\xd6\x5d\x4b\x9b\xe6\x35\x71\x87\x7d\x0c\x4d\x46\xb5\xed\xe4\xb7\x30\xb5\x59\xd9\xb1\xe6\x22\xe4\x9e\x56\xb1\xc8\x99\x5d\xf8\x5f\x4a\x74\x2e\xcc\xf8\x59\x33\x93\x9f\x65\xb6\x14\xc0\xe8\xd7\xc4\xb1\x58\xa6\x05\x9a\x8d\x48\xe6\x85\xce\x36\x90\x93\xa7\xae\xa7\x99\x27\x64\x92\x59\x4e\xd9\x06\x6a\x5b\x79\xb0\xcf\x06\x9e\x06\x00\xf8\xe2\x5c\x24\x71\x54\xa5\x73\xa4\x19\xd3\x82\xa6\x9e\x82\xb3\x26\xe8\x2d\x8d\x91\xee\x63\x8e\x12\x60\x48\x0b\xec\xb5\x23\xb5\xb3\x52\xeb\x15\x79\x52\x23\x10\x03\xcc\xf1\x62\xbd\xf5\xfb\xf3\xce\x21\x40\x25\xfb\x4a\xe7\xd6\x84\xaa\x24\x0f\x0f\x54\x47\x92\xd5\xfb\x99\x17\x03\xe0\xe2\xa4\x3a\x0c\xe1\xd9\x7a\x25\xc0\x60\x49\x3b\xe7\xbe\x6b\xcb\x6c\x47\x65\xb9\xa1\xfa\x65\x9a\x9b\x66\xb6\xa3\xba\x67\xfa\x40\x75\xdb\x9e\x91\xe6\x85\xc2\xc5\x4a\x22\x79\x49\xa1\x8f\xc9\xb7\xa0\xcc\x13\x7f\x16\x05\x43\xcf\xe6\x82\x88\x03\xdd\xbf\xa6\x63\x24\xcf\xcc\x68\x24\xfb\x11\x7f\xff\xfe\xfc\xf9\x3d\xd0\xb3\x50\x60\xb6\xe9\x8e\x41\x7f\x1d\x3e\x76\x11\x16\x1d\xc6\x3f\x70\x0f\x86\x3a\xe7\x85\x26\xc3\x70\x7f\x77\xa5\x41\xee\x3b\xb6\xcc\x7a\x16\x4b\xad\x0e\x07\xb8\x27\x38\xf0\xbb\xbf\xbb\xfe\x01\x38\xd2\xeb\xaa\xcb\x7f\xa4\xd9\xdb\xc5\x3f\xd0\xed\x53\x2f\xfd\xc1\x3a\x45\x72\xc0\x89\xe4\xf0\xe5\xb9\xff\x60\xf8\x15\x00\x00\xff\xff\x15\x41\x24\x68\xa5\x0a\x00\x00")

func assetsTmplSetupTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplSetupTmpl,
		"assets/tmpl/setup.tmpl",
	)
}

func assetsTmplSetupTmpl() (*asset, error) {
	bytes, err := assetsTmplSetupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/setup.tmpl", size: 2725, mode: os.FileMode(420), modTime: time.Unix(1513780947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterCollectionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xb1\x8e\x9c\x30\x10\xed\xf7\x2b\x26\xce\x95\xd9\x45\x77\x65\x64\x2c\x45\x9b\x94\x51\x52\x5c\x8a\x94\x03\x1e\xc0\x17\xaf\x4d\xec\x81\xd3\xca\xe2\xdf\x23\x60\x39\x58\x14\x29\x0a\x0d\x23\x98\xf7\xde\xbc\xe7\x71\x4a\x9a\x2a\xe3\x08\x04\xbf\x1a\x66\x0a\x67\x6f\xa3\x18\x86\x83\x7c\xf7\xf9\xdb\xf9\xf9\xe7\xf7\x2f\xd0\xf0\xc5\xaa\x83\x1c\x5f\x60\xd1\xd5\xb9\x20\x27\xd4\x21\x25\xa6\x4b\x6b\x91\x09\x44\x43\xa8\x29\x08\x38\x8d\xc0\xc2\xeb\xab\x3a\x00\x00\x48\x6d\x7a\x28\x2d\xc6\x98\x8b\xd2\x3b\x46\xe3\x28\x88\xf9\xdf\xf8\x6c\x29\x1c\xf6\x05\xde\x28\xde\x1a\xb6\x04\x2f\xdd\xa5\xf0\x1c\xbc\xdb\x10\x4c\x3d\xcd\xa3\x7a\x9e\x67\x87\xb3\xb7\x96\x4a\x36\xde\x45\x99\x35\x8f\xfb\xc6\xa7\x85\xcb\x12\x6a\xa1\x7e\x44\xe3\x6a\x58\xb0\xe5\x8a\x05\xf6\x10\xd9\x07\x82\xab\xef\x02\x54\xd8\xfb\x60\x98\x80\x5f\x89\x38\x82\x89\xa0\x09\xb5\xbd\x42\x17\xa9\xea\xac\xcc\x9a\xa7\x55\x4a\x66\xda\xf4\x6a\xe3\xa1\xb3\x8b\xac\xc3\x1e\x1c\xf6\xc7\xd6\x58\x1b\xa7\xea\xa5\x8b\x6c\x2a\x43\xfa\xce\x54\x4a\x01\x5d\x4d\xf0\xf0\x8b\xae\x1f\xe0\xa1\x47\x0b\x1f\x73\x38\xad\xee\xbe\x62\x3b\x0c\x1b\x80\xb4\x06\x82\xb7\x94\x8b\x36\x50\x24\xc7\x38\x76\x89\x45\x37\x25\x53\x01\xfd\x86\x87\xd3\xa7\x92\x4d\x4f\x2b\xd1\x24\x31\x0c\x38\x7d\x4e\x89\x9c\x1e\x06\xa1\x24\x82\x46\xc6\x23\xfb\xba\x1e\x49\x19\x0b\x01\x4d\xa0\x2a\x17\xef\x53\x9a\x21\x42\x2d\x95\xcc\x50\xc9\xcc\x9a\x7b\x07\x13\xd5\x26\x94\xce\xaa\xbf\x9f\x2b\x63\x71\x1c\x97\x83\x1c\xef\x4e\xf6\xbf\x63\xb8\x11\x1b\x3d\x5a\xbe\x8d\xb9\x95\x69\xd1\x11\x54\xa8\xe9\x9f\x81\x18\x07\xbb\x4c\xee\x64\x26\x29\x7c\xa3\x9e\x37\xe8\x58\x07\xa3\x97\x9c\x52\x1a\xe7\x9d\xc2\xcc\x70\xb7\x87\xf3\x82\xdc\x3b\xdd\xc7\xb5\xee\xd0\xad\x96\xd9\x7c\xaf\x64\x36\xdf\xc7\x05\xf2\x27\x00\x00\xff\xff\xc9\x1a\x8d\x48\xc1\x03\x00\x00")

func assetsTmplTwitterCollectionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterCollectionsTmpl,
		"assets/tmpl/twitter-collections.tmpl",
	)
}

func assetsTmplTwitterCollectionsTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterCollectionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-collections.tmpl", size: 961, mode: os.FileMode(420), modTime: time.Unix(1529678301, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTmplTwitterUserSearchTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x8f\xda\x3c\x10\xbd\xf3\x2b\x46\xfe\xa4\x6f\xe1\x90\xa0\x15\xc7\x12\x0e\x5d\xb5\x52\xd5\x43\x7b\xd8\x5b\x55\xad\x9c\x78\x12\x2c\x8c\x1d\x39\x13\xd8\xc8\xf2\x7f\xaf\x9c\x38\x94\x00\x62\xe9\x09\xdb\xbc\x79\xf3\xde\x9b\x01\xe7\x04\x96\x52\x23\x30\x3a\x4a\x22\xb4\x6f\x6d\x83\xf6\xad\x41\x6e\x8b\x2d\xf3\x7e\xb6\x16\xf2\x00\xce\xc9\x12\xd2\xd7\xae\x46\xbe\x45\x2e\xbc\x97\x22\x63\x34\x5e\x13\xe7\xd2\xef\xd8\x1d\x8d\x15\xde\x33\xe7\x50\x0b\xef\xa1\x50\xbc\x69\x32\x56\x1a\xbb\x4f\x2a\x6b\xda\x1a\xa4\xae\x5b\x1a\xce\x6c\x33\x03\x00\x58\xf7\x4f\x10\x98\x32\x46\xf8\x4e\x6c\x2c\xbb\xea\x78\xea\x36\xf2\xf7\xc4\x85\xd1\x64\x8d\x62\x50\x2b\x5e\xe0\xd6\x28\x81\x36\x14\xa7\x3f\xff\xde\xbd\x67\xd0\xeb\x1d\x0c\x26\x83\xb7\x89\xe8\xe4\xc0\x55\x8b\x0c\x8c\xde\x61\x57\x5b\x0c\x0a\x64\x09\x73\x3c\xa0\xa6\x74\x87\xdd\x8b\x11\x08\x59\x96\xc1\xf3\x6a\x01\xc2\x14\xed\x3e\x7c\x51\x21\x7d\x51\x18\x8e\x9f\xbb\x6f\x62\xfe\x74\xaf\x83\xa9\x51\x3f\x2d\xd2\x42\xc9\x62\x37\x5f\x8c\xfe\x9b\x9a\xeb\xd1\xf2\x59\x3c\x49\x4e\x3a\x42\x7a\x58\xde\x12\x99\x13\x30\x27\x0d\x39\xe9\x44\x60\xc9\x5b\x45\x2c\xe6\x37\x80\x18\x08\x4e\x3c\x21\x53\x55\x0a\x33\xb6\x37\x82\xab\xf1\x8d\xdb\x0a\x29\x63\xff\xdd\xd3\x19\x0b\x3e\x0a\x2c\xd8\x09\x79\xf5\x7e\x32\x76\x94\x5a\x98\xe3\x2f\xe7\xd2\x1f\x35\xea\xaf\xad\x2e\xbc\xff\x1d\x6c\x86\xeb\x7a\x39\x48\x8b\x9e\x97\xc1\xf4\x66\xb6\x5e\x0a\x79\xd8\xcc\x86\x05\x8b\xce\xfa\xe6\x50\x72\x81\x1f\x2b\x88\x42\x89\xe7\x52\x0b\x7c\xcf\x58\xf2\xcc\xc0\x9a\x60\x5a\x48\xae\x4c\xc5\x80\x5b\xc9\x13\xc5\x73\x54\x0a\x45\xde\x3d\xc0\x97\x90\x24\x85\xe3\x74\x2e\x95\x25\x23\x71\x6c\x13\xf7\xe0\x7c\x52\x57\x25\x61\x43\xa7\x98\xdb\xb8\xb0\xda\x68\x2f\x60\xe7\xc3\x9f\x0e\x39\xd6\x16\xca\x34\x18\xc7\x2b\x64\xb3\x97\x27\x42\xb6\xf9\x9f\xe4\x1e\x9b\x4f\xd3\xf4\x27\xcc\xdb\xd5\x54\xc3\x60\xfe\xb1\xe4\xc7\xa4\x9c\x4b\x5f\xc3\xc9\xfb\xf5\x72\xbb\xba\x70\x39\x8c\xf8\xbe\xf1\xdc\x88\xee\xd1\x9e\x3d\x76\xf3\x10\x6d\x69\x0c\xfd\x7b\x9e\x57\x3f\xad\x9b\xc9\xbe\x84\xd4\x6f\xe7\x7a\xa1\xed\xec\x1a\x8f\xf1\x23\xfe\x8b\xcd\xfe\x04\x00\x00\xff\xff\xe5\xa4\x22\x8d\x80\x05\x00\x00")

func assetsTmplTwitterUserSearchTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTmplTwitterUserSearchTmpl,
		"assets/tmpl/twitter-user-search.tmpl",
	)
}

func assetsTmplTwitterUserSearchTmpl() (*asset, error) {
	bytes, err := assetsTmplTwitterUserSearchTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tmpl/twitter-user-search.tmpl", size: 1408, mode: os.FileMode(420), modTime: time.Unix(1529713459, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/config_after.js": assetsJsConfig_afterJs,
	"assets/js/config_before.js": assetsJsConfig_beforeJs,
	"assets/css/custom.css": assetsCssCustomCss,
	"assets/tmpl/config/action.tmpl": assetsTmplConfigActionTmpl,
	"assets/tmpl/config/filter.tmpl": assetsTmplConfigFilterTmpl,
	"assets/tmpl/config.tmpl": assetsTmplConfigTmpl,
	"assets/tmpl/header.tmpl": assetsTmplHeaderTmpl,
	"assets/tmpl/index.tmpl": assetsTmplIndexTmpl,
	"assets/tmpl/navbar.tmpl": assetsTmplNavbarTmpl,
	"assets/tmpl/setup.tmpl": assetsTmplSetupTmpl,
	"assets/tmpl/twitter-collections.tmpl": assetsTmplTwitterCollectionsTmpl,
	"assets/tmpl/twitter-user-search.tmpl": assetsTmplTwitterUserSearchTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"custom.css": &bintree{assetsCssCustomCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"config_after.js": &bintree{assetsJsConfig_afterJs, map[string]*bintree{}},
			"config_before.js": &bintree{assetsJsConfig_beforeJs, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"action.tmpl": &bintree{assetsTmplConfigActionTmpl, map[string]*bintree{}},
				"filter.tmpl": &bintree{assetsTmplConfigFilterTmpl, map[string]*bintree{}},
			}},
			"config.tmpl": &bintree{assetsTmplConfigTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{assetsTmplHeaderTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{assetsTmplIndexTmpl, map[string]*bintree{}},
			"navbar.tmpl": &bintree{assetsTmplNavbarTmpl, map[string]*bintree{}},
			"setup.tmpl": &bintree{assetsTmplSetupTmpl, map[string]*bintree{}},
			"twitter-collections.tmpl": &bintree{assetsTmplTwitterCollectionsTmpl, map[string]*bintree{}},
			"twitter-user-search.tmpl": &bintree{assetsTmplTwitterUserSearchTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

