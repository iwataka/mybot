name: build

on: push

jobs:
  build:
    name: Build / Lint / Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go:
          - '1.16'
          - '1.15'
          - '1.14'
          - '1.13'
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - name: Install required packages
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y phantomjs
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.39.0
    - name: Build and test
      run: make

  coverage:
    name: Measure coverage
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        # https://github.com/golang/go/issues/44129
        go-version: 1.15
    - name: Send test coverage to coveralls.io
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        go get github.com/mattn/goveralls@v0.0.8
        go test -coverprofile=profile.cov ./...
        $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github -ignore=mocks/*.go

  docker:
    name: Push Docker image
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: iwataka/mybot:latest
